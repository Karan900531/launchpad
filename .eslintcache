[{"/Users/sudhanshusrivastava/Downloads/launchpad/src/index.js":"1","/Users/sudhanshusrivastava/Downloads/launchpad/src/reportWebVitals.js":"2","/Users/sudhanshusrivastava/Downloads/launchpad/src/App.js":"3","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/Create.js":"4","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/LaunchpadList.js":"5","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/LaunchpadEdit.js":"6","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/CreateToken.js":"7","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/FairLaunchEdit.js":"8","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Projects/Kyc.js":"9","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Privatesale/CreatePrivatesale.js":"10","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Privatesale/PrivateSaleEdit.js":"11","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/Liquiditytokensuccess.js":"12","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/FairLaunchDetail.js":"13","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Projects/Comingsoon.js":"14","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Projects/Home.js":"15","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Lock/TokenLock.js":"16","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/CreateFairlaunch.js":"17","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Lock/LiquidityLock.js":"18","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Privatesale/PrivatesaleList.js":"19","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Lock/CreateLock.js":"20","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Lock/LockInfo.js":"21","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Lock/LockDetail.js":"22","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Lock/UpdateLock.js":"23","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Lock/Viewlockinfo.js":"24","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/Adminlaunchpadsettings.js":"25","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Privatesale/PrivatesaleDetail.js":"26","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/Adminkyc.js":"27","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/Login.js":"28","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/Adminlaunchpad.js":"29","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Projects/Achievement.js":"30","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/TokenSuccess.js":"31","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/AdminTrending.js":"32","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/Adminsettings.js":"33","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/LaunchpadDetail.js":"34","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Projects/Wallethome.js":"35","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Sidebar.js":"36","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Header.js":"37","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Walletmodal.js":"38","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/trendingslider.js":"39","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/Createtab.js":"40","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/Buycard.js":"41","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/WhitelistModal.js":"42","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/Editsettingmodal.js":"43","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/ChangeStatusmodal.js":"44","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/RemoveWhitelistmodal.js":"45","/Users/sudhanshusrivastava/Downloads/launchpad/src/hooks/useAccount.js":"46","/Users/sudhanshusrivastava/Downloads/launchpad/src/hooks/useContract.js":"47","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/Addsettingmodal.js":"48","/Users/sudhanshusrivastava/Downloads/launchpad/src/hooks/useProjects.js":"49","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/Adminsidebar.js":"50","/Users/sudhanshusrivastava/Downloads/launchpad/src/hooks/usebackend.js":"51","/Users/sudhanshusrivastava/Downloads/launchpad/src/hooks/useToast.js":"52","/Users/sudhanshusrivastava/Downloads/launchpad/src/hooks/kycvalidation.js":"53","/Users/sudhanshusrivastava/Downloads/launchpad/src/hooks/useWeb3.js":"54","/Users/sudhanshusrivastava/Downloads/launchpad/src/hooks/useAdmin.js":"55","/Users/sudhanshusrivastava/Downloads/launchpad/src/hooks/filter.js":"56","/Users/sudhanshusrivastava/Downloads/launchpad/src/hooks/useBuy.js":"57","/Users/sudhanshusrivastava/Downloads/launchpad/src/config/env.js":"58","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/Adminheader.js":"59","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/EditTrendingModal.js":"60","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/AddTrendingModal.js":"61","/Users/sudhanshusrivastava/Downloads/launchpad/src/hooks/useWallet.js":"62","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/TokenModal.js":"63","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Settingsmodal.js":"64","/Users/sudhanshusrivastava/Downloads/launchpad/src/config/proxy.js":"65","/Users/sudhanshusrivastava/Downloads/launchpad/src/config/erc20.js":"66","/Users/sudhanshusrivastava/Downloads/launchpad/src/config/presale.js":"67","/Users/sudhanshusrivastava/Downloads/launchpad/src/config/lock.js":"68","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Lock/TransfertokenModal.js":"69","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/Kycmodal.js":"70","/Users/sudhanshusrivastava/Downloads/launchpad/src/config/liquiditytoken.js":"71","/Users/sudhanshusrivastava/Downloads/launchpad/src/config/standard.js":"72","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Privatesale/LaunchpadBuycard.js":"73","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/CreatetabFair.js":"74","/Users/sudhanshusrivastava/Downloads/launchpad/src/routes/adminroutesfront.js":"75","/Users/sudhanshusrivastava/Downloads/launchpad/src/routes/userroutefront.js":"76","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/PlaceholdingLoader.js":"77","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Privatesale/CreatePrivatesaletab.js":"78"},{"size":547,"mtime":1680005612000,"results":"79","hashOfConfig":"80"},{"size":362,"mtime":1680005612000,"results":"81","hashOfConfig":"80"},{"size":4922,"mtime":1680005612000,"results":"82","hashOfConfig":"80"},{"size":4953,"mtime":1680005612000,"results":"83","hashOfConfig":"80"},{"size":59535,"mtime":1680005612000,"results":"84","hashOfConfig":"80"},{"size":13646,"mtime":1680005612000,"results":"85","hashOfConfig":"80"},{"size":17465,"mtime":1680005612000,"results":"86","hashOfConfig":"80"},{"size":12001,"mtime":1680005612000,"results":"87","hashOfConfig":"80"},{"size":19262,"mtime":1680005612000,"results":"88","hashOfConfig":"80"},{"size":6906,"mtime":1680005612000,"results":"89","hashOfConfig":"80"},{"size":12561,"mtime":1680005612000,"results":"90","hashOfConfig":"80"},{"size":8748,"mtime":1680005612000,"results":"91","hashOfConfig":"80"},{"size":29253,"mtime":1680005612000,"results":"92","hashOfConfig":"80"},{"size":3041,"mtime":1680005612000,"results":"93","hashOfConfig":"80"},{"size":41147,"mtime":1680005612000,"results":"94","hashOfConfig":"80"},{"size":17027,"mtime":1680005612000,"results":"95","hashOfConfig":"80"},{"size":4609,"mtime":1680005612000,"results":"96","hashOfConfig":"80"},{"size":12140,"mtime":1680005612000,"results":"97","hashOfConfig":"80"},{"size":65147,"mtime":1680005612000,"results":"98","hashOfConfig":"80"},{"size":24273,"mtime":1680005612000,"results":"99","hashOfConfig":"80"},{"size":11162,"mtime":1680005612000,"results":"100","hashOfConfig":"80"},{"size":9357,"mtime":1680005612000,"results":"101","hashOfConfig":"80"},{"size":7835,"mtime":1680005612000,"results":"102","hashOfConfig":"80"},{"size":10731,"mtime":1680005612000,"results":"103","hashOfConfig":"80"},{"size":10571,"mtime":1680005612000,"results":"104","hashOfConfig":"80"},{"size":39727,"mtime":1680005612000,"results":"105","hashOfConfig":"80"},{"size":10453,"mtime":1680005612000,"results":"106","hashOfConfig":"80"},{"size":5204,"mtime":1680005612000,"results":"107","hashOfConfig":"80"},{"size":44960,"mtime":1680005612000,"results":"108","hashOfConfig":"80"},{"size":15207,"mtime":1680005612000,"results":"109","hashOfConfig":"80"},{"size":10260,"mtime":1680005612000,"results":"110","hashOfConfig":"80"},{"size":10423,"mtime":1680005612000,"results":"111","hashOfConfig":"80"},{"size":9401,"mtime":1680005612000,"results":"112","hashOfConfig":"80"},{"size":42127,"mtime":1680005612000,"results":"113","hashOfConfig":"80"},{"size":32743,"mtime":1680005612000,"results":"114","hashOfConfig":"80"},{"size":15329,"mtime":1680005612000,"results":"115","hashOfConfig":"80"},{"size":12435,"mtime":1680005612000,"results":"116","hashOfConfig":"80"},{"size":3911,"mtime":1680005612000,"results":"117","hashOfConfig":"80"},{"size":3937,"mtime":1680005612000,"results":"118","hashOfConfig":"80"},{"size":88737,"mtime":1680005612000,"results":"119","hashOfConfig":"80"},{"size":14817,"mtime":1680005612000,"results":"120","hashOfConfig":"80"},{"size":6329,"mtime":1680005612000,"results":"121","hashOfConfig":"80"},{"size":4527,"mtime":1680005612000,"results":"122","hashOfConfig":"80"},{"size":3664,"mtime":1680005612000,"results":"123","hashOfConfig":"80"},{"size":7875,"mtime":1680005612000,"results":"124","hashOfConfig":"80"},{"size":3558,"mtime":1680005612000,"results":"125","hashOfConfig":"80"},{"size":31632,"mtime":1680005612000,"results":"126","hashOfConfig":"80"},{"size":4387,"mtime":1680005612000,"results":"127","hashOfConfig":"80"},{"size":15744,"mtime":1680005612000,"results":"128","hashOfConfig":"80"},{"size":3461,"mtime":1680005612000,"results":"129","hashOfConfig":"80"},{"size":16348,"mtime":1680005612000,"results":"130","hashOfConfig":"80"},{"size":380,"mtime":1680005612000,"results":"131","hashOfConfig":"80"},{"size":13564,"mtime":1680005612000,"results":"132","hashOfConfig":"80"},{"size":5117,"mtime":1680005612000,"results":"133","hashOfConfig":"80"},{"size":11398,"mtime":1680005612000,"results":"134","hashOfConfig":"80"},{"size":17353,"mtime":1680005612000,"results":"135","hashOfConfig":"80"},{"size":2582,"mtime":1680005612000,"results":"136","hashOfConfig":"80"},{"size":5034,"mtime":1680005612000,"results":"137","hashOfConfig":"80"},{"size":8103,"mtime":1680005612000,"results":"138","hashOfConfig":"80"},{"size":10283,"mtime":1680005612000,"results":"139","hashOfConfig":"80"},{"size":9387,"mtime":1680005612000,"results":"140","hashOfConfig":"80"},{"size":5042,"mtime":1680005612000,"results":"141","hashOfConfig":"80"},{"size":13891,"mtime":1680005612000,"results":"142","hashOfConfig":"80"},{"size":2076,"mtime":1680005612000,"results":"143","hashOfConfig":"80"},{"size":15986,"mtime":1680005612000,"results":"144","hashOfConfig":"80"},{"size":16047,"mtime":1680005612000,"results":"145","hashOfConfig":"80"},{"size":23035,"mtime":1680005612000,"results":"146","hashOfConfig":"80"},{"size":10122,"mtime":1680005612000,"results":"147","hashOfConfig":"80"},{"size":3904,"mtime":1680005612000,"results":"148","hashOfConfig":"80"},{"size":5654,"mtime":1680005612000,"results":"149","hashOfConfig":"80"},{"size":31398,"mtime":1680005612000,"results":"150","hashOfConfig":"80"},{"size":9861,"mtime":1680005612000,"results":"151","hashOfConfig":"80"},{"size":14401,"mtime":1680005612000,"results":"152","hashOfConfig":"80"},{"size":88716,"mtime":1680005612000,"results":"153","hashOfConfig":"80"},{"size":679,"mtime":1680005612000,"results":"154","hashOfConfig":"80"},{"size":572,"mtime":1680005612000,"results":"155","hashOfConfig":"80"},{"size":489,"mtime":1680005612000,"results":"156","hashOfConfig":"80"},{"size":90249,"mtime":1680005612000,"results":"157","hashOfConfig":"80"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bl3z8h",{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":63,"fixableErrorCount":0,"fixableWarningCount":6,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":1,"source":"191"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"194"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":61,"fixableErrorCount":0,"fixableWarningCount":6,"source":"212"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":3,"source":"215"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"224"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":2,"source":"233"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":2,"source":"242"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":1,"source":"248"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":1,"source":"257"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":3,"source":"263"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":98,"fixableErrorCount":0,"fixableWarningCount":61,"source":"275"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":4,"source":"296"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":42,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":95,"fixableErrorCount":0,"fixableWarningCount":55,"source":"369"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":103,"fixableErrorCount":0,"fixableWarningCount":64,"source":"379"},"/Users/sudhanshusrivastava/Downloads/launchpad/src/index.js",[],"/Users/sudhanshusrivastava/Downloads/launchpad/src/reportWebVitals.js",[],"/Users/sudhanshusrivastava/Downloads/launchpad/src/App.js",["380","381"],"import React from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\nimport './App.css';\n\nimport LaunchpadList from './components/Launchpad/LaunchpadList';\nimport Create from './components/Launchpad/Create';\nimport CreateFairlaunch from './components/Launchpad/CreateFairlaunch';\nimport CreatePrivatesale from './components/Privatesale/CreatePrivatesale';\n\nimport PrivatesaleList from './components/Privatesale/PrivatesaleList';\nimport Home from './components/Projects/Home';\nimport CreateToken from './components/Launchpad/CreateToken';\n\nimport PrivatesaleDetail from './components/Privatesale/PrivatesaleDetail';\nimport PrivateSaleEdit from './components/Privatesale/PrivateSaleEdit';\nimport LaunchpadDetail from './components/Launchpad/LaunchpadDetail';\nimport LaunchpadEdit from './components/Launchpad/LaunchpadEdit';\n\n\nimport FairLaunchDetail from './components/Launchpad/FairLaunchDetail';\nimport FairLaunchEdit from './components/Launchpad/FairLaunchEdit';\n\nimport TokenLock from './components/Lock/TokenLock';\nimport CreateLock from './components/Lock/CreateLock';\nimport LiquidityLock from './components/Lock/LiquidityLock';\nimport LockDetail from './components/Lock/LockDetail';\n\n\nimport Comingsoon from './components/Projects/Comingsoon';\nimport Kyc from './components/Projects/Kyc';\n\n\nimport Login from './components/Admin/Login';\nimport Adminlaunchpad from './components/Admin/Adminlaunchpad';\nimport Adminkyc from './components/Admin/Adminkyc';\nimport Adminsettings from './components/Admin/Adminsettings';\n\n\nimport Wallethome from './components/Projects/Wallethome';\n\nimport TokenSuccess from './components/Launchpad/TokenSuccess';\n\nimport Liquiditytokensuccess from \"./components/Launchpad/Liquiditytokensuccess\";\n\nimport LockInfo from \"./components/Lock/LockInfo\";\n\nimport UpdateLock from \"./components/Lock/UpdateLock\";\n\nimport ViewLockInfo from \"./components/Lock/Viewlockinfo\";\n\nimport Adminlaunchpadsettings from './components/Admin/Adminlaunchpadsettings';\n\nimport Achievement from \"./components/Projects/Achievement\";\nimport AdminTrending from './components/Admin/AdminTrending';\n\n\n\n\n\n\n\n\nfunction App() {\n  return (\n    <div>  \n    <div><Toaster/></div>\n    <Router >\t     \n    <Route exact path='/' component={Home} />\n    <Route exact path='/launchpadlist' component={LaunchpadList} />\n    {/* <Route exact path='/sale/:id' component={Singlesale} /> */}\n    <Route exact path='/create' component={Create} />\n    <Route exact path='/createfairlaunch' component={CreateFairlaunch} />\n    <Route exact path='/createprivatesale' component={CreatePrivatesale} />\n    <Route exact path='/privatesaledetail/:id' component={PrivatesaleDetail} />\n    <Route exact path='/privatesaledetail' component={PrivatesaleDetail} />\n    <Route exact path='/privatesaleedit' component={PrivateSaleEdit} />\n    <Route exact path='/launchpaddetail' component={LaunchpadDetail} />\n    <Route exact path='/launchpaddetail/:id' component={LaunchpadDetail} />\n    <Route exact path='/launchpadedit' component={LaunchpadEdit} />\n    <Route exact path='/launchpadedit/:id' component={LaunchpadEdit} />\n    <Route exact path='/fairlaunchdetail' component={FairLaunchDetail} />\n    <Route exact path='/fairlaunchedit' component={FairLaunchEdit} />\n    \n\n\n\n  \n    <Route exact path='/privatesaleList' component={PrivatesaleList} />\n    <Route exact path='/home' component={Home} />\n    <Route exact path='/createtoken' component={CreateToken} />\n\n    <Route exact path='/tokenlock' component={TokenLock} />\n\n    <Route exact path='/createlock' component={CreateLock} />\n    <Route exact path='/liquiditylock' component={LiquidityLock} />\n    <Route exact path='/lockdetail/:id' component={LockDetail} />\n\n\n    \n\n    <Route exact path='/exchange' component={Comingsoon} /> \n    <Route exact path='/kyc' component={Kyc} />  \n    <Route exact path='/crypto' component={Comingsoon} /> \n\n    <Route exact path='/login' component={Login} />  \n    <Route exact path='/adminlaunchpad' component={Adminlaunchpad} />  \n    <Route exact path='/adminkyc' component={Adminkyc} />  \n    <Route exact path='/adminsettings' component={Adminsettings} />  \n\n\n    <Route exact path='/wallet' component={Wallethome} /> \n    <Route exact path='/tokensuccess' component={TokenSuccess} /> \n    <Route exact path = '/liquidity-tokensuccess' component={Liquiditytokensuccess} />\n\n\n    <Route exact path = '/lockinfo' component={LockInfo} />\n    <Route exact path = '/updatelock' component={UpdateLock} />\n    <Route exact path = '/view-lockinfo' component={ViewLockInfo}/>\n    <Route exact path='/launchpadsettings' component={Adminlaunchpadsettings} />\n\n    <Route exact path='/achievement/:id' component={Achievement} /> \n\n    <Route exact path='/admintrending' component={AdminTrending} />  \n\n\n\n\n    \n\n    \n\n    \n\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/Create.js",["382","383","384","385","386","387","388","389"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\n\nimport Header from '../Header';\nimport Sidebar from '../Sidebar';\nimport Walletmodal from \"../Walletmodal\";\n\nimport Createtab from \"./Createtab\";\n\n\nimport { getAccount } from '../../hooks/useAccount'\n\n\n\n\n\n\n\nimport {  Container } from 'react-bootstrap';\nimport '../../css/styles.css';\n\nimport Trendingslider from '../trendingslider';\n\nimport favicon from \"../../images/favicon.png\"\n\n\nclass Create extends Component {\n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.05;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n  }\n\n  \n\n  \n  onDismiss(){\n    this.setState({ walletModal: false });\n}\n  \n    componentDidMount()\n    {\n      // this.showLoader();\n      document.getElementById(\"launchpad_parent\").classList.add(\"active\");\n\n      this.hideLoader();\n      \n    //   var kyc = sessionStorage.getItem(\"kyc\")\n    // if(kyc == \"false\" || !kyc){\n    //   console.log(\"sessionStorage.getItem\" , kyc)\n    //   this.props.history.push(\"/kyc\");\n    // }\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {          \n            accountInfo: '',\n            walletModal: false,\n        };\n    }\n \n    render() {\n        \n      const location = this.props.location.pathname.split('/')[1];\n\n\n      const {tokenModal,walletModal} = this.state\n      \n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n      <div className='loader_only'>\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n    </div>\n    {/* <div className='load_connect_text'>\n    <button className=\"get-started-btn btn_connect_loader\" onClick={() => this.setState({ walletModal: true })}>\n                     Connect Wallet to Continue\n            </button>\n        </div> */}\n\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n\n           <Header/>\n          \n           <div className=\"whole_sec pb-5\">\n           <div className='flex_side_right'>\n            <Sidebar />\n           {/* ongoing_sec */}\n           <div className='right_side_sec'>\n           {/* <div className=\"text-white topBar d-flex justify-content-between\">\n                  \n                  <small>Trending</small>\n                <small>\n                  #1&nbsp;<span>Husy</span>\n                </small>\n                <small>\n                  #2&nbsp;<span>ORL</span>\n                </small>\n                <small>\n                  #3&nbsp;<span>UWC</span>\n                </small>\n                <small>\n                  #4&nbsp;<span>777</span>\n                </small>\n                <small>\n                  #5&nbsp;<span>IDXS</span>\n                </small>\n                <small>\n                  #6&nbsp;<span>COUGNU</span>\n                </small>\n                <small>\n                  #7&nbsp;<span>CRICLE</span>\n                </small>\n                <small>\n                  #8&nbsp;<span>KASA</span>\n                </small>\n                <small>\n                  #9&nbsp;<span>FIFAPP</span>\n                </small>\n                <small>\n                  #10&nbsp;<span>SOG</span>\n                </small>\n                <small>\n                  #11&nbsp;<span>COOSHA</span>\n                </small>\n                <small>\n                  #12&nbsp;<span>Honey</span>\n                </small>\n                \n                \n              </div> */}\n              {/* <Trendingslider/> */}\n              <div className=\"right_side_spacing\">\n             <Createtab />\n\n            <Container className='pb-5 px-0 mt-4'>\n                 \n                 <center>\n                   <small className=\"mt-3 bottom_text\">\n                     Disclaimer: The information provided shall not in any way\n                     constitute a recomendation as to whether you should invest\n                     in any product discussed. We accept no liability for any\n                     loss occasioned to any person acting or refraining from\n                     action as a result of any material provided or published.\n                   </small>\n                 </center>\n               </Container>\n            </div>\n           </div>\n           </div>\n           </div>\n\n            {/* <Footer /> */}\n        </div>\n        {walletModal && <Walletmodal connect={\"string\"} onDismiss={()=>this.onDismiss()} /> }\n        </div>\n        )\n    }\n}\n\nexport default Create","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/LaunchpadList.js",["390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\n\nimport Header from '../Header';\nimport Sidebar from '../Sidebar';\nimport Trendingslider from '../trendingslider';\n\nimport Buycard from \"./Buycard\";\n\nimport Web3 from \"web3\";\nimport '../../css/styles.css';\n\nimport coin from \"../../images/coin.png\"\nimport favicon from \"../../images/favicon.png\"\n\nimport loader from \"../../images/loader.gif\"\nimport { getlaunchpaddatalimit, getLaunchpadsaleCardLimit, getmycontributiondatalimit, getPrivatesaleCardLimit, getSaleCards, getSaleCardsLimit, getsaledatalimit, getTotalSalesInfo, searchCards, searchSale } from '../../hooks/useProjects';\nimport { Dropdown, Nav, Tab, Row, Col, Container, ProgressBar, InputGroup,Form, Alert } from 'react-bootstrap';\nimport { CHAINS } from '../../config/env'\nimport { getAccount, getChainId, setChainId } from '../../hooks/useAccount'\nimport { UseTokenInfo } from '../../hooks/useContract';\nimport { gettrendingdisplayhook, getuserdatahook } from '../../hooks/usebackend';\nimport { privatesalefilterby, privatesalesortby, tokenfilter, tokenfilterlaunchpad } from '../../hooks/filter';\n\nclass LaunchpadList extends Component {\n   \n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.5;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n  }\n\n  closeAllMenusStatus()\n  {\n    this.setState({closeKycmenu:true});\n    this.setState({closeHcmenu:true});\n    this.setState({closeCoinmenu:true});\n  }\n\n  closeAllMenusKyc()\n  {\n    this.setState({closeStatusmenu:true});\n    this.setState({closeHcmenu:true});\n    this.setState({closeCoinmenu:true});\n  }\n\n  closeAllMenusCoin()\n  {\n    this.setState({closeStatusmenu:true});\n    this.setState({closeHcmenu:true});\n    this.setState({closeKycmenu:true});  \n  }\n\n  \n  closeAllMenusHc()\n  {\n    this.setState({closeStatusmenu:true});\n    this.setState({closeCoinmenu:true});\n    this.setState({closeKycmenu:true});  \n  }\n  \n  // menuToggle(e)\n  // {\n  //   console.log(e,\"fsd\");\n  //   console.log(this.state.closeHcmenu,\"fdsf\");\n  // }\n\n\n\n    componentDidMount()\n    {\n      // this.showLoader();\n     this.hideLoader();\n     document.getElementById(\"launchpad_parent\").classList.add(\"active\");\n      this.setState( { currentChain: getChainId() });\n      this.gettrending();\n      this.getuserdata();\n      this.loadData();\n    }\n\n    async gettrending(){\n      let data = await gettrendingdisplayhook();\n      console.log(\"dataa trending\" , data?.data?.data);\n      if(data?.data?.data?.length > 0)\n      this.setState({trending : data?.data?.data}) \n  }\n    getuserdata = async()=>{\n      const totalsale = await getTotalSalesInfo();\n      let userdata = await getuserdatahook(this.state.accountInfo && this.state.accountInfo.toLowerCase());\n      console.log(\"userdata\" , userdata.data.data);\n      // this.setState({investedpools : userdata.data.data.investedpools})\n      // this.setState({wishlist : userdata.data.data.wishlist})\n      // this.setState({viewlist : userdata.data.data.viewlist})\n      // this.setState({investedamount : userdata.data.data.investedamount})\n      // const totalproxydata = userdata.data.data.launchpad.filter(data => data.iswhitelist == true)\n      // console.log(\"totalproxydata\" , totalproxydata);\n      let totalproxydata = userdata.data.data.launchpad;\n      const newly = totalproxydata.filter(data => data.iswhitelist == false || data.iswhitelist == \"false\")\n      let newarray = [];\n      newly.map((val , i) => {\n         let newvalue = totalsale.find((e) => e._sale == val.saleaddress);\n         newarray.push(newvalue)\n      })\n      console.log(\"userdatanewly\" , newly , newarray);\n      this.setState({mycontribution : newarray.reverse()})\n    }\n   \n    constructor(props) {\n      super(props);\n      this.state = {  \n        proxy: [],        \n        totalSales: [],\n        onGoingSales: [],\n        upComingSales: [],\n        isSearch: false,\n        searchSale: [],\n        search: '',\n        interval: 3,\n        loadInterval: 3,\n        searchInterval: 3,\n        searchProxy: [],\n        isLoading: false,\n        currentChain: 0,\n        closeHcmenu:false,\n        closeCoinmenu:false,\n        closeKycmenu:false,\n        closeStatusmenu:false,\n        isuser : false,\n        button : true,\n\n        mycontribution : [],\n        accountInfo : getAccount(),\n        interval : 0,\n        loadinterval : 3,\n        original : [],\n        filterdata : \"All Status\",\n        sortdata : \"No Filter\",\n        coin : [],\n        status : [],\n        type : [],\n        trending : []\n\n      \n      };\n    }\n\n    sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\n    async loadData(){\n      this.showLoader();\n      const Proxydata = await getTotalSalesInfo();\n      console.log(\"Proxydata\",Proxydata);\n      const totalproxydata = Proxydata.filter(data => data._isWhitelisted == false)\n\n\n      let trenddata = await gettrendingdisplayhook();\n      console.log(\"dataa trending\" , trenddata?.data?.data);\n      if(trenddata?.data?.data?.length > 0)\n      this.setState({trending : trenddata?.data?.data})\n      var trending = trenddata?.data?.data\nconsole.log(\"trendingdataaaaaaaaaaaaaa\" , trending);\n      let newtotalproxy = [];\n        trending.map((val , i)=>{\n          let singledata = totalproxydata.find(e=>e?._sale == val.saleaddress);\n          if(singledata){\n            newtotalproxy.push(singledata)\n          }\n        })\n        totalproxydata.map((datas , i) => {\n          let singlesale = newtotalproxy.find(e=>e._sale == datas?._sale);\n          if(!singlesale){\n            newtotalproxy.push(datas)\n          }\n        })\n        this.setState({ proxy : newtotalproxy })\nconsole.log(\"trendingdataaaaaaaaaaaaaa\" , newtotalproxy);\n\n\n      console.log(\"total proxy data\" , totalproxydata);\n      // this.setState({ proxy : totalproxydata })\n      this.setState({ original : newtotalproxy })\n      const total = await getlaunchpaddatalimit(newtotalproxy , 0 , this.state.loadinterval);\n      // const total = await getPrivatesaleCardLimit(Proxydata,0,this.state.interval , this.state.isuser);\n      // console.log(\"button \" ,Proxydata?.length , total.index );\n      // if(Proxydata?.length == total.index || !total){\n      //   this.setState({button : false})\n      // }\n      // await this.sleep(1000)\n      //  this.setState({ totalSales: total.saleInfoCards });  \n      //  this.setState({ interval: total.index+1 }); \n      this.setState({ totalSales: total });  \n       this.setState({ interval: this.state.loadinterval}); \n      this.hideLoader();\n  }\n\n  async loadMore(){\n    console.log(\"Lad moreee\",this.state.totalSales.length < this.state.proxy.length)\n    this.setState({ isLoading: true});\n    const newly = await getlaunchpaddatalimit(this.state.proxy,this.state.interval,this.state.interval+this.state.loadInterval );\n    console.log(\"newly \" , newly);\n    const total = this.state.totalSales.concat(newly);\n    this.setState({ totalSales: total,interval: this.state.interval+this.state.loadInterval });\n     this.setState({ isLoading: false});\n  }\n  async loadmycontribution(){\n    this.showLoader()\n    // this.setState({ isLoading: true});\n    this.setState({proxy : this.state.mycontribution})\n    const newly = await getmycontributiondatalimit(this.state.mycontribution,0,this.state.loadInterval);\n    console.log(\"newly \" , newly);\n    this.setState({ totalSales: newly});\n    //  this.setState({ isLoading: false});\n    this.hideLoader();\n  }\n\n  // async loadMoremycontribution(){\n  //   console.log(\"Lad more\",this.state.totalSales.length < this.state.proxy.length)\n  //   this.setState({ isLoading: true});\n  //   const newly = await getmycontributiondatalimit(this.state.mycontribution,this.state.interval,this.state.interval+this.state.loadInterval );\n  //   console.log(\"newly \" , newly);\n  //   const total = this.state.totalSales.concat(newly);\n  //   // if(this?.state?.proxy?.length == newly.index || !newly.saleInfoCards){\n  //   //   console.log(\"button\");\n  //   //   this.setState({button : false})\n  //   // }\n  //   // await this.sleep(1000)\n  //   //  this.setState({ totalSales: total,interval: this.state.interval+this.state.loadInterval });\n  //    this.setState({ totalSales: total,interval: this.state.interval+this.state.loadInterval });\n  //    this.setState({ isLoading: false});\n  //   //  this.setState({ isLoading: false});   \n  // }\n\n  async loadMoremycontribution(){\n    console.log(\"Lad more\",this.state.totalSales.length < this.state.proxy.length)\n    this.setState({ isLoading: true});\n    const newly = await getmycontributiondatalimit(this.state.mycontribution,this.state.interval,this.state.interval+this.state.loadInterval );\n    console.log(\"newly \" , newly);\n    const total = this.state.totalSales.concat(newly);\n    // if(this?.state?.proxy?.length == newly.index || !newly.saleInfoCards){\n    //   console.log(\"button\");\n    //   this.setState({button : false})\n    // }\n    // await this.sleep(1000)\n    //  this.setState({ totalSales: total,interval: this.state.interval+this.state.loadInterval });\n     this.setState({ totalSales: total,interval: this.state.interval+this.state.loadInterval });\n     this.setState({ isLoading: false});\n    //  this.setState({ isLoading: false});   \n  }\n\n  async loadSearchMore(){\n    console.log(\"Lad more\",this.state.totalSales.length < this.state.proxy.length)\n    this.setState({ isLoading: true});\n    const newly = await getlaunchpaddatalimit(this.state.searchProxy,this.state.searchInterval,this.state.searchInterval+this.state.loadInterval);\n    const total = this.state.searchSale.concat(newly);\n    await this.sleep(1000)\n     this.setState({ searchSale: total,searchInterval: this.state.searchInterval+this.state.loadInterval });\n     this.setState({ isLoading: false});   \n  }\n\n  async handleChange(e){\n    if((e.target.value).length > 0){\n          if (e.key === 'Enter') {\n          console.log(\"Search : \",e.target.value)\n          this.showLoader();\n          const searchS = await searchCards(this.state.proxy,e.target.value);\n          this.setState({ searchProxy : searchS});\n          const data = await getlaunchpaddatalimit(searchS,0,this.state.searchInterval);\n          await this.sleep(1050)\n          console.log(\"Search sale : \",searchS)\n          this.setState({ searchSale: data, isSearch: true})\n          this.hideLoader();\n          }\n    }else{\n      this.setState({ isSearch: false})\n    }\n \n}\n\n  async nouser(){\n    this.setState({isuser : false});\n    // this.setState({loadInterval : 3});\n    this.setState({interval : 0});\n    this.setState({searchInterval : 3});\n    // this.setState({button : true});\n    this.setState({filterdata : \"All Status\",\n    sortdata : \"No Filter\",})\n    // this.setState({ isSearch: true})\n    await this.loadData()\n  }\n\n  async yesuser(){\n    this.setState({isuser : true});\n    // this.setState({loadInterval : 3});\n    this.setState({interval : 3});\n    this.setState({searchInterval : 3});\n    // this.setState({button : true})\n    // this.setState({ isSearch: true})\n    this.setState({filterdata : \"All Status\",\n    sortdata : \"No Filter\",})\n    await this.loadmycontribution()\n\n  }\n\n  async handlefilter(val){\n    if(val==\"All Status\"){\n      this.setState({filterdata : val});\n      this.setState({button : true})\n      this.loadData();\n    }\n    else{\n      this.showLoader();\n      this.setState({button : true})\n      this.setState({filterdata : val});\n      var filtered = await privatesalefilterby(this.state.original , val , this.state.isuser);\n      console.log(\"filtered\" , filtered);\n      // var saleinfo = await getPrivatesaleFilter(filtered , this.state.isuser);\n      this.setState({proxy : filtered})\n      if(filtered.length > 0){\n        const total = await getlaunchpaddatalimit(filtered,0,this.state.loadInterval );\n        console.log(\"button \" ,filtered?.length , total );\n\n      if(filtered?.length == 0){\n        this.setState({ totalSales: filtered})\n      }\n      await this.sleep(1000)\n      this.setState({ totalSales: total});  \n      this.setState({ interval: 3 }); \n     this.hideLoader();\n      } \n      else {\n        // this.setState({button : false})\n        this.setState({ totalSales: filtered });\n        this.hideLoader();\n      }\n    }\n  }\n \n  async handlesort(val){\n    if(val==\"No Filter\"){\n      this.setState({button : true})\n      this.loadData();\n      this.setState({sortdata : val})\n    }\n    else{\n      this.showLoader();\n      this.setState({sortdata : val})\n      this.setState({button : true});\n      var sorted = await privatesalesortby(this.state.original , val , this.state.isuser);\n      console.log(\"sorted\" , sorted);\n      this.setState({proxy : sorted});\n      if(sorted.length > 0){\n        const total = await getLaunchpadsaleCardLimit(sorted,0,this.state.interval , this.state.isuser);\n        console.log(\"button \" ,sorted?.length , total );\n\n      if(sorted?.length == total.index || !total){\n        this.setState({button : false})\n      }\n      await this.sleep(1000)\n      this.setState({ totalSales: total.saleInfoCards });  \n      this.setState({ interval: total.index+1 }); \n     this.hideLoader();\n      } \n      else {\n        this.setState({button : false})\n        this.setState({ totalSales: sorted });\n        this.hideLoader();\n      }\n    }\n  }\n\n  async handlecoin(val){\n    var coins = this.state.coin\n    if(coins.length==0){\n      coins.push(val);\n    }\n    else{\n      if(coins.includes(val)){\n        const index = coins.indexOf(val);\n        if (index > -1) { \n          coins.splice(index, 1); \n        }\n      }\n      else{\n        coins.push(val)\n      }\n    }\n    console.log(\"coin\" , coins);\n    this.setState({coin : coins})\n  }\n\n  async handlestatus(val){\n    var statuss = this.state.status\n    if(statuss.length==0){\n      statuss.push(val);\n    }\n    else{\n      if(statuss.includes(val)){\n        const index = statuss.indexOf(val);\n        if (index > -1) { \n          statuss.splice(index, 1); \n        }\n      }\n      else{\n        statuss.push(val)\n      }\n    }\n    console.log(\"status\" , statuss);\n    this.setState({status : statuss})\n  }\n\n  async handletype(val){\n    var statuss = this.state.type\n    if(statuss.length==0){\n      statuss.push(val);\n    }\n    else{\n      if(statuss.includes(val)){\n        const index = statuss.indexOf(val);\n        if (index > -1) { \n          statuss.splice(index, 1); \n        }\n      }\n      else{\n        statuss.push(val)\n      }\n    }\n    console.log(\"status\" , statuss);\n    this.setState({type : statuss})\n  }\n\n  async handleadvancefilter(){\n    this.showLoader();\n    if(this.state.coin.length == 0 && this.state.status.length == 0 && this.state.type.length == 0){\n      this.loadData();\n    }\n    else{\n      // let filtered = await tokenfilter(this.state.proxy , this.state.coin , this.state.status);\n      let filtered = await tokenfilterlaunchpad(this.state.proxy , this.state.coin , this.state.status , this.state.type);\n      this.setState({proxy : filtered})\n      console.log(\"filtered\" , filtered);\n      if(filtered.length > 0){\n        const total = await getlaunchpaddatalimit(filtered,0,this.state.interval);\n          console.log(\"button \" ,filtered?.length , total );\n        // if(filtered?.length == 0){\n        //   this.setState({button : false})\n        // }\n        await this.sleep(1000)\n        this.setState({ totalSales: total });  \n        this.setState({ interval: 3 }); \n       this.hideLoader();\n      }\n      else {\n        this.setState({button : false})\n        this.setState({ totalSales: filtered });\n        this.hideLoader();\n      }\n    }\n    this.hideLoader();\n  }\n\n\n    render() {\n      const location = this.props.location.pathname.split('/')[1];\n      const {totalSales,onGoingSales,upComingSales,search,isSearch,searchSale, accountInfo } = this.state\n    \n      \n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n      \n\n           <Header onUpdate={this.loadData.bind(this)} />\n        \n           <div className=\"whole_sec pb-5\">\n            <div className='flex_side_right'>\n            <Sidebar />\n           {/* ongoing_sec */}\n           <div className='right_side_sec'>\n           {/* <div className=\"text-white topBar d-flex justify-content-between\">\n                  \n                  <small>Trending</small>\n                <small>\n                  #1&nbsp;<span>Husy</span>\n                </small>\n                <small>\n                  #2&nbsp;<span>ORL</span>\n                </small>\n                <small>\n                  #3&nbsp;<span>UWC</span>\n                </small>\n                <small>\n                  #4&nbsp;<span>777</span>\n                </small>\n                <small>\n                  #5&nbsp;<span>IDXS</span>\n                </small>\n                <small>\n                  #6&nbsp;<span>COUGNU</span>\n                </small>\n                <small>\n                  #7&nbsp;<span>CRICLE</span>\n                </small>\n                <small>\n                  #8&nbsp;<span>KASA</span>\n                </small>\n                <small>\n                  #9&nbsp;<span>FIFAPP</span>\n                </small>\n                <small>\n                  #10&nbsp;<span>SOG</span>\n                </small>\n                <small>\n                  #11&nbsp;<span>COOSHA</span>\n                </small>\n                <small>\n                  #12&nbsp;<span>Honey</span>\n                </small>\n                \n                \n              </div> */}\n              <Trendingslider/>\n              <div className=\"right_side_spacing\">\n               <div className='ongoing_sec proj_bg pb-5'>\n            <div className=\"container px-1\">\n                <div className='top_heqad_sec mt-5 mt-md-0'>\n                   \n                  <div className=\"row\">\n                      <div className=\"col-12 col-md-12 flex_cen_col mt-md-5 mb-md-4\">\n                        <p className=\"banner_subtitle form_subhead\">Current Presales</p>\n\n                       \n                        {/* <hr className='hr_yellow mt-5'/> */}\n                      </div>\n                    \n                  </div>\n                </div>\n            </div>\n           \n            <div className=\"inner_bg mt-4\">\n            <div className=\"container px-1\">\n            <Tab.Container  defaultActiveKey=\"first\">\n  <Row className=\"container-fluid w-100 mx-0 px-0\">\n    <Col lg={12} className=\"px-0\">\n      <Nav variant=\"pills\" className=\"nav_green\">\n        <Nav.Item>\n          <Nav.Link eventKey=\"first\" id=\"first\">\n          <p className='mb-0'\n            onClick={()=>{ this.nouser()}}\n          >All Launchpads</p>\n\n          </Nav.Link>\n         </Nav.Item>\n         \n        <Nav.Item>\n          <Nav.Link eventKey=\"second\" id=\"second\">\n          <p className='mb-0' \n             onClick={()=>{ this.nouser()}}\n          >Advanced Mode</p>\n   \n          </Nav.Link>\n                               \n        </Nav.Item>\n        \n        <Nav.Item>\n          <Nav.Link eventKey=\"third\" id=\"third\">\n          <p className='mb-0'\n            onClick={()=>{\n              //  this.test()\n              this.yesuser();\n                \n              }}\n          >My Contributions</p>\n   \n          </Nav.Link>\n        \n        </Nav.Item>\n        \n      </Nav>\n    </Col>\n    <hr class=\"hr_yellow mt-0 mt-5 mb-3\" />\n\n    <Col lg={12} className=\"img_center_lg px-0\">\n    <div className='container container_custom px-0'>\n      <Tab.Content>\n        <Tab.Pane eventKey=\"first\">\n        <div className='row_div'>\n                <div>\n                <div className='row'>\n                    <div className='col-12 col-md-6 col-xl-8 mb-2 mb-md-0'>\n                    <p className='label_input invisible'>Search</p>\n\n                    <input className=\"form-control searc_style_2\" value={search} type=\"text\" onChange={(e)=> { this.setState({ search: e.target.value }); this.handleChange(e); }} onKeyDown={(e)=>this.handleChange(e)}  placeholder=\"Enter token name or token symbol\" aria-label=\"Search\" />\n\n                    </div>\n                    <div className='col-6 col-md-3 col-xl-2'>\n                    <p className='label_input'>Filter By</p>\n                    <Dropdown className='dropdown_normal' >\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" >\n                  {this.state.filterdata}\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu className='dropdown_normal_menu' key = {\"up\"}>\n                  <Dropdown.Item ><p onClick={(e)=>this.handlefilter(\"All Status\")}>All Status</p></Dropdown.Item>\n                      {/* <Dropdown.Item>KYC</Dropdown.Item> */}\n                      <Dropdown.Item key ={\"up\"}><p onClick={(e)=>this.handlefilter(\"Upcoming\")}>Upcoming</p></Dropdown.Item>\n                      <Dropdown.Item><p onClick={(e)=>this.handlefilter(\"Live\")}>Live</p></Dropdown.Item>\n                      {/* <Dropdown.Item>Filled</Dropdown.Item> */}\n                      <Dropdown.Item><p onClick={(e)=>this.handlefilter(\"Ended\")}>Ended</p></Dropdown.Item>\n                      {/* <Dropdown.Item>Cancelled</Dropdown.Item> */}\n                  </Dropdown.Menu>\n                </Dropdown>                     \n                    </div>\n                    <div className='col-6 col-md-3 col-xl-2'>\n                    <p className='label_input'>Sort By</p>\n                    <Dropdown className='dropdown_normal'>\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic-1\">\n                  {/* No Filter */}{this.state.sortdata}\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu className='dropdown_normal_menu'>\n                  <Dropdown.Item><p onClick={(e)=>this.handlesort(\"No Filter\")}>No Filter</p></Dropdown.Item>\n                      {/* <Dropdown.Item>Hard Cap</Dropdown.Item>\n                      <Dropdown.Item>Soft Cap</Dropdown.Item>\n                      <Dropdown.Item>LP Percent</Dropdown.Item> */}\n                      <Dropdown.Item><p onClick={(e)=>this.handlesort(\"Start Time\")}>Start Time</p></Dropdown.Item>\n                      <Dropdown.Item><p onClick={(e)=>this.handlesort(\"End Time\")}>End Time</p></Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>  \n                  </div>\n                  </div>\n                \n                </div>\n              </div>\n              {true?\n              <>\n            <div className='row mt-5'>\n\n            { !isSearch ? \n            (totalSales && totalSales.map((index)=>\n            <Buycard saleData={index} user = {true} connect={\"string\"} />\n            )):\n            (searchSale && searchSale.map((index)=>\n            <Buycard saleData={index} user = {true} connect={\"string\"} />\n            ))\n            }\n            </div>\n            <div className='text-center mt-3'>\n            {/* { this.state.button ? isSearch  ?\n              <>\n            {searchSale && searchSale.length < this.state.searchProxy.length ? \n            ( !this.state.isLoading ?\n            <button className=\"get-started-btn\" onClick={this.loadSearchMore.bind(this)} id=\"load_more_btn\">{this.state.isLoading ? 'Loading...' : 'View More Pools' }</button>: <img src={loader}  id=\"loader_div_sm\" />)\n            :<></>\n            }\n            </> :  <>\n            {totalSales && totalSales.length < this.state.proxy.length ? \n            ( !this.state.isLoading ?\n            <button className=\"get-started-btn\" onClick={this.loadMore.bind(this)} id=\"load_more_btn\">{this.state.isLoading ? 'Loading...' : 'View More Pools' }</button>: <img src={loader}  id=\"loader_div_sm\" />)\n            :<></>\n            }\n            </> : <></>\n            } */}\n\n\n{ isSearch ?\n              <>\n            {searchSale && searchSale.length < this.state.searchProxy.length ? \n            \n            <button className=\"get-started-btn\" onClick={this.loadSearchMore.bind(this)} id=\"load_more_btn\">{this.state.isLoading ? 'Loading...' : 'View More Pools' }</button>\n            :<></>\n            }\n            </> :  <>\n            {totalSales && totalSales.length < this.state.proxy.length ? \n            <button className=\"get-started-btn\" onClick={this.loadMore.bind(this)} id=\"load_more_btn\">{this.state.isLoading ? 'Loading...' : 'View More Pools' }</button>\n            :<></>\n            }\n            </>\n            }\n            \n            {/* {this.state.totalSales.length < this.state.proxy.length ?\n            <button className=\"get-started-btn\" \n            onClick={this.loadMore.bind(this)} id=\"load_more_btn\">\n              {this.state.isLoading ? 'Loading...' : 'View More Pools' }</button>\n              : <></>\n          } */}\n\n\n           \n            </div>\n            </> :\n            <div className='row mt-5'>\n            <div className='col-12'>\n              <p className='no_data_txt'>No Data</p>\n            </div>\n          </div>\n          }\n        </Tab.Pane>\n        <Tab.Pane eventKey=\"second\">\n               \n               \n        <div class=\"table-responsive mt-3\">\n  <table className=\"table table_poricat_list\">\n  <tr>\n    <th><InputGroup className=\"mb-3 input_group search_bar\">\n                      <Form.Control\n                        placeholder=\"Search\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                        value={this.state.search}\n                        onChange={(e)=> { this.setState({ search: e.target.value }); this.handleChange(e); }} \n                        onKeyDown={(e)=>this.handleChange(e)}\n                      />\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group\"\n                      >\n                        <i class=\"fas fa-search\"></i>\n                      </InputGroup.Text>\n                    </InputGroup></th>\n\n                    <th><InputGroup className=\"mb-3 input_group input_group_prepend\">\n                      <Form.Control\n                        value={\"Type\"}\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      >\n                        <i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\n                      </InputGroup.Text>\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      >\n                        <Dropdown className='filter_dropdown '>\n                        <Dropdown.Toggle id=\"dropdown-basic\" className='table_filter_icon'>\n                        <i class=\"fas fa-filter\" onClick={()=>{this.setState({closeHcmenu:false});this.closeAllMenusHc()}}></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className={this.state.closeHcmenu?\"table_dropdown_menu filter_menu d-none\":\"table_dropdown_menu filter_menu d-block\"}>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeHcmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" \n  checked = {this.state.type.includes(\"Launchpad\") ? true : false}\n  onChange={()=>this.handletype(\"Launchpad\")}\n  />\n  <label className=\"custom-control-label\" for=\"customCheck1\">Launchpad</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeHcmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck2\" \n    checked = {this.state.type.includes(\"Fairlaunch\") ? true : false}\n    onChange={()=>this.handletype(\"Fairlaunch\")}\n  />\n  <label className=\"custom-control-label\" for=\"customCheck2\">Fairlaunch</label>\n</div></Dropdown.Item>\n\n\n        {/* <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeHcmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck3\" />\n  <label className=\"custom-control-label\" for=\"customCheck3\">Action</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeHcmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck4\" />\n  <label className=\"custom-control-label\" for=\"customCheck4\">Subscription</label>\n</div></Dropdown.Item> */}\n<Dropdown.Divider />\n<Dropdown.Item href=\"javascript:void(0)\">\n  <div className='dropdown_buttons d-flex justify-content-between'>\n  <button className=\"get-started-btn mr-2\" onClick={()=>{this.setState({type : []})}}>Reset</button>\n  <button className=\"get-started-btn\" id=\"ok_hc\" onClick={()=>{this.setState({closeHcmenu:true});\n  this.handleadvancefilter()\n}}>OK</button>\n  </div>\n</Dropdown.Item>\n\n      </Dropdown.Menu>\n                        </Dropdown>\n                      </InputGroup.Text>\n                    </InputGroup></th>\n      {/* <th><InputGroup className=\"mb-3 input_group input_group_prepend\"> */}\n                      {/* <Form.Control\n                        value=\"HC\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      >\n                        <i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\n                      </InputGroup.Text> */}\n                      {/* <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      > */}\n                        {/* <Dropdown className='filter_dropdown '>\n                        <Dropdown.Toggle id=\"dropdown-basic\" className='table_filter_icon'>\n                        <i class=\"fas fa-filter\" onClick={()=>{this.setState({closeHcmenu:false})}}></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className={this.state.closeHcmenu?\"table_dropdown_menu filter_menu d-none\":\"table_dropdown_menu filter_menu d-block\"}>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeHcmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n  <label className=\"custom-control-label\" for=\"customCheck1\">Presale</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeHcmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck2\" />\n  <label className=\"custom-control-label\" for=\"customCheck2\">Fairlaunch</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeHcmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck3\" />\n  <label className=\"custom-control-label\" for=\"customCheck3\">Action</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeHcmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck4\" />\n  <label className=\"custom-control-label\" for=\"customCheck4\">Subscription</label>\n</div></Dropdown.Item>\n<Dropdown.Divider />\n<Dropdown.Item href=\"javascript:void(0)\">\n  <div className='dropdown_buttons d-flex justify-content-between'>\n  <button className=\"get-started-btn mr-2\">Reset</button>\n  <button className=\"get-started-btn\" id=\"ok_hc\" onClick={()=>{this.setState({closeHcmenu:true})}}>OK</button>\n  </div>\n</Dropdown.Item>\n\n      </Dropdown.Menu>\n                        </Dropdown> */}\n                      {/* </InputGroup.Text>\n                    </InputGroup></th> */}\n                    <th><InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"Coin\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                        readOnly\n                      />\n                       <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      >\n                        <Dropdown className='filter_dropdown'>\n                        <Dropdown.Toggle id=\"dropdown-basic\" className='table_filter_icon'>\n                        <i class=\"fas fa-filter\" onClick={()=>{this.setState({closeCoinmenu:false});this.closeAllMenusCoin()}}></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className={this.state.closeCoinmenu?\"table_dropdown_menu filter_menu d-none\":\"table_dropdown_menu filter_menu d-block\"}>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" \n    checked = {this.state.coin.includes(\"BNB\") ? true : false}\n  id=\"customCheck5\" onChange={()=>this.handlecoin(\"BNB\")}/>\n  <label className=\"custom-control-label\" for=\"customCheck5\" >BNB</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" onChange={()=>this.handlecoin(\"BUSD\")} \n  checked = {this.state.coin.includes(\"BUSD\") ? true : false}\n  className=\"custom-control-input\" id=\"customCheck6\" />\n  <label className=\"custom-control-label\" for=\"customCheck6\">BUSD</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" \n  checked = {this.state.coin.includes(\"USDT\") ? true : false}\n  onChange={()=>this.handlecoin(\"USDT\")} id=\"customCheck7\" />\n  <label className=\"custom-control-label\" for=\"customCheck7\">USDT</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" \n    checked = {this.state.coin.includes(\"USDC\") ? true : false}\n  onChange={()=>this.handlecoin(\"USDC\")}  id=\"customCheck8\" />\n  <label className=\"custom-control-label\" for=\"customCheck8\">USDC</label>\n</div></Dropdown.Item>\n        {/* <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" onChange={()=>this.handlecoin(\"ETH\")} id=\"customCheck9\" />\n  <label className=\"custom-control-label\" for=\"customCheck9\">ETH</label>\n</div></Dropdown.Item> */}\n        {/* <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck10\" />\n  <label className=\"custom-control-label\" for=\"customCheck10\">MATIC</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck11\" />\n  <label className=\"custom-control-label\" for=\"customCheck11\">AVAX</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck12\" />\n  <label className=\"custom-control-label\" for=\"customCheck12\">CRO</label>\n</div></Dropdown.Item> */}\n<Dropdown.Divider />\n<Dropdown.Item href=\"javascript:viod(0)\">\n  <div className='dropdown_buttons d-flex justify-content-between'>\n  <button className=\"get-started-btn mr-2\" onClick={()=>this.setState({coin : []})}>Reset</button>\n  <button className=\"get-started-btn\" onClick={()=>{this.setState({closeCoinmenu:true});\n  this.handleadvancefilter();\n}}>OK</button>\n  </div>\n</Dropdown.Item>\n      </Dropdown.Menu>\n                        </Dropdown>\n                      </InputGroup.Text>\n                    </InputGroup>\n                    </th>\n                    {/* <th><InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"InitialCap\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group\"\n                      >\n                        <i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\n                      </InputGroup.Text>\n                    </InputGroup></th> */}\n                    {/* <th><InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"KYC/Audit\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                       <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      >\n                        <Dropdown className='filter_dropdown'>\n                        <Dropdown.Toggle id=\"dropdown-basic\" className='table_filter_icon'>\n                        <i class=\"fas fa-filter\" onClick={()=>{this.setState({closeKycmenu:false})}}></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className={this.state.closeKycmenu?\"table_dropdown_menu filter_menu d-none\":\"table_dropdown_menu filter_menu d-block\"}>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeKycmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck13\" />\n  <label className=\"custom-control-label\" for=\"customCheck13\">KYC</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeKycmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck14\" />\n  <label className=\"custom-control-label\" for=\"customCheck14\">Audit</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeKycmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck15\" />\n  <label className=\"custom-control-label\" for=\"customCheck15\">Safu</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeKycmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck16\" />\n  <label className=\"custom-control-label\" for=\"customCheck16\">Doxx</label>\n</div></Dropdown.Item>\n<Dropdown.Divider />\n<Dropdown.Item href=\"javascript:void(0)\">\n  <div className='dropdown_buttons d-flex justify-content-between'>\n  <button className=\"get-started-btn mr-2\">Reset</button>\n  <button className=\"get-started-btn\" onClick={()=>{this.setState({closeKycmenu:true})}}>OK</button>\n  </div>\n</Dropdown.Item>\n      </Dropdown.Menu>\n                        </Dropdown>\n                      </InputGroup.Text>\n                    </InputGroup>\n                    </th> */}\n                    <th><InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"Status\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                        readOnly\n                      />\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group\"\n                      >\n                        <i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\n                      </InputGroup.Text>\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      >\n                        <Dropdown className='filter_dropdown'>\n                        <Dropdown.Toggle id=\"dropdown-basic\" className='table_filter_icon'>\n                        <i class=\"fas fa-filter\" onClick={()=>{this.setState({closeStatusmenu:false});this.closeAllMenusStatus()}}></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu  className={this.state.closeStatusmenu?\"table_dropdown_menu filter_menu d-none\":\"table_dropdown_menu filter_menu d-block\"}>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeStatusmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" \n    checked = {this.state.status.includes(\"Upcoming\") ? true : false} \n  onChange={()=>this.handlestatus(\"Upcoming\")} id=\"customCheck17\" />\n  <label className=\"custom-control-label\" for=\"customCheck17\">Upcoming</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeStatusmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck18\" \n  checked = {this.state.status.includes(\"Live\") ? true : false} \n  onChange={()=>this.handlestatus(\"Live\")} />\n  <label className=\"custom-control-label\" for=\"customCheck18\">Live</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeStatusmenu:false})}}>\n  <input type=\"checkbox\" checked = {this.state.status.includes(\"Ended\") ? true : false} \n  className=\"custom-control-input\" id=\"customCheck19\" onChange={()=>this.handlestatus(\"Ended\")}/>\n  <label className=\"custom-control-label\" for=\"customCheck19\">Ended</label>\n</div></Dropdown.Item>\n<Dropdown.Divider />\n<Dropdown.Item href=\"javascript:void(0)\">\n  <div className='dropdown_buttons d-flex justify-content-between'>\n  <button className=\"get-started-btn mr-2\" onClick={()=>this.setState({status : []})}>Reset</button>\n  <button className=\"get-started-btn\" onClick={()=>{this.setState({closeStatusmenu:true});\n  this.handleadvancefilter();\n}}>OK</button>\n  </div>\n</Dropdown.Item>\n      </Dropdown.Menu>\n                        </Dropdown>\n                      </InputGroup.Text>\n                    </InputGroup></th>\n                    <th></th>\n                    <th></th>\n\n                    <th></th>\n\n                    <th></th>\n\n                    <th></th>\n\n                    <th></th>\n\n                    <th></th>\n\n                    {/* <th><InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"Links\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                    </InputGroup></th>\n                    <th><InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"TGOnline\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group\"\n                      >\n                        <i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\n                      </InputGroup.Text>\n                    </InputGroup></th>\n                    <th><InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"Countdown\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group\"\n                      >\n                        <i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\n                      </InputGroup.Text>\n                    </InputGroup></th> */}\n    </tr>\n\n\n    { !isSearch ? \n            (totalSales && totalSales.map((data)=><>\n            {/* {console.log(\"index\" , index)} */}\n            <tr>\n      <td><span className=\"d-flex align-items-center\">\n\n      <div className=\"relative_token_div  mr-2\">\n        <img className=\"token_image_sm \" src={data?.logo} />\n        </div>\n           {data?.name}\n        </span></td>\n        <td>{data?.LaunchpadType? \"Launchpad\" : \"Fairlaunch\"}</td>\n        <td>{data?.coin}</td>\n        <td>{data?.symbol}</td>\n        <td>{data?.softCap/10**18}</td>\n        <td>{data?.hardCap/10**18}</td>\n        {/* <td><span className=\"close_icons\">\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover active_times\"></i>\n        </span></td> */}\n\n        <td>\n          {data?.LaunchpadType ? <><ProgressBar now={ parseInt(parseInt(data?.earnedCap)/parseInt(data?.hardCap) * 100)} className='yellow_bar mt-3'/>\n        <div className=\"d-flex align-items-center justify-content-between\">\n        <span className='desc_grey_txt'>{ parseInt(parseInt(data?.earnedCap)/parseInt(data?.hardCap) * 100)} % </span>\n               <span className='desc_grey_txt'>{((data?.earnedCap)/10**18).toFixed(3)}/{((data?.hardCap)/10**18).toFixed(2)} </span>\n               </div></>\n               :\n               <><ProgressBar now={data && parseInt(parseInt(data?.earnedCap)/parseInt(data?.softCap) * 100)} className='yellow_bar mt-3'/>\n        <div className=\"d-flex align-items-center justify-content-between\">\n        <span className='desc_grey_txt'>{data && parseInt(parseInt(data.earnedCap)/parseInt(data.softCap) * 100)} % </span>\n               <span className='desc_grey_txt'>{data && ((data.earnedCap)/10**18).toFixed(3)} / {(parseInt(data?.softCap)/10**18).toFixed(2)} {this.state.buyToken} </span>\n               </div></>\n              \n              }\n        </td>\n        {/* <td><ProgressBar now={data?.earnedCap/10 ** data?.decimals} label={data?.hardCap} className='yellow_bar'/></td> */}\n        <td><span>\n          <a href={data?.social[1]} target = \"_blank\"><i class=\"fas fa-globe green_icons\"></i></a>\n          <a href={data?.social[1]} target = \"_blank\"><i class=\"fab fa-skype green_icons\"></i></a>\n          <a href={data?.social[5]} target = \"_blank\"><i class=\"fab fa-telegram-plane green_icons\"></i></a>\n        </span></td>\n        <td className=\"table_time\">{new Date(data?.startTime*1000)?.getDate()+\"/\"+new Date(data?.startTime*1000)?.getMonth()+\"/\"+\n        new Date(data?.startTime*1000)?.getFullYear()+\" \"+new Date(data?.startTime*1000)?.getHours()+\":\"+\n        new Date(data?.startTime*1000)?.getMinutes()+\":\"+new Date(data?.startTime*1000)?.getSeconds()}</td>\n        <td className=\"table_time\">{new Date(data?.endTime*1000)?.getDate()+\"/\"+new Date(data?.endTime*1000)?.getMonth()+\"/\"+\n        new Date(data?.endTime*1000)?.getFullYear()+\" \"+new Date(data?.endTime*1000)?.getHours()+\":\"+\n        new Date(data?.endTime*1000)?.getMinutes()+\":\"+new Date(data?.endTime*1000)?.getSeconds()}</td>\n        {/* <td><a className=\"link_text\">Disable</a></td> */}\n        <td><a className=\"link_text\" href={`/launchpaddetail/${data.saleAddress}`}>View</a></td>\n    </tr>\n            </>\n            \n            )):\n            (searchSale && searchSale.map((data)=><>\n             {/* {console.log(\"index\" , index)} */}\n             <tr>\n      <td><span className=\"d-flex align-items-center\">\n\n      <div className=\"relative_token_div  mr-2\">\n        <img className=\"token_image_sm \" src={data?.logo} />\n        </div>\n           {data?.name}\n        </span></td>\n        <td>{data?.LaunchpadType? \"Launchpad\" : \"Fairlaunch\"}</td>\n        <td>{data?.coin}</td>\n        <td>{data?.symbol}</td>\n        <td>{data?.softCap/10**18}</td>\n        <td>{data?.hardCap/10**18}</td>\n        {/* <td><span className=\"close_icons\">\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover active_times\"></i>\n        </span></td> */}\n\n        <td><ProgressBar now={ parseInt(parseInt(data?.earnedCap)/parseInt(data?.hardCap) * 100)} className='yellow_bar mt-3'/>\n        <div className=\"d-flex align-items-center justify-content-between\">\n        <span className='desc_grey_txt'>{ parseInt(parseInt(data?.earnedCap)/parseInt(data?.hardCap) * 100)} % </span>\n               <span className='desc_grey_txt'>{((data?.earnedCap)/10**18).toFixed(3)}/{((data?.hardCap)/10**18).toFixed(2)} </span>\n               </div>\n       </td>\n        {/* <td><ProgressBar now={data?.earnedCap/10 ** data?.decimals} label={data?.hardCap} className='yellow_bar'/></td> */}\n        <td><span>\n          <a href={data?.social[1]} target = \"_blank\"><i class=\"fas fa-globe green_icons\"></i></a>\n          <a href={data?.social[1]} target = \"_blank\"><i class=\"fab fa-skype green_icons\"></i></a>\n          <a href={data?.social[5]} target = \"_blank\"><i class=\"fab fa-telegram-plane green_icons\"></i></a>\n        </span></td>\n        <td className=\"table_time\">{new Date(data?.startTime*1000)?.getDate()+\"/\"+new Date(data?.startTime*1000)?.getMonth()+\"/\"+\n        new Date(data?.startTime*1000)?.getFullYear()+\" \"+new Date(data?.startTime*1000)?.getHours()+\":\"+\n        new Date(data?.startTime*1000)?.getMinutes()+\":\"+new Date(data?.startTime*1000)?.getSeconds()}</td>\n        <td className=\"table_time\">{new Date(data?.endTime*1000)?.getDate()+\"/\"+new Date(data?.endTime*1000)?.getMonth()+\"/\"+\n        new Date(data?.endTime*1000)?.getFullYear()+\" \"+new Date(data?.endTime*1000)?.getHours()+\":\"+\n        new Date(data?.endTime*1000)?.getMinutes()+\":\"+new Date(data?.endTime*1000)?.getSeconds()}</td>\n        <td><a className=\"link_text\">View</a></td>\n    </tr>\n            </>\n           \n            ))\n            }\n  </table>\n</div>\n<div className='text-center mt-5'>\n{ isSearch ?\n              <>\n            {searchSale && searchSale.length < this.state.searchProxy.length ? \n            \n            <button className=\"get-started-btn\" onClick={this.loadSearchMore.bind(this)} id=\"load_more_btn\">{this.state.isLoading ? 'Loading...' : 'View More Pools' }</button>\n            :<></>\n            }\n            </> :  <>\n            {totalSales && totalSales.length < this.state.proxy.length ? \n            <button className=\"get-started-btn\" onClick={this.loadMore.bind(this)} id=\"load_more_btn\">{this.state.isLoading ? 'Loading...' : 'View More Pools' }</button>\n            :<></>\n            }\n            </>\n            }\n             \n      </div>       \n        </Tab.Pane>\n        <Tab.Pane eventKey=\"third\">\n        <div className=\"tab_img\">\n        <div className='row_div'>\n                <div>\n                <div className='row_div'>\n                <div>\n                  <div className='row'>\n                    <div className='col-12 col-md-6 col-xl-8 mb-2 mb-md-0'>\n                    <p className='label_input invisible'>Search</p>\n\n                    <input className=\"form-control searc_style_2\" value={search} type=\"text\" onChange={(e)=> { this.setState({ search: e.target.value }); this.handleChange(e); }} onKeyDown={(e)=>this.handleChange(e)}  placeholder=\"Enter token name or token symbol\" aria-label=\"Search\" />\n\n                    </div>\n                    <div className='col-6 col-md-3 col-xl-2'>\n                    <p className='label_input'>Filter By</p>\n                    <Dropdown className='dropdown_normal' >\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" >\n                  {this.state.filterdata}\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu className='dropdown_normal_menu' key = {\"up\"}>\n                  <Dropdown.Item ><p onClick={(e)=>this.handlefilter(\"All Status\")}>All Status</p></Dropdown.Item>\n                      {/* <Dropdown.Item>KYC</Dropdown.Item> */}\n                      <Dropdown.Item key ={\"up\"}><p onClick={(e)=>this.handlefilter(\"Upcoming\")}>Upcoming</p></Dropdown.Item>\n                      <Dropdown.Item><p onClick={(e)=>this.handlefilter(\"Live\")}>Live</p></Dropdown.Item>\n                      {/* <Dropdown.Item>Filled</Dropdown.Item> */}\n                      <Dropdown.Item><p onClick={(e)=>this.handlefilter(\"Ended\")}>Ended</p></Dropdown.Item>\n                      {/* <Dropdown.Item>Cancelled</Dropdown.Item> */}\n                  </Dropdown.Menu>\n                </Dropdown>                     \n                    </div>\n                    <div className='col-6 col-md-3 col-xl-2'>\n                    <p className='label_input'>Sort By</p>\n                    <Dropdown className='dropdown_normal'>\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic-1\">\n                 {this.state.sortdata}\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu className='dropdown_normal_menu'>\n                  <Dropdown.Item><p onClick={(e)=>this.handlesort(\"No Filter\")}>No Filter</p></Dropdown.Item>\n                      {/* <Dropdown.Item>Hard Cap</Dropdown.Item>\n                      <Dropdown.Item>Soft Cap</Dropdown.Item>\n                      <Dropdown.Item>LP Percent</Dropdown.Item> */}\n                      <Dropdown.Item><p onClick={(e)=>this.handlesort(\"Start Time\")}>Start Time</p></Dropdown.Item>\n                      <Dropdown.Item><p onClick={(e)=>this.handlesort(\"End Time\")}>End Time</p></Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>  \n                  </div>\n                  </div>\n                \n                </div>\n              </div>\n                \n                </div>\n              </div>\n              {true?\n              <>\n               <div className='row mt-5'>\n\n               { !isSearch ? \n               (totalSales && totalSales.map((index)=>\n               <Buycard saleData={index} user = {false} connect={\"string\"} />\n               )):\n               (searchSale && searchSale.map((index)=>\n               <Buycard saleData={index} user = {false} connect={\"string\"} />\n               ))\n               }\n               </div>\n               <div className='text-center mt-3'>\n                \n\n            { isSearch ?\n              <>\n            {searchSale && searchSale.length < this.state.searchProxy.length ? \n            \n            <button className=\"get-started-btn\" onClick={this.loadSearchMore.bind(this)} id=\"load_more_btn\">{this.state.isLoading ? 'Loading...' : 'View More Pools' }</button>\n            :<></>\n            }\n            </> :  <>\n            {totalSales && totalSales.length < this.state.proxy.length ? \n            <button className=\"get-started-btn\" onClick={this.loadMoremycontribution.bind(this)} id=\"load_more_btn\">{this.state.isLoading ? 'Loading...' : 'View More Pools' }</button>\n            :<></>\n            }\n            </>\n            }\n              \n               </div>\n               </>:\n               \n            <div className='row mt-5'>\n            <div className='col-12'>\n              <p className='no_data_txt'>No Data</p>\n            </div>\n          </div>\n              }\n           \n          \n        </div>\n        </Tab.Pane> \n       \n      </Tab.Content>\n      </div>\n    </Col>\n  </Row>\n</Tab.Container>\n\n              \n                </div>\n            </div>\n            </div>\n            {/* end ongoing_sec */}\n\n              {/* upcoming_sec */}\n              {/* <div className='upcoming_sec mt-5'>\n            <div className=\"container container_custom\">\n                <div  className='top_heqad_sec'>\n                <div className='text-right'>\n                <input className=\"form-control searc_style_1\" type=\"text\" placeholder=\"&#xF002; Project Name\" aria-label=\"Search\" />\n                </div>\n                  <div className=\"row py-3\">\n                      <div className=\"col-12 col-md-12 flex_cen_col\">\n                        <p className=\"banner_title text-center\">Upcoming IDOs</p>\n                        <hr className='hr_yellow mt-5'/>\n                      </div>\n                    \n                  </div>\n                </div>\n            </div>\n           \n            <div className=\"inner_bg mt-4\">\n            <div className=\"container container_custom\">\n\n\n            <div className='row  justify-content-between'>\n             \n            <Buycard connect={\"string\"} />\n            <Buycard connect={\"string\"} />\n            </div>\n            <div className='text-center mt-3'>\n\n            <button className=\"get-started-btn\" id=\"load_more_btn_1\">Load More</button>\n            <img src={loader}  id=\"loader_div_sm_1\" className='d-none'/>\n            </div>\n                </div>\n            </div>\n            </div> */}\n            {/* end upcoming_sec */}\n\n            <Container className='pb-5 px-0'>\n                 \n                  <center>\n                    <small className=\"mt-0 bottom_text\">\n                      Disclaimer: The information provided shall not in any way\n                      constitute a recomendation as to whether you should invest\n                      in any product discussed. We accept no liability for any\n                      loss occasioned to any person acting or refraining from\n                      action as a result of any material provided or published.\n                    </small>\n                  </center>\n                </Container>\n            </div>\n            </div>\n            </div>\n            </div>\n            {/* <Footer /> */}\n        </div>\n        </div>\n        )\n    }\n}\n\nexport default LaunchpadList","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/LaunchpadEdit.js",["453","454","455","456","457","458","459"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\n\nimport Header from '../Header';\nimport Sidebar from '../Sidebar';\nimport Trendingslider from '../trendingslider';\n\n\nimport { getAccount } from '../../hooks/useAccount'\n\n\n\n\n\nimport {  Container, FormControl, InputGroup } from 'react-bootstrap';\nimport '../../css/styles.css';\n\nimport favicon from \"../../images/favicon.png\"\n\nimport { Link } from 'react-router-dom';\nimport { getSaleInfo } from '../../hooks/useContract';\nimport {  updateTokenInfo } from '../../hooks/useAdmin';\n\nclass LaunchpadEdit extends Component {\n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.05;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n\n\n\n  }\n  \n   \n\n    constructor(props) {\n        super(props);\n        this.state = {          \n            accountInfo: '',\n            saleAddress: window.location.pathname.split('/')[2],\n            saleInfo: {},\n           \n        };\n    }\n \nasync Getdata(){\n    const saleDetail = await getSaleInfo(this.state.saleAddress);\n  \n    this.setState({ saleInfo: saleDetail });\n    this.hideLoader();\n    \n}\n\n\nasync setSocialInfo(){\n    await updateTokenInfo(this.state.saleInfo,this.state.saleAddress,getAccount());\n    // this.props.onUpdate();\n }\n\n\n\n\ncomponentDidMount()\n{\n    \n    document.getElementById(\"launchpad_parent\").classList.add(\"active\");\n//    this.showLoader();\n  this.Getdata()\n}\n    render() {\n        \n      const location = this.props.location.pathname.split('/')[1];\n\n      const { walletModal,saleInfo} = this.state\n\n     \n      \n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n\n           <Header/>\n          \n           <div className=\"whole_sec pb-5\">\n           <div className='flex_side_right'>\n            <Sidebar />\n           {/* ongoing_sec */}\n           <div className='right_side_sec'>\n           {/* <div className=\"text-white topBar d-flex justify-content-between\">\n                  \n                  <small>Trending</small>\n                <small>\n                  #1&nbsp;<span>Husy</span>\n                </small>\n                <small>\n                  #2&nbsp;<span>ORL</span>\n                </small>\n                <small>\n                  #3&nbsp;<span>UWC</span>\n                </small>\n                <small>\n                  #4&nbsp;<span>777</span>\n                </small>\n                <small>\n                  #5&nbsp;<span>IDXS</span>\n                </small>\n                <small>\n                  #6&nbsp;<span>COUGNU</span>\n                </small>\n                <small>\n                  #7&nbsp;<span>CRICLE</span>\n                </small>\n                <small>\n                  #8&nbsp;<span>KASA</span>\n                </small>\n                <small>\n                  #9&nbsp;<span>FIFAPP</span>\n                </small>\n                <small>\n                  #10&nbsp;<span>SOG</span>\n                </small>\n                <small>\n                  #11&nbsp;<span>COOSHA</span>\n                </small>\n                <small>\n                  #12&nbsp;<span>Honey</span>\n                </small>\n                \n                \n              </div> */}\n              {/* <Trendingslider/> */}\n              <div className=\"right_side_spacing\">\n              <div className='row mt-5'>\n           <div className='col-12 col-md-10 col-lg-9 mx-auto'>\n           <div className=\"tab_img\">\n                 <div className='card_bg card'>\n            <div className='card-body'>\n                  \n          \n\n            <div>\n                <div className='row'>\n\n              \n                <div className='col-12 col-md-12 mb-0'>\n                        \n                        <p className='input_desc_sm'>Logo URL</p>\n                        <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"file\" placeholder={ !saleInfo.logo ? saleInfo.logo : saleInfo.logo }\n                            onChange={(e)=>{ let data = saleInfo; data.logo=e.target.value; this.setState({ saleInfo: data }); }} \n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        <div className='note_desc mt-1 mb-0'>\n                    <p>URL must be end with a supported image extension .png, .jpg,</p>\n                    </div>\n                            </div>\n\n                            <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Website</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            \n                            <FormControl placeholder={!saleInfo.website  ? saleInfo.social && saleInfo.social[0] : saleInfo.website }  id=\"logolink1\" \n                            \n                            onChange={(e)=>{ let data = saleInfo; data.website=e.target.value; this.setState({ saleInfo: data }); }} \n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Twitter</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl placeholder={!saleInfo.twitter  ? saleInfo.social && saleInfo.social[1] : saleInfo.twitter } \n                            onChange={(e)=>{ let data = saleInfo; data.twitter=e.target.value; this.setState({ saleInfo: data }); }} \n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Telegram</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl placeholder={!saleInfo.telegram  ? saleInfo.social && saleInfo.social[2] : saleInfo.telegram } \n                             onChange={(e)=>{ let data = saleInfo; data.telegram=e.target.value; this.setState({ saleInfo: data }); }} \n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n                      \n\n                        \n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Github</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"logolinkgit\" placeholder={!saleInfo.githup  ? saleInfo.social && saleInfo.social[7] : saleInfo.githup }\n                            onChange={(e)=>{ let data = saleInfo; data.githup=e.target.value; this.setState({ saleInfo: data }); }} \n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n\n                       \n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Instagram</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl  id=\"logolinkinsta\" placeholder={!saleInfo.instagram  ? saleInfo.social && saleInfo.social[8] : saleInfo.instagram }\n                           onChange={(e)=>{ let data = saleInfo; data.instagram=e.target.value; this.setState({ saleInfo: data }); }} \n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Discord</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl  id=\"logolinkdiscord\" placeholder={!saleInfo.discord  ? saleInfo.social && saleInfo.social[9] : saleInfo.discord }\n                            onChange={(e)=>{ let data = saleInfo; data.discord=e.target.value; this.setState({ saleInfo: data }); }} \n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n                        \n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Reddit</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl  id=\"logolinkreddit\" placeholder={!saleInfo.reddit  ? saleInfo.social && saleInfo.social[10] : saleInfo.reddit }\n                            onChange={(e)=>{ let data = saleInfo; data.reddit=e.target.value; this.setState({ saleInfo: data }); }} \n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-0'>\n                    <p className='input_desc_sm'>Youtube Video</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl  id=\"logolinkyoutube\" placeholder={!saleInfo.githup  ? saleInfo.social && saleInfo.social[11] : saleInfo.youtube }\n                            onChange={(e)=>{ let data = saleInfo; data.youtube=e.target.value; this.setState({ saleInfo: data }); }} \n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n\n                    <div className='note_desc mt-1 mb-0'>\n                    <p>Input your youtube URL</p>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Description</p>\n                    <div className=\"inputs input-groups text_are_grp\">\n                        <InputGroup className=\"\">\n                        {console.log(\"sal\",saleInfo)}\n                            <textarea placeholder={ !saleInfo.description ? saleInfo.description : saleInfo.description } id=\"description\" rows=\"3\"\n                            onChange={(e)=>{ let data = saleInfo; console.log(\"data\",data); this.setState({ saleInfo: data.description=e.target.value }); }}\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                    </div>\n\n\n\n                    \n                    <div className='col-12 col-md-12 text-center'>\n                        <Link to=\"/launchpaddetail\" className=\"get-started-btn mr-2\">\n                           Back\n                        </Link>\n                        <button onClick={()=>this.setSocialInfo()}className=\"get-started-btn\">\n                           Update\n                        </button>\n                        </div>\n                </div>\n            </div>\n\n          \n                      \n             </div>\n             </div>\n            </div>\n            </div>\n        \n\n                \n               \n        </div>\n\n            <Container className='pb-5 px-0 mt-4'>\n                 \n                 <center>\n                   <small className=\"mt-3 bottom_text\">\n                     Disclaimer: The information provided shall not in any way\n                     constitute a recomendation as to whether you should invest\n                     in any product discussed. We accept no liability for any\n                     loss occasioned to any person acting or refraining from\n                     action as a result of any material provided or published.\n                   </small>\n                 </center>\n               </Container>\n            </div>\n           </div>\n           </div>\n           </div>\n\n            {/* <Footer /> */}\n        </div>\n        </div>\n        )\n    }\n}\n\nexport default LaunchpadEdit","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/CreateToken.js",["460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490"],"import React, { Component } from \"react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\nimport Trendingslider from '../trendingslider';\n\n\n\n\nimport \"../../css/styles.css\";\n\n\nimport favicon from \"../../images/favicon.png\";\n\n\nimport {\n  getSaleCards,\n  getSaleCardsLimit,\n  getTotalSalesInfo,\n  searchCards,\n  searchSale,\n} from \"../../hooks/useProjects\";\nimport {\n  Container,\n  Dropdown,\n  Row,\n  Col,\n  Card,\n  ProgressBar,\n  InputGroup,\n  Form,\n  Tab,\n  Nav,\n  FormControl\n} from \"react-bootstrap\";\nimport { validliquiditytoken, validstandardtoken } from \"../../hooks/kycvalidation\";\nimport { CreateLiquidityToken, CreateStandardToken, GetAdminfee, Getbalance, toFixedNumber } from \"../../hooks/useContract\";\n\n\nclass CreateToken extends Component {\n \n   \n\n\n  showLoader() {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.5;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n  }\n\n  hideLoader() {\n    document\n      .getElementsByTagName(\"body\")[0]\n      .classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n  }\n\n  componentDidMount() {\n    document.getElementById(\"launchpad_parent\").classList.add(\"active\");\n    this.hideLoader();\n    this.getfee();\n  }\n  getfee = async()=>{\n    let fee = await GetAdminfee();\n    console.log(\"fee\" , fee);\n    this.setState({poolfee : fee.tokenfee/10**18})\n}\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      proxy: [],\n      totalSales: [],\n      onGoingSales: [],\n      upComingSales: [],\n      isSearch: false,\n      searchSale: [],\n      search: \"\",\n      interval: 3,\n      loadInterval: 3,\n      searchInterval: 3,\n      searchProxy: [],\n      isLoading: false,\n      currentChain: 0,\n      setUpdateCms: false,\n\n      tokentype : \"Standard Token\",\n      name : \"\",\n      symbol : \"\",\n      decimal : \"\",\n      tokensupply : \"\",\n      errors : {},\n      yieldfee : \"\",\n      liquidityfee : \"\",\n      exchangethresold : \"\",\n      maximumtransaction : \"\",\n      userbalance : Getbalance(),\n      poolfee : \"\"\n    };\n  }\n\n  handlecreatetoken = async()=>{\n    if(this.state.tokentype == \"Standard Token\"){\n      let payload = {\n        name : this.state.name,\n        symbol : this.state.symbol,\n        decimal : this.state.decimal,\n        totalsupply : this.state.tokensupply\n      }\n      let validate = await validstandardtoken(payload);\n      if(validate?.isValid){\n        let arg = [];\n        arg[0] = this.state.name;\n        arg[1] = this.state.symbol;\n        arg[2] = this.state.decimal;\n        arg[3] = this.state.tokensupply; //(toFixedNumber(this.state.tokensupply*10**this.state.decimal)).toString()\n        let tokendata = await CreateStandardToken(arg);\n        console.log(\"tokendata\" , tokendata);\n        sessionStorage.setItem(\"HASH\" , JSON.stringify(tokendata))\n        this.props.history.push(\"/tokensuccess\" , {state: \"token\"})\n      }\n      else{\n        this.setState({errors : validate?.errors})\n      }\n    }\n\n    if(this.state.tokentype == \"Liquidity Generator Token\"){\n      let payload = {\n        name : this.state.name,\n        symbol : this.state.symbol,\n        decimal : this.state.decimal,\n        totalsupply : this.state.tokensupply,\n        yieldfee : this.state.yieldfee,\n        liquidityfee  : this.state.liquidityfee,\n        maximumtransaction : this.state.maximumtransaction,\n        exchangethresold : this.state.exchangethresold\n      }\n      console.log(\"payload\" , payload);\n      let validate = await validliquiditytoken(payload);\n      if(validate?.isValid){\n        let arg = [];\n        arg[0] = this.state.name;\n        arg[1] = this.state.symbol;\n        arg[2] = this.state.decimal;\n        arg[3] = (toFixedNumber(this.state.tokensupply*10**this.state.decimal)).toString();\n        arg[4] = this.state.yieldfee;\n        arg[5] = this.state.liquidityfee;\n        arg[6] = this.state.maximumtransaction;\n        arg[7] = this.state.exchangethresold;\n        let tokendata = await CreateLiquidityToken(arg);\n        console.log(\"tokendata\" , tokendata);\n        sessionStorage.setItem(\"HASH\" , JSON.stringify(tokendata))\n        this.props.history.push(\"/tokensuccess\" , {state: \"token\"})\n      }\n      else{\n        this.setState({errors : validate?.errors})\n      }\n    }\n  }\n\n\n\n  render() {\n    const location = this.props.location.pathname.split(\"/\")[1];\n\n    const {\n      totalSales,\n      onGoingSales,\n      upComingSales,\n      search,\n      isSearch,\n      searchSale,\n      accountInfo,\n    } = this.state;\n\n    return (\n      <div id=\"loader_main\">\n        <div id=\"loader_div\">\n          <span className=\"spin_round\"></span>\n          <img src={favicon} className=\"logo_load\" />\n        </div>\n        <div className=\"logo_overlay\" id=\"logo_overlay\">\n          <Header />\n\n          <div className=\"whole_sec pb-5\">\n            <div className=\"flex_side_right\">\n              <Sidebar />\n              {/* ongoing_sec */}\n              <div className=\"right_side_sec\">\n                {/* <div className=\"text-white topBar d-flex justify-content-between\">\n                  \n                    <small>Trending</small>\n                  <small>\n                    #1&nbsp;<span>Husy</span>\n                  </small>\n                  <small>\n                    #2&nbsp;<span>ORL</span>\n                  </small>\n                  <small>\n                    #3&nbsp;<span>UWC</span>\n                  </small>\n                  <small>\n                    #4&nbsp;<span>777</span>\n                  </small>\n                  <small>\n                    #5&nbsp;<span>IDXS</span>\n                  </small>\n                  <small>\n                    #6&nbsp;<span>COUGNU</span>\n                  </small>\n                  <small>\n                    #7&nbsp;<span>CRICLE</span>\n                  </small>\n                  <small>\n                    #8&nbsp;<span>KASA</span>\n                  </small>\n                  <small>\n                    #9&nbsp;<span>FIFAPP</span>\n                  </small>\n                  <small>\n                    #10&nbsp;<span>SOG</span>\n                  </small>\n                  <small>\n                    #11&nbsp;<span>COOSHA</span>\n                  </small>\n                  <small>\n                    #12&nbsp;<span>Honey</span>\n                  </small>\n                  \n                  \n                </div> */}\n                {/* <Trendingslider/> */}\n                <div className=\"right_side_spacing\">\n                <Container className=\"mt-5 pb-3 px-1\">\n                <div className='col-12  col-md-10 col-lg-9 mx-auto px-0'>\n<div className=\"tab_img\">\n      <div className='card_bg card'>\n <div className='card-body'>\n <div>\n                <div className='row'>\n                <div className='col-12 col-md-12 mb-3'>\n                        \n                        \n                        \n                       </div>\n                        <div className='col-12 col-md-12 mb-0'>\n                    <p className='input_desc_sm'>Token Type <span className=\"text-success\">*</span> </p>\n                    <div className=\"inputs input-groups\">\n\n                    <select className=\"form-control custm_sel\" id=\"exampleFormControlSelect3\" \n                          value={this.state.tokentype}\n                          onChange={(e)=>this.setState({ \"tokentype\": e.target.value }) } placeholder=\"Standard Token\"\n                        >\n                         <option value=\"Standard Token\">Standard Token</option>\n                            <option value=\"Liquidity Generator Token\">Liquidity Generator Token</option>                      \n\n                        </select>\n                        {/* <InputGroup className=\"\">\n\n                          \n                            <FormControl value={this.state.tokentype} onChange={(e)=>this.setState({ \"tokentype\": e.target.value }) } id=\"softcap\" placeholder=\"Standard Token\"\n\n                                aria-describedby=\"basic-addon2\" as = \"select\"\n                            >\n                              <option value=\"Standard Token\">Standard Token</option>\n                              <option value=\"Liquidity Generator Token\">Liquidity Generator Token</option>\n                            </FormControl>\n                          \n                        </InputGroup> */}\n                    </div>\n                    <div className='note_desc mt-1 mb-0'>\n                    <p>Token Creation Fee {this.state.poolfee} BNB</p>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Name <span className=\"text-success\">*</span></p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"hardcap\" value={this.state.name} onChange={(e)=>{this.setState({ name: e.target.value }); }} placeholder=\"Ex:Ethereum\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.name}</span>\n                    </div>\n                        </div> \n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Symbol <span className=\"text-success\">*</span></p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"mincontribution\" value={this.state.Symbol} onChange={(e)=>this.setState({ symbol: e.target.value }) } placeholder=\"Ex:ETH\"\n                                aria-describedby=\"basic-addon2\"\n                                \n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.symbol}</span>\n                    </div>\n                        </div>\n                        \n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Decimals <span className=\"text-success\">*</span></p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"decimals\" placeholder=\"Ex: 18\"\n                                aria-describedby=\"basic-addon2\"\n                                onChange={(e)=>this.setState({decimal : e?.target?.value})}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.decimal}</span>\n                    </div>\n                        </div> \n\n                  <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Total Suply <span className=\"text-success\">*</span></p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"totalsupply\" placeholder=\"Ex: 100000000000\"\n                                aria-describedby=\"basic-addon2\"\n                                onChange={(e)=>this.setState({tokensupply : e?.target?.value})}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.totalsupply}</span>\n                    </div>\n                  </div>\n\n                {this.state.tokentype == \"Liquidity Generator Token\" && \n                  <>\n                    <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Transaction fee to generate yield (%) <span className=\"text-success\">*</span></p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"totalsupply\" placeholder=\"Ex: 51\"\n                                aria-describedby=\"basic-addon2\"\n                                onChange={(e)=>this.setState({yieldfee : e?.target?.value})}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.yieldfee}</span>\n                    </div>\n                  </div>\n\n                  <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Transaction fee to generate liquidity (%) <span className=\"text-success\">*</span></p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"totalsupply\" placeholder=\"Ex: 51\"\n                                aria-describedby=\"basic-addon2\"\n                                onChange={(e)=>this.setState({liquidityfee : e?.target?.value})}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.liquidityfee}</span>\n                    </div>\n                  </div>\n\n                  <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Maximum Transaction Amount<span className=\"text-success\">*</span></p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"hardcap\" value={this.state.maximumtransaction} onChange={(e)=>{this.setState({ maximumtransaction: e.target.value }); }} placeholder=\"Ex:10\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.maximumtransaction}</span>\n                    </div>\n                        </div> \n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Exchange Thersold <span className=\"text-success\">*</span></p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"hardcap\" value={this.state.exchangethresold} onChange={(e)=>{this.setState({ exchangethresold: e.target.value }); }} placeholder=\"Ex:10\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.exchangethresold}</span>\n                    </div>\n                        </div> \n                  </>\n                }\n                  \n\n                        \n\n                      \n                       \n                        \n                      \n\n                       \n            \n\n               {/* <div className='col-12 col-md-12'>\n               <div className=\"custom-control custom-checkbox\">\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n  <label className=\"custom-control-label\" for=\"customCheck1\">Implement Pink Anti - Bot System?</label>\n</div></div>     */}\n         \n                    <div className='col-12 col-md-12 text-center'>\n                        <button className=\"get-started-btn mt-2\" \n                        disabled = {this.state.userbalance < 0.01}\n                        onClick={\n                          // ()=>{this.setState({ currentStep: 1})}\n                          this.handlecreatetoken\n                          \n                          }>\n                           Create Token\n                        </button>\n                        \n                        </div>\n                </div>\n            </div>\n      </div>\n      </div>\n      </div>\n      </div>\n                </Container>\n                <Container className='pb-5 px-0 mt-2'>\n                 \n                 <center>\n                   <small className=\"mt-3 bottom_text\">\n                     Disclaimer: The information provided shall not in any way\n                     constitute a recomendation as to whether you should invest\n                     in any product discussed. We accept no liability for any\n                     loss occasioned to any person acting or refraining from\n                     action as a result of any material provided or published.\n                   </small>\n                 </center>\n               </Container>\n</div>\n                </div>\n                </div>\n                </div>\n                </div>\n      </div>\n    );\n  }\n}\n\nexport default CreateToken;\n","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/FairLaunchEdit.js",["491","492","493","494","495","496","497","498"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\n\nimport Header from '../Header';\nimport Sidebar from '../Sidebar';\nimport Trendingslider from '../trendingslider';\n\n\nimport { getAccount } from '../../hooks/useAccount'\n\n\n\n\n\nimport {  Container, FormControl, InputGroup } from 'react-bootstrap';\nimport '../../css/styles.css';\n\nimport favicon from \"../../images/favicon.png\"\n\nimport { Link } from 'react-router-dom';\n\nclass FairLaunchEdit extends Component {\n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.05;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n\n\n\n  }\n  \n    componentDidMount()\n    {\n        document.getElementById(\"launchpad_parent\").classList.add(\"active\");\n      // this.showLoader();\n      this.hideLoader();\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {          \n            walletModal: false,\n            accountInfo: ''\n        };\n    }\n \n    render() {\n        \n      const location = this.props.location.pathname.split('/')[1];\n\n      const { walletModal} = this.state\n\n      \n      \n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n\n           <Header/>\n          \n           <div className=\"whole_sec pb-5\">\n           <div className='flex_side_right'>\n            <Sidebar />\n           {/* ongoing_sec */}\n           <div className='right_side_sec'>\n           {/* <div className=\"text-white topBar d-flex justify-content-between\">\n                  \n                  <small>Trending</small>\n                <small>\n                  #1&nbsp;<span>Husy</span>\n                </small>\n                <small>\n                  #2&nbsp;<span>ORL</span>\n                </small>\n                <small>\n                  #3&nbsp;<span>UWC</span>\n                </small>\n                <small>\n                  #4&nbsp;<span>777</span>\n                </small>\n                <small>\n                  #5&nbsp;<span>IDXS</span>\n                </small>\n                <small>\n                  #6&nbsp;<span>COUGNU</span>\n                </small>\n                <small>\n                  #7&nbsp;<span>CRICLE</span>\n                </small>\n                <small>\n                  #8&nbsp;<span>KASA</span>\n                </small>\n                <small>\n                  #9&nbsp;<span>FIFAPP</span>\n                </small>\n                <small>\n                  #10&nbsp;<span>SOG</span>\n                </small>\n                <small>\n                  #11&nbsp;<span>COOSHA</span>\n                </small>\n                <small>\n                  #12&nbsp;<span>Honey</span>\n                </small>\n                \n                \n              </div> */}\n              {/* <Trendingslider/> */}\n              <div className=\"right_side_spacing\">\n              <div className='row mt-5'>\n           <div className='col-12 col-md-10 col-lg-9 mx-auto'>\n           <div className=\"tab_img\">\n                 <div className='card_bg card'>\n            <div className='card-body'>\n                  \n          \n\n            <div>\n                <div className='row'>\n\n              \n                <div className='col-12 col-md-12 mb-0'>\n                        \n                        <p className='input_desc_sm'>Logo URL</p>\n                        <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"file\" value={this.state.logo} onChange={(e)=>this.setState({ logo: e.target.value }) } placeholder=\"\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        <div className='note_desc mt-1 mb-0'>\n                    <p>URL must be end with a supported image extension .png, .jpg,</p>\n                    </div>\n                            </div>\n\n                            <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Website</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl value={this.state.website} onChange={(e)=>this.setState({ website: e.target.value }) } id=\"logolink1\" placeholder=\"https://cryptolaunchpad.app\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Facebook</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl  id=\"logolinkfb\" placeholder=\"https://facebook.com\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Twitter</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl value={this.state.twitter} onChange={(e)=>this.setState({ twitter: e.target.value }) } id=\"logolink2\" placeholder=\"https://twitter.com\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Github</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"logolinkgit\" placeholder=\"https://github.com\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Telegram</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl value={this.state.telegram} onChange={(e)=>this.setState({ telegram: e.target.value }) } id=\"logolink3\" placeholder=\"https://telegram.com\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Instagram</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl  id=\"logolinkinsta\" placeholder=\"https://instagram.com\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Discord</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl  id=\"logolinkdiscord\" placeholder=\"https://discord.com\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n                        \n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Reddit</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl  id=\"logolinkreddit\" placeholder=\"https://reddit.com\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-0'>\n                    <p className='input_desc_sm'>Youtube Video</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl  id=\"logolinkyoutube\" placeholder=\"https://youtube.com\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n\n                    <div className='note_desc mt-1 mb-0'>\n                    <p>Input your youtube URL</p>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Description</p>\n                    <div className=\"inputs input-groups text_are_grp\">\n                        <InputGroup className=\"\">\n                            <textarea value={this.state.description} onChange={(e)=>this.setState({ description: e.target.value }) } id=\"description\" rows=\"3\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                    </div>\n\n\n\n                    \n                    <div className='col-12 col-md-12 text-center'>\n                        <Link to=\"/fairlaunchdetail\" className=\"get-started-btn mr-2\">\n                           Back\n                        </Link>\n                        <button className=\"get-started-btn\">\n                           Update\n                        </button>\n                        </div>\n                </div>\n            </div>\n\n          \n                      \n             </div>\n             </div>\n            </div>\n            </div>\n        \n\n                \n               \n        </div>\n\n            <Container className='pb-5 px-0 mt-4'>\n                 \n                 <center>\n                   <small className=\"mt-3 bottom_text\">\n                     Disclaimer: The information provided shall not in any way\n                     constitute a recomendation as to whether you should invest\n                     in any product discussed. We accept no liability for any\n                     loss occasioned to any person acting or refraining from\n                     action as a result of any material provided or published.\n                   </small>\n                 </center>\n               </Container>\n            </div>\n           </div>\n           </div>\n           </div>\n\n            {/* <Footer /> */}\n        </div>\n        </div>\n        )\n    }\n}\n\nexport default FairLaunchEdit","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Projects/Kyc.js",["499","500","501","502","503","504","505","506","507","508","509","510","511","512"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport isEmpty from \"is-empty\";\n\nimport Validator from \"validator\";\nimport Header from '../Header';\nimport Sidebar from '../Sidebar';\nimport Trendingslider from '../trendingslider';\nimport Walletmodal from \"../Walletmodal\";\nimport folderimage from \"../../images/folder_zip.png\";\n\n\nimport { getAccount } from '../../hooks/useAccount'\n\n\n\n\n\nimport {  Container, FormControl, InputGroup } from 'react-bootstrap';\nimport '../../css/styles.css';\n\nimport favicon from \"../../images/favicon.png\"\nimport proof from \"../../images/proof.webp\"\nimport { Link } from 'react-router-dom';\nimport { kycvalid } from '../../hooks/kycvalidation';\nimport { getkychook, uploadkychook } from '../../hooks/usebackend';\nimport { API_URL } from '../../config/env';\n// import Walletmodal from \"../Walletmodal\";\n// import *as valid from '../../hooks/kycvalidation';\n\nclass Kyc extends Component {\n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.05;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n\n\n\n  }\n  \n    componentDidMount()\n    {\n      // this.showLoader();\n      this.hideLoader();\n      this.handlegetkyc()\n    //    this.setState({ accountInfo: getAccount() });\n\n    var account = getAccount();\n    if(!account ){\n      // console.log(\"sessionStorage.getItem\" , kyc)\n      this.props.history.push(\"/\");\n    }\n    }\n\n\n    async fetchdata1(){\n  if(!await window?.ethereum?._metamask.isUnlocked() || !localStorage.getItem(\"accountInfo\") || !sessionStorage.getItem(\"accountInfo\")){\n    this.setState({walletModal : true})\n  }\n\n}\n\n    constructor(props) {\n        super(props);\n        this.state = {          \n            walletModal: false,\n            accountInfo: localStorage.getItem(\"accountInfo\"),\n            front : '',\n            back : '',\n            idtype : '',\n            idnumber : '',\n            frontview : '',\n            backview : '',\n            address : '',\n            kyc : {},\n            errors: {}\n        };\n    }\n\n    // componentDidUpdate(){\n    //   console.log(\"data\");\n    //   this.handlegetkyc()\n    // }\n\n    handlegetkyc = async()=>{\n      if(isEmpty(this.state.kyc)){\n        let walletaddress = localStorage.getItem(\"accountInfo\")?localStorage.getItem(\"accountInfo\") : \"\";\n        let result = await getkychook(walletaddress.toLowerCase());\n        console.log(\"result\" , result?.data?.data);\n        if(result?.data?.data?.record?.status == 'Approved' || result?.data?.data?.record?.status == \"Pending\"){\n          this.setState({kyc : result?.data?.data?.record})\n        }\n      }\n    }\n    handlesubmit = async()=>{\n      let payload = {\n        walletaddress : localStorage.getItem(\"accountInfo\").toLowerCase(),\n        idtype : this.state.idtype,\n        idnumber : this.state.idnumber,\n        address : this.state.address,\n        front : this.state.front,\n        back : this.state.back\n      }\n      var validate = await kycvalid(payload);\n      if(validate.isValid){\n        this.showLoader();\n        let result = await uploadkychook(payload)\n        this.handlegetkyc()\n        this.hideLoader()\n      }\n      else{\n        this.setState({errors : validate.errors})\n        console.log(\"error\" , validate.errors);\n      }\n    }\n \n    render() {\n\n\n      \n      \n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n\n           <Header/>\n          \n           <div className=\"whole_sec pb-5\">\n           <div className='flex_side_right'>\n            <Sidebar />\n           {/* ongoing_sec */}\n           <div className='right_side_sec'>\n           {/* <div className=\"text-white topBar d-flex justify-content-between\">\n                  \n                  <small>Trending</small>\n                <small>\n                  #1&nbsp;<span>Husy</span>\n                </small>\n                <small>\n                  #2&nbsp;<span>ORL</span>\n                </small>\n                <small>\n                  #3&nbsp;<span>UWC</span>\n                </small>\n                <small>\n                  #4&nbsp;<span>777</span>\n                </small>\n                <small>\n                  #5&nbsp;<span>IDXS</span>\n                </small>\n                <small>\n                  #6&nbsp;<span>COUGNU</span>\n                </small>\n                <small>\n                  #7&nbsp;<span>CRICLE</span>\n                </small>\n                <small>\n                  #8&nbsp;<span>KASA</span>\n                </small>\n                <small>\n                  #9&nbsp;<span>FIFAPP</span>\n                </small>\n                <small>\n                  #10&nbsp;<span>SOG</span>\n                </small>\n                <small>\n                  #11&nbsp;<span>COOSHA</span>\n                </small>\n                <small>\n                  #12&nbsp;<span>Honey</span>\n                </small>\n                \n                \n              </div> */}\n              {/* <Trendingslider/> */}\n              <div className=\"right_side_spacing\">\n              <div className='row mt-5'>\n           <div className='col-12 col-md-10 col-lg-9 mx-auto'>\n           <div className=\"tab_img\">\n                 <div className='card_bg card'>\n            <div className='card-body'>\n                  \n          \n\n            <div>\n                <div className='row'>\n                  { isEmpty(this.state.kyc)  && <>\n                <div className='col-12 col-md-12 mb-3'>\n                        \n                        <p className='input_desc_sm'>1. Proof of Identity</p>\n                        <p className='desc_grey_txt'>Please upload a clear, readable copy of any of the following:</p>\n                    \n                        <div className='note_desc mt-1 mb-0'>\n                    <p>Document must be a supported  extension .zip</p>\n                    </div>\n                            </div>\n                <div className='col-12 col-md-12 mb-3'>\n                        \n                        <p className='input_desc_sm'>Select Document Type</p>\n                        <div className=\"inputs input-groups\">\n                        <select className=\"form-control custm_sel\" id=\"exampleFormControlSelect3\" \n                          value={this.state.idtype}\n                          onChange = {(e)=>{\n                            this.setState({'idtype' : e.target.value})\n                          }}\n                        >\n                        <option value=''>Select Document Type</option>\n                        <option value = 'Voter ID'>Voter ID</option>  \n                        <option value = 'Aadhar Card'>Aadhar Card</option>                       \n                        <option value = 'Driving License'>Driving License</option>                       \n\n                        </select>\n                        <span className=\"text-danger\">{this.state.errors.idtype}</span>\n                    </div>                      \n                            </div>\n\n                            <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>ID Number</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"idnumber\" placeholder=\"\"\n                                aria-describedby=\"basic-addon2\"\n                                value={this?.state?.idnumber}\n                                onChange = {(e)=>{\n                                  this.setState({'idnumber' : e.target.value}, ()=>console.log(\"idtype\" , this.state.idnumber))\n                                }}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger\">{this.state.errors.idnumber}</span>\n                    </div>\n                        </div>\n\n                <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Address</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"address\" placeholder=\"\"\n                                aria-describedby=\"basic-addon2\"\n                                value={this.state.address}\n                                onChange={(e)=>{\n                                  this.setState({\"address\" : e.target.value});\n                                }}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger\">{this.state.errors.address}</span>\n                    </div>\n                </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Upload Document in zipfile</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"file_grp_input\" \n                            onChange={(e)=>{\n                              this.setState({'front' : e.target.files[0]});\n                              this.setState({'frontview' : URL.createObjectURL(e.target.files[0])})\n                            }}\n                        >\n                        <div className=\"w-100\">\n                    <div className=\"custom-file\">\n                        <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile04\" aria-describedby=\"inputGroupFileAddon04\" />\n                        <label className=\"custom-file-label mb-0\" for=\"inputGroupFile04\">\n                          { this.state.front ? this.state.front.name :\"Choose file\"}</label>\n                    </div>\n                    \n                    </div>\n                          \n                        </InputGroup>\n                        <span className=\"text-danger\">{this.state.errors.front}</span>\n                    </div>\n                        </div>\n                        {/* <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Back Side</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"file_grp_input\"\n                          onChange={(e)=>{\n                            this.setState({'back' : e.target.files[0]});\n                            this.setState({'backview' : URL.createObjectURL(e.target.files[0])})\n                          }}\n                        >\n                        <div className=\"w-100\">\n                    <div className=\"custom-file\">\n                        <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile05\" aria-describedby=\"inputGroupFileAddon04\" />\n                        <label className=\"custom-file-label mb-0\" for=\"inputGroupFile04\">Choose file</label>\n                    </div>\n                    \n                    </div>\n                          \n                        </InputGroup>\n                        <span className=\"text-danger\">{this.state.errors.back}</span>\n                    </div>\n                        </div> */}\n                        {/* <div className='col-12 col-sm-6 mb-3 mt-1'>\n                        <p className='input_desc_sm'>Front Side Image</p>\n                        <div className=\"icon_align_border\">\n                        <img src={this.state.frontview ? this.state.frontview : proof} className=\"img-fluid p-3\" />\n                        </div>\n                        </div>\n                        <div className='col-12 col-sm-6 mb-3 mt-1'>\n                        <p className='input_desc_sm'>Back Side Image</p>\n                        <div className=\"icon_align_border\">\n                        <img src={this.state.backview ? this.state.backview : proof} className=\"img-fluid p-3\" />\n                        </div>\n                        </div> */}\n                        </>}\n                  \n\n                  {!isEmpty(this.state.kyc) && <>\n                        <div className='col-12 col-md-12 mb-3'>\n                        \n                        <p className='input_desc_sm'>1. Proof of identity</p>\n                        <p className='desc_grey_txt'>Please upload a clear, readable copy of any of the following:</p>\n                    \n                        <div className='note_desc mt-1 mb-0'>\n                    <p>Images must be a supported image extension .png, .jpg, .jpeg Max 3MB</p>\n                    </div>\n                            </div>\n                <div className='col-12 col-md-12 mb-3'>\n                        \n                        <p className='input_desc_sm'>Select Document Type</p>\n                        <div className=\"inputs input-groups\">\n                        <select className=\"form-control custm_sel\" id=\"exampleFormControlSelect3\"\n                        value= {this.state.kyc.idtype}\n                        disabled=\"disabled\"\n                        >\n                        <option>Voter ID</option>  \n                        <option>Aadhar Card</option>                       \n                        <option>Driving License</option>                       \n\n                        </select>\n                    </div>                      \n                            </div>\n\n                <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>ID Number</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"idnumber\" placeholder=\"\"\n                                aria-describedby=\"basic-addon2\"\n                                value={this?.state?.kyc?.idnumber}\n                                readOnly = {true}\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                </div>\n\n                            <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Address</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"address\" placeholder=\"\"\n                                aria-describedby=\"basic-addon2\"\n                                value= {this.state.kyc.address}\n                                readOnly = {true}\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Uploaded Document in zipfile</p>\n                    <div className=\"inputs input-groups\">\n                    <a href={API_URL +\"/\"+ this.state.kyc.path +\"/\"+ this.state.kyc.image} download >\n                    {/* <a href={\"/images/myw3schoolsimage.jpg\"} download> */}\n                    <img src={folderimage} alt=\"W3Schools\" width=\"104\" height=\"142\"></img>\n\n                    </a>\n                        {/* <InputGroup className=\"file_grp_input\" \n                            onChange={(e)=>{\n                              this.setState({'front' : e.target.files[0]});\n                              // this.setState({'frontview' : URL.createObjectURL(e.target.files[0])})\n                            }}\n                        >\n                        <div className=\"w-100\">\n                    <div className=\"custom-file\">\n                        <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile04\" aria-describedby=\"inputGroupFileAddon04\" />\n                        <label className=\"custom-file-label mb-0\" for=\"inputGroupFile04\">\n                          {/* { this.state.front ? this.state.front.name :\"Choose file\"} */}\n                          {/* </label>\n                    </div>\n                    \n                    </div>\n                          \n                        </InputGroup> */} \n                        <span className=\"text-danger\">{this.state.errors.front}</span>\n                    </div>\n                        </div>\n                        \n                   \n                        {/* <div className='col-12 col-sm-6 mb-3 mt-1'>\n                        <p className='input_desc_sm'>Front Side Image</p>\n                        <div className=\"icon_align_border\">\n                          {console.log(\"API_URL + this.state.kyc.path + this.state.kyc.image[0]\" , API_URL + this.state.kyc.path + this.state.kyc.image[0])}\n                          <img src={API_URL + this.state.kyc.path + this.state.kyc.image[0]} className=\"img-fluid p-3\" />\n                        </div>\n                        </div>                    \n\n                    <div className='col-12 col-sm-6 mb-3 mt-1'>\n                        <p className='input_desc_sm'>Back Side Image</p>\n                        <div className=\"icon_align_border\">\n                        <img src={API_URL + this.state.kyc.path + this.state.kyc.image[1]} className=\"img-fluid p-3\" />\n                        </div>\n                    </div> */}\n                    </>}\n                    <div className='col-12 col-md-12 text-center mt-3'>                   \n                        <button className=\"get-started-btn\" onClick={this.handlesubmit}\n                          disabled = {this.state.kyc.status == \"Approved\" || this.state.kyc.status == \"Pending\"}\n                        >\n                           {this.state.kyc.status?this.state.kyc.status: \"Apply\" }\n                        </button>\n                        </div>\n                </div>\n            </div>\n\n          \n                      \n             </div>\n             </div>\n            </div>\n            </div>\n        \n\n                \n               \n        </div>\n\n            <Container className='pb-5 px-0 mt-4'>\n                 \n                 <center>\n                   <small className=\"mt-3 bottom_text\">\n                     Disclaimer: The information provided shall not in any way\n                     constitute a recomendation as to whether you should invest\n                     in any product discussed. We accept no liability for any\n                     loss occasioned to any person acting or refraining from\n                     action as a result of any material provided or published.\n                   </small>\n                 </center>\n               </Container>\n            </div>\n           </div>\n           </div>\n           </div>\n\n            {/* <Footer /> */}\n        </div>\n        </div>\n        )\n    }\n}\n\nexport default Kyc","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Privatesale/CreatePrivatesale.js",["513","514","515","516","517","518","519","520"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\n\nimport Header from '../Header';\nimport Sidebar from '../Sidebar';\nimport Walletmodal from \"../Walletmodal\";\n\nimport Trendingslider from \"../trendingslider\";\n\nimport CreatePrivatesaletab from \"./CreatePrivatesaletab\";\nimport { getAccount } from '../../hooks/useAccount'\n\n\n\n\n\nimport {  Container } from 'react-bootstrap';\nimport '../../css/styles.css';\n\nimport favicon from \"../../images/favicon.png\"\nimport { getkychook } from '../../hooks/usebackend';\nimport toast from 'react-hot-toast';\n\n\nclass CreatePrivatesale extends Component {\n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.05;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n\n\n\n  }\n\n  showLoaderConnect()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    // document.getElementById(\"logo_overlay\").style.opacity = 0.05;\n    document.getElementById(\"loader_div_connect\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div_connect\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoaderConnect()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    // document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div_connect\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div_connect\").classList.add(\"d-none\");\n  }\n  async fetchdata1(){\n        // let walletaddress = localStorage.getItem(\"accountInfo\");\n        //   let result = await getkychook(walletaddress.toLowerCase());\n        //   console.log(\"result\" , result?.data?.data?.type);\n        //   if(result?.data?.data?.type== \"nodata\" || result?.data?.data?.record?.status != \"Approved\"){\n        //     toast.error(\"Register your account\")\n        //     return 0;\n        //   }\n    if(!await window?.ethereum?._metamask.isUnlocked() || !localStorage.getItem(\"accountInfo\") || !sessionStorage.getItem(\"accountInfo\")){\n      this.showLoaderConnect()\n    }\n    else{\n      this.hideLoaderConnect();\n      // this.showLoaderConnect()\n    }\n  }\n  \n    componentDidMount()\n    {\n      this.hideLoader()\n      // this.showLoader();\n      document.getElementById(\"privatesale_parent\").classList.add(\"active\");\n      \n      this.fetchdata1()\n      // var kyc = sessionStorage.getItem(\"kyc\")\n      // if(kyc == \"false\" || !kyc){\n      //   console.log(\"sessionStorage.getItem\" , kyc)\n      //   this.props.history.push(\"/kyc\");\n      // }\n      \n    }\n    onDismiss(){\n      this.setState({ walletModal: false }); \n      if(!sessionStorage.getItem(\"accountInfo\")){\n        this.hideLoaderConnect();\n      }\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {          \n            walletModal: false,\n            accountInfo: '',\n\n            loaders : false\n        };\n    }\n \n    render() {\n        \n\n\n      \n      \n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n      <div className={!this.state.loaders ?'loader_only' : \"d-none\"}>\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n    </div>\n\n\n    {/* <div className='load_connect_text'>\n    <button className=\"get-started-btn btn_connect_loader\" onClick={() => {\n      this.hideLoader()\n      this.setState({ walletModal: true }); \n      }}>\n                     Connect Wallet to Continue\n            </button>\n        </div> */}\n\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n\n           <Header/>\n          \n           <div className=\"whole_sec pb-5\">\n           <div className='flex_side_right'>\n            <Sidebar />\n           {/* ongoing_sec */}\n           <div className='right_side_sec'>\n           <div id=\"loader_div_connect\">\n     \n     <div className='load_connect_text'>\n     <button className=\"get-started-btn btn_connect_loader\" onClick={() => this.setState({ walletModal: true })}>\n                     Connect Wallet to Continue\n             </button>\n         </div>\n\n   </div>\n           {/* <div className=\"text-white topBar d-flex justify-content-between\">\n                  \n                  <small>Trending</small>\n                <small>\n                  #1&nbsp;<span>Husy</span>\n                </small>\n                <small>\n                  #2&nbsp;<span>ORL</span>\n                </small>\n                <small>\n                  #3&nbsp;<span>UWC</span>\n                </small>\n                <small>\n                  #4&nbsp;<span>777</span>\n                </small>\n                <small>\n                  #5&nbsp;<span>IDXS</span>\n                </small>\n                <small>\n                  #6&nbsp;<span>COUGNU</span>\n                </small>\n                <small>\n                  #7&nbsp;<span>CRICLE</span>\n                </small>\n                <small>\n                  #8&nbsp;<span>KASA</span>\n                </small>\n                <small>\n                  #9&nbsp;<span>FIFAPP</span>\n                </small>\n                <small>\n                  #10&nbsp;<span>SOG</span>\n                </small>\n                <small>\n                  #11&nbsp;<span>COOSHA</span>\n                </small>\n                <small>\n                  #12&nbsp;<span>Honey</span>\n                </small>\n                \n                \n              </div> */}\n              {/* <Trendingslider/> */}\n              <div className=\"right_side_spacing\">\n             <CreatePrivatesaletab />\n\n            <Container className='pb-5 px-0 mt-4'>\n                 \n                 <center>\n                   <small className=\"mt-3 bottom_text\">\n                     Disclaimer: The information provided shall not in any way\n                     constitute a recomendation as to whether you should invest\n                     in any product discussed. We accept no liability for any\n                     loss occasioned to any person acting or refraining from\n                     action as a result of any material provided or published.\n                   </small>\n                 </center>\n               </Container>\n              \n            </div>\n           </div>\n           </div>\n           </div>\n\n            {/* <Footer /> */}\n        </div>\n        {this.state.walletModal && <Walletmodal connect={\"string\"} onDismiss={()=>this.onDismiss()} /> }\n        </div>\n        )\n    }\n}\n\nexport default CreatePrivatesale","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Privatesale/PrivateSaleEdit.js",["521","522","523","524","525","526","527"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\n\nimport Header from '../Header';\nimport Sidebar from '../Sidebar';\nimport Trendingslider from '../trendingslider';\n\nimport Walletmodal from \"../Walletmodal\";\n\n\nimport { getAccount } from '../../hooks/useAccount'\n\n\n\n\n\nimport {  Container, FormControl, InputGroup } from 'react-bootstrap';\nimport '../../css/styles.css';\n\nimport favicon from \"../../images/favicon.png\"\nimport { Link } from 'react-router-dom';\n\nclass PrivateSaleEdit extends Component {\n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.05;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n\n\n\n  }\n  \n    componentDidMount()\n    {\n        document.getElementById(\"privatesale_parent\").classList.add(\"active\");\n      // this.showLoader();\n      this.hideLoader();\n    //    this.setState({ accountInfo: getAccount() });\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {          \n            walletModal: false,\n            accountInfo: ''\n        };\n    }\n \n    render() {\n\n\n      \n      \n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n\n           <Header/>\n          \n           <div className=\"whole_sec pb-5\">\n           <div className='flex_side_right'>\n            <Sidebar />\n           {/* ongoing_sec */}\n           <div className='right_side_sec'>\n           {/* <div className=\"text-white topBar d-flex justify-content-between\">\n                  \n                  <small>Trending</small>\n                <small>\n                  #1&nbsp;<span>Husy</span>\n                </small>\n                <small>\n                  #2&nbsp;<span>ORL</span>\n                </small>\n                <small>\n                  #3&nbsp;<span>UWC</span>\n                </small>\n                <small>\n                  #4&nbsp;<span>777</span>\n                </small>\n                <small>\n                  #5&nbsp;<span>IDXS</span>\n                </small>\n                <small>\n                  #6&nbsp;<span>COUGNU</span>\n                </small>\n                <small>\n                  #7&nbsp;<span>CRICLE</span>\n                </small>\n                <small>\n                  #8&nbsp;<span>KASA</span>\n                </small>\n                <small>\n                  #9&nbsp;<span>FIFAPP</span>\n                </small>\n                <small>\n                  #10&nbsp;<span>SOG</span>\n                </small>\n                <small>\n                  #11&nbsp;<span>COOSHA</span>\n                </small>\n                <small>\n                  #12&nbsp;<span>Honey</span>\n                </small>\n                \n                \n              </div> */}\n              {/* <Trendingslider/> */}\n              <div className=\"right_side_spacing\">\n              <div className='row mt-5'>\n           <div className='col-12 col-md-10 col-lg-9 mx-auto'>\n           <div className=\"tab_img\">\n                 <div className='card_bg card'>\n            <div className='card-body'>\n                  \n          \n\n            <div>\n                <div className='row'>\n\n                <div className='col-12 col-md-12 mb-3'>\n                        \n                        <p className='input_desc_sm'>Title</p>\n                        <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"file\" value=\"New private Sale\" placeholder=\"\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                      \n                            </div>\n                <div className='col-12 col-md-12 mb-0'>\n                        \n                        <p className='input_desc_sm'>Logo URL</p>\n                        <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"file\" value={this.state.logo} onChange={(e)=>this.setState({ logo: e.target.value }) } placeholder=\"\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        <div className='note_desc mt-1 mb-0'>\n                    <p>URL must be end with a supported image extension .png, .jpg,</p>\n                    </div>\n                            </div>\n\n                            <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Website</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl value={this.state.website} onChange={(e)=>this.setState({ website: e.target.value }) } id=\"logolink1\" placeholder=\"https://cryptolaunchpad.app\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Facebook</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl  id=\"logolinkfb\" placeholder=\"https://facebook.com\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Twitter</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl value={this.state.twitter} onChange={(e)=>this.setState({ twitter: e.target.value }) } id=\"logolink2\" placeholder=\"https://twitter.com\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Github</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"logolinkgit\" placeholder=\"https://github.com\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Telegram</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl value={this.state.telegram} onChange={(e)=>this.setState({ telegram: e.target.value }) } id=\"logolink3\" placeholder=\"https://telegram.com\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Instagram</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl  id=\"logolinkinsta\" placeholder=\"https://instagram.com\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Discord</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl  id=\"logolinkdiscord\" placeholder=\"https://discord.com\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n                        \n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Reddit</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl  id=\"logolinkreddit\" placeholder=\"https://reddit.com\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-0'>\n                    <p className='input_desc_sm'>Youtube Video</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl  id=\"logolinkyoutube\" placeholder=\"https://youtube.com\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n\n                    <div className='note_desc mt-1 mb-0'>\n                    <p>Input your youtube URL</p>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Description</p>\n                    <div className=\"inputs input-groups text_are_grp\">\n                        <InputGroup className=\"\">\n                            <textarea value={this.state.description} onChange={(e)=>this.setState({ description: e.target.value }) } id=\"description\" rows=\"3\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                    </div>\n\n\n\n                    \n                    <div className='col-12 col-md-12 text-center'>\n                    <Link to=\"/privatesaledetail\" className=\"get-started-btn mr-2\">\n                           Back\n                        </Link>\n                        <button className=\"get-started-btn\">\n                           Update\n                        </button>\n                        </div>\n                </div>\n            </div>\n\n          \n                      \n             </div>\n             </div>\n            </div>\n            </div>\n        \n\n                \n               \n        </div>\n\n            <Container className='pb-5 px-0 mt-4'>\n                 \n                 <center>\n                   <small className=\"mt-3 bottom_text\">\n                     Disclaimer: The information provided shall not in any way\n                     constitute a recomendation as to whether you should invest\n                     in any product discussed. We accept no liability for any\n                     loss occasioned to any person acting or refraining from\n                     action as a result of any material provided or published.\n                   </small>\n                 </center>\n               </Container>\n            </div>\n           </div>\n           </div>\n           </div>\n\n            {/* <Footer /> */}\n        </div>\n        </div>\n        )\n    }\n}\n\nexport default PrivateSaleEdit","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/Liquiditytokensuccess.js",["528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559"],"import React, { Component } from \"react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\nimport Trendingslider from '../trendingslider';\n\n\n\n\nimport \"../../css/styles.css\";\n\n\nimport favicon from \"../../images/favicon.png\";\n\n\nimport {\n  getSaleCards,\n  getSaleCardsLimit,\n  getTotalSalesInfo,\n  searchCards,\n  searchSale,\n} from \"../../hooks/useProjects\";\nimport {\n  Container,\n  Dropdown,\n  Row,\n  Col,\n  Card,\n  ProgressBar,\n  InputGroup,\n  Form,\n  Tab,\n  Nav,\n  FormControl\n} from \"react-bootstrap\";\nimport { validstandardtoken } from \"../../hooks/kycvalidation\";\nimport { gettokendata } from \"../../hooks/useContract\";\n\n\nclass LiquidityTokenSuccess extends Component {\n \n  \n\n\n  showLoader() {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.5;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n  }\n\n  hideLoader() {\n    document\n      .getElementsByTagName(\"body\")[0]\n      .classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n  }\n\n  componentDidMount() {\n    document.getElementById(\"launchpad_parent\").classList.add(\"active\");\n    this.hideLoader();\n    // this.gettokendatas()\n    // console.log(\"address\" ,JSON.parse(sessionStorage.getItem(\"TKNDATA\")) , JSON.parse(sessionStorage.getItem(\"HASH\")));\n  }\n  // gettokendatas= async()=>{\n  //   console.log(\">>>\" , this.state.tokenaddress.address , this.state.tokenaddress.hash);\n  //   let data = await gettokendata(this.state.tokenaddress.address);\n  //   console.log(\"data\" , data);\n  // }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      proxy: [],\n      totalSales: [],\n      onGoingSales: [],\n      upComingSales: [],\n      isSearch: false,\n      searchSale: [],\n      search: \"\",\n      interval: 3,\n      loadInterval: 3,\n      searchInterval: 3,\n      searchProxy: [],\n      isLoading: false,\n      currentChain: 0,\n      setUpdateCms: false,\n      name : JSON.parse(sessionStorage.getItem(\"TKNDATA\")).name,\n      symbol :JSON.parse(sessionStorage.getItem(\"TKNDATA\")).symbol,\n      supply : JSON.parse(sessionStorage.getItem(\"TKNDATA\")).supply,\n    \n      \n      tokenaddress : JSON.parse(sessionStorage.getItem(\"TKNDATA\")).tokenAddress,\n      errors : {},\n      hashlink : 'https://testnet.bscscan.com/tx/'+JSON.parse(sessionStorage.getItem(\"HASH\")).transactionHash,\n      hash : JSON.parse(sessionStorage.getItem(\"HASH\")).transactionHash,\n      copy : \"Copy Address\"\n    };\n  }\n\n  handlecreatetoken = async()=>{\n    if(this.state.tokentype == \"Standard Token\"){\n      let payload = {\n        name : this.state.name,\n        symbol : this.state.symbol,\n        decimal : this.state.decimal,\n        totalsupply : this.state.totalsupply\n      }\n      let validate = await validstandardtoken(payload);\n      if(validate?.isValid){\n        \n      }\n      else{\n        this.setState({errors : validate?.errors})\n      }\n    }\n  }\n\n\n\n  render() {\n    const location = this.props.location.pathname.split(\"/\")[1];\n\n    const {\n      totalSales,\n      onGoingSales,\n      upComingSales,\n      search,\n      isSearch,\n      searchSale,\n      accountInfo,\n    } = this.state;\n\n    return (\n      <div id=\"loader_main\">\n        <div id=\"loader_div\">\n          <span className=\"spin_round\"></span>\n          <img src={favicon} className=\"logo_load\" />\n        </div>\n        <div className=\"logo_overlay\" id=\"logo_overlay\">\n          <Header />\n\n          <div className=\"whole_sec pb-5\">\n            <div className=\"flex_side_right\">\n              <Sidebar />\n              {/* ongoing_sec */}\n              <div className=\"right_side_sec\">\n                {/* <div className=\"text-white topBar d-flex justify-content-between\">\n                  \n                    <small>Trending</small>\n                  <small>\n                    #1&nbsp;<span>Husy</span>\n                  </small>\n                  <small>\n                    #2&nbsp;<span>ORL</span>\n                  </small>\n                  <small>\n                    #3&nbsp;<span>UWC</span>\n                  </small>\n                  <small>\n                    #4&nbsp;<span>777</span>\n                  </small>\n                  <small>\n                    #5&nbsp;<span>IDXS</span>\n                  </small>\n                  <small>\n                    #6&nbsp;<span>COUGNU</span>\n                  </small>\n                  <small>\n                    #7&nbsp;<span>CRICLE</span>\n                  </small>\n                  <small>\n                    #8&nbsp;<span>KASA</span>\n                  </small>\n                  <small>\n                    #9&nbsp;<span>FIFAPP</span>\n                  </small>\n                  <small>\n                    #10&nbsp;<span>SOG</span>\n                  </small>\n                  <small>\n                    #11&nbsp;<span>COOSHA</span>\n                  </small>\n                  <small>\n                    #12&nbsp;<span>Honey</span>\n                  </small>\n                  \n                  \n                </div> */}\n                {/* <Trendingslider/> */}\n                <div className=\"right_side_spacing\">\n                <Container className=\"mt-5 pb-3 px-1\">\n                <div className='col-12  col-md-10 col-lg-9 mx-auto px-0'>\n<div className=\"tab_img\">\n      <div className='card_bg card'>\n <div className='card-body'>\n <div>\n                <div className='success_div py-4'>\n              \n<p className=\"text_green text-center\">Your token was created!</p>\n\n<p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n<span className='desc_grey_txt'>Name :</span>\n<span className='desc_grey_txt font_12'>{this.state.name}</span>\n</p> \n\n<p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n<span className='desc_grey_txt'>Symbol :</span>\n<span className='desc_grey_txt font_12'>{this.state.symbol}</span>\n</p> \n\n<p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n<span className='desc_grey_txt'>Total Supply :</span>\n<span className='desc_grey_txt font_12'>{this.state.supply}</span>\n</p> \n\n<p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n<span className='desc_grey_txt'>Address :</span>\n<span className='desc_grey_txt font_12'>{this.state.tokenaddress}</span>\n</p> \n         \n                    <div className='mt-5 btn4_div'>\n                      <a href = {this.state.hashlink} target=\"_blank\">\n                    <button className=\"get-started-btn mt-2 mx-1\"\n                      // onclick={window.open(this.state.hash.toString() , \"_blank\")}\n                      // onclick=\"window.open('http://www.website.com/page')\"\n                    >\n                           View Transaction\n                        </button></a>\n                    <button className=\"get-started-btn mt-2 mx-1\"\n                      onClick={() =>  {\n                        navigator.clipboard.writeText(this.state.tokenaddress)\n                        this.setState({\"copy\" : \"Copied\"})\n                      }}\n                    >\n                           {this.state.copy}\n                        </button>\n                        <button className=\"get-started-btn mt-2 mx-1\">\n                           Create Launchpad\n                        </button>\n                        <button className=\"get-started-btn mt-2 mx-1\">\n                           Create Fairlaunch\n                        </button>\n                        \n                        </div>\n                </div>\n            </div>\n      </div>\n      </div>\n      </div>\n      </div>\n                </Container>\n                <Container className='pb-5 px-0 mt-2'>\n                 \n                 <center>\n                   <small className=\"mt-3 bottom_text\">\n                     Disclaimer: The information provided shall not in any way\n                     constitute a recomendation as to whether you should invest\n                     in any product discussed. We accept no liability for any\n                     loss occasioned to any person acting or refraining from\n                     action as a result of any material provided or published.\n                   </small>\n                 </center>\n               </Container>\n</div>\n                </div>\n                </div>\n                </div>\n                </div>\n      </div>\n    );\n  }\n}\n\nexport default LiquidityTokenSuccess;\n","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/FairLaunchDetail.js",["560","561","562","563","564","565","566","567","568","569","570"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\n\nimport Header from '../Header';\nimport Sidebar from '../Sidebar';\nimport Trendingslider from '../trendingslider';\n\nimport { getAccount, getAllocationInfo } from '../../hooks/useAccount'\n\nimport Chart from \"react-apexcharts\";\n\n\nimport Countdown from 'react-countdown';\n\n\nimport {  Container, ProgressBar,InputGroup, FormControl, Button} from 'react-bootstrap';\nimport '../../css/styles.css';\n\nimport favicon from \"../../images/favicon.png\"\nimport { Link } from 'react-router-dom';\nimport { DeletePresale, getSaleInfoCard, GetSalePerAccount, UseTokenInfo } from '../../hooks/useContract';\nimport { isSaleLive, isUpcoming, Salediffernce, UpcomingDiffernce } from '../../hooks/useProjects';\nimport { ONEDAYINSECONDS } from '../../config/env';\n\n\nimport WhitelistModal from \"../WhitelistModal\"\nimport RemoveWhitelistmodal from \"../RemoveWhitelistmodal\"\nimport ChangeStatusmodal from \"../ChangeStatusmodal\"\nimport { BuyToken, calculateBuy, claimToken } from '../../hooks/useBuy';\nimport { Finalise, getUnsold, SetWhitelisted, updateStopEvent, withdrawBNB } from '../../hooks/useAdmin';\n\n\nconst renderer = ({ days, Month, Year, hours, minutes, seconds, completed }) => {\n    if (completed) {\n      return  <div className='cout_man_div'>\n      <div>{days}d </div>\n      <div>{hours}h</div>\n      <div>{minutes}m</div>   \n      <div>{seconds}s </div>         \n   </div>\n    } else {\n      // Render a countdown\n      return <div className='cout_man_div'>           \n                 <div>{days}d </div>\n      <div>{hours}h</div>\n      <div>{minutes}m</div>   \n      <div>{seconds}s </div>\n            </div>;\n    }\n  };\n\n\nclass LaunchpadDetail extends Component {\n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.05;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n\n\n\n  }\n  \n    componentDidMount()\n    {\n      document.getElementById(\"launchpad_parent\").classList.add(\"active\");\n      // this.showLoader();\n     \n      \n    \n      this.refreshData()\n      this.hideLoader();\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = { \n        saleAddress: window.location.pathname.split('/')[2],\n        saleInfo: {},\n        userData: {},\n        allocations: [],\n         series: [44, 55, 41, 17, 15],\n          options: {\n            chart: {\n              type: 'donut',\n            },\n            responsive: [\n              {\n              breakpoint: 480,\n              options: {\n                chart: {\n                  width: 200\n                },\n                legend: {\n                  position: 'bottom'\n                }\n              },\n            },\n            {\n              breakpoint: 600,\n              options: {\n                chart: {\n                  width: 300\n                },\n                legend: {\n                  position: 'right'\n                }\n              }\n            },\n            {\n              breakpoint: 1199,\n              options: {\n                chart: {\n                  width: 300\n                },\n                legend: {\n                  position: 'bottom'\n                }\n              }\n            },\n            {\n              breakpoint: 2000,\n              options: {\n                chart: {\n                  width: 350\n                },\n                legend: {\n                  position: 'right'\n                }\n              }\n            }\n          ]\n          },\n          iswhitelisted : true,\n          whitelistModal : false,\n          removewhitelistModal:false,\n          changestatueModal:false,\n          buyToken: \"\",\n          buyTokenDecimal : 0,\n          amount: 0,\n          claim: 0,\n          max: 0,\n          isMax: false,\n          isWhitelistedDisabled : false\n          \n        }\n      \n    }\n    async BNBwithdraw(){\n      await withdrawBNB(this.state.saleAddress,getAccount());\n      await this.refreshData()\n      \n    }\n\n\n\n    async loadData(){\n     \n    \n     \n      this.showLoader();\n      const saleDetail = await getSaleInfoCard(this.state.saleAddress);\n      this.setState({ saleInfo: saleDetail });\n      if(localStorage.getItem(\"accountInfo\")){\n        const user = await GetSalePerAccount(localStorage.getItem(\"accountInfo\"),this.state.saleAddress);\n        this.setState({userData: user});\n       \n        if(saleDetail.isClaimable){\n          const allocated = await getAllocationInfo(user.actualBalance,user.userClaimbale,saleDetail.vestingInterval,saleDetail.vestingPercent,user.initialClaim);\n          this.setState({ allocations: allocated });\n          \n        }\n        \n      }\n      this.hideLoader();\n      \n    }\n    \n    async refreshData(){\n      const saleDetail = await getSaleInfoCard(this.state.saleAddress);\n     \n      this.setState({ saleInfo: saleDetail });\n      this.GetBuytokeninfo(saleDetail?.useWithToken)\n      if(localStorage.getItem(\"accountInfo\")){\n        const user = await GetSalePerAccount(localStorage.getItem(\"accountInfo\"),this.state.saleAddress);\n       \n       this.setState({userData: user});\n       if(saleDetail.isClaimable){\n        const allocated = await getAllocationInfo(user.actualBalance,saleDetail.vestingInterval,saleDetail.vestingPercent,user.initialClaim);\n       this.setState({ allocations: allocated });\n       }\n       \n      }\n    }\n\n\n  async  GetBuytokeninfo (value){\n     \n  if(value === \"0x0000000000000000000000000000000000000000\"){\n  \n     this.setState( { buyToken: \"BNB\"});\n     this.setState({buyTokenDecimal : 18})\n  }else{\n \n      const token = await UseTokenInfo(this.state.saleInfo && this.state.saleInfo?.useWithToken);\n      this.setState({ buyToken: token?.symbol });\n      this.setState({buyTokenDecimal : Number(token?.decimals)})\n      \n  }\n  }\n\n async max(){\n    this.setState({ max: this.state.saleInfo && (parseInt(this.state.saleInfo?.maxEthLimit)/10** this.state.buyTokenDecimal), isMax: true })\n    this.setState({amount : this.state.saleInfo && (parseInt(this.state.saleInfo?.maxEthLimit)/10** this.state.buyTokenDecimal)})\n    \n  }\n   \n  \n  async calculateToken(value){\n   \n    const tokenValue = await calculateBuy(this.state.saleAddress,value);\n    this.setState({ claim: (tokenValue/10**this.state.saleInfo?.decimals) })\n   \n}\n\n\nasync buy(){\n  \n  await BuyToken(this.state.saleAddress,this.state.amount,this.state.isMax,this.state.max,getAccount(),this.state.saleInfo?.decimals);\n  await this.refreshData()\n  // this.reset();\n  \n}\n\n\nasync Claim(){\n  await claimToken(this.state.saleAddress,getAccount());\n  await this.refreshData()\n  \n}\n\n\nasync stopSaleEvent(){\n  await updateStopEvent(this.state.saleAddress,getAccount());\n  await this.refreshData()\n \n}\n\n\n\nasync withdrawToken(){\n  await getUnsold(this.state.saleAddress,getAccount());\n  await this.refreshData()\n ;\n}\n\nasync BNBwithdraw(){\n  await withdrawBNB(this.state.saleAddress,getAccount());\n  await this.refreshData()\n  \n}\n\nasync Finalisesale(){\n  await Finalise(this.state.saleAddress,getAccount());\n  await this.refreshData()\n  \n}\n\nasync Handlewhitelist(value){\n  await SetWhitelisted(this.state.saleAddress,value,getAccount());\n  await this.refreshData()\n}\n\n    render() {\n      const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n      \n\n      \n      \n      const { saleInfo ,userData, whitelistModal,removewhitelistModal,changestatueModal, iswhitelisted} = this.state\n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n    <span className=\"spin_round\">\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n\n           <Header/>\n          \n           <div className=\"whole_sec pb-5\">\n           <div className='flex_side_right'>\n            <Sidebar />\n           {/* ongoing_sec */}\n           <div className='right_side_sec'>\n           {/* <div className=\"text-white topBar d-flex justify-content-between\">\n                  \n                  <small>Trending</small>\n                <small>\n                  #1&nbsp;<span>Husy</span>\n                </small>\n                <small>\n                  #2&nbsp;<span>ORL</span>\n                </small>\n                <small>\n                  #3&nbsp;<span>UWC</span>\n                </small>\n                <small>\n                  #4&nbsp;<span>777</span>\n                </small>\n                <small>\n                  #5&nbsp;<span>IDXS</span>\n                </small>\n                <small>\n                  #6&nbsp;<span>COUGNU</span>\n                </small>\n                <small>\n                  #7&nbsp;<span>CRICLE</span>\n                </small>\n                <small>\n                  #8&nbsp;<span>KASA</span>\n                </small>\n                <small>\n                  #9&nbsp;<span>FIFAPP</span>\n                </small>\n                <small>\n                  #10&nbsp;<span>SOG</span>\n                </small>\n                <small>\n                  #11&nbsp;<span>COOSHA</span>\n                </small>\n                <small>\n                  #12&nbsp;<span>Honey</span>\n                </small>\n                \n                \n              </div> */}\n              {/* <Trendingslider/> */}\n              <div className=\"right_side_spacing\">\n        <Container className='px-1'>\n        <div className='row mt-5'>\n           <div className='col-12 col-md-6 col-lg-6 mb-4'>\n                 <div className='card_bg card h-100'>\n            <div className='card-body'>\n              <div className='row align-items-center pb-4 row_left_res'>\n                <div className='col-12 col-sm-7 col-md-12 col-xl-7 mb-3 mb-md-0'>\n                <div className='d-flex align-items-center'>\n                    <div className='d-flex align-items-center'>\n                    <div className='profimg'>\n                    \n                    <img src={saleInfo && saleInfo.logo} alt={saleInfo && saleInfo.symbol} className='img_ind_circle'/>\n                       {/* <img src=\"https://bscscan.com/images/svg/brands/bnb.svg?v=1.3\" alt=\"image\" className='img_ind_circle'/> */}\n                   </div>\n                  \n                   </div>\n                   <div>\n                { saleInfo?.owner == localStorage.getItem(\"accountInfo\") ?    \n                   <Link to={`/launchpadedit/${this.state.saleAddress}`}  className='btn_social_new btn_social_new_link ml-2'>\n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                        </Link> : <></>}\n\n                        <button className='btn_social_new ml-1'>\n                        <i class=\"fa fa-globe\" aria-hidden=\"true\"></i>\n                        </button>\n                   </div>\n              \n           \n                </div>\n      \n                  \n                </div>\n                <div className='col-12 col-sm-5 col-md-12 col-xl-5 mb-3 mb-md-0'>\n               \n                    \n                   \n                    <p className='text-right'>\n                    {/* <button className='btn_social_new mr-2'>\n                        <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\n                        </button> */}\n                        {saleInfo && isSaleLive(saleInfo.startTime,saleInfo.endTime,saleInfo.isPresaleOpen)  ?\n                    <span className=\"badge badge-green-rect mt-0\">\n                        <span className='blk_txt'>Live</span>\n                        </span> : ( isUpcoming(saleInfo.startTime) ? \n                      <span className=\"badge badge-green-rect mt-0\">\n                      <span className='blk_txt'>Upcoming</span>\n                      </span>:\n                       <span className=\"badge badge-green-rect mt-0\">\n                       <span className='blk_txt'>Closed</span>\n                       </span>)\n    }\n                  \n                    </p>\n \n                    </div>\n             \n              </div>\n         \n\n\n            <div>\n            {/* <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'> */}\n            {/* <span className='desc_grey_txt'>Private Sale Address :</span> */}\n            {/* <span><a href={`https://testnet.bscscan.com/address/${saleInfo && saleInfo?.tokenAddress}`} target='_blank'className='desc_grey_txt font_12'>{`${( saleInfo && saleInfo?.tokenAddress).substring(0, 5)}...${(saleInfo && saleInfo?.tokenAddress).substring(38,42)}`}</a></span> */}\n            {/* <span><a href={`https://testnet.bscscan.com/address/${saleInfo && saleInfo.tokenAddress}`} target='_blank'className='desc_grey_txt font_12'>{saleInfo && saleInfo?.tokenAddress.substring(0,5)}</a></span> */}\n\n            {/* </p>     */}\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>1 {this.state.buyToken} :</span>\n            <span className='desc_grey_txt font_12'>{saleInfo && saleInfo.presaleRate} {saleInfo && saleInfo.symbol}\n            </span>\n            </p> \n          \n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Softcap :</span>\n            <span className='desc_grey_txt font_12'>{saleInfo && (parseInt(saleInfo.softCap)/10**this.state.buyTokenDecimal).toFixed(2)} {this.state.buyToken}\n            </span>\n            </p> \n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Hardcap :</span>\n            <span className='desc_grey_txt font_12'>{saleInfo && (parseInt(saleInfo.hardCap)/10**this.state.buyTokenDecimal).toFixed(2)} {this.state.buyToken}\n            </span>\n            </p>         \n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Start Time :</span>\n            <span className='desc_grey_txt font_12'>{saleInfo && new Date(saleInfo.startTime*1000).toLocaleDateString(\"en-US\", options)}\n            </span>\n            </p>   \n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>End Time :</span>\n            <span className='desc_grey_txt font_12'>{saleInfo && new Date(saleInfo.endTime*1000).toLocaleDateString(\"en-US\", options)}\n            </span>\n            </p>          \n\n\n\n            {/* <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>First Release for Project :</span>\n            <span className='desc_grey_txt font_12'>30%\n            </span>\n            </p>  \n        */}\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Vesting Claim</span>\n            <span className='desc_grey_txt font_12'> {saleInfo && saleInfo.isVested ? 'Enabled' : 'Disabled'}\n            </span>\n            </p>\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Pancake Listing</span>\n            <span className='desc_grey_txt font_12'> {saleInfo && saleInfo.isPancake ? 'Enabled' : 'Disabled'}\n            </span>\n            </p>  \n            {saleInfo && saleInfo.isVested ?\n             <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Vesting for Project :</span>\n            <span className='desc_grey_txt font_12'>{saleInfo && saleInfo.vestingPercent/100} % each {saleInfo && saleInfo.vestingInterval/ONEDAYINSECONDS} Day(s)\n            </span>\n            </p> :<></>} \n\n     \n\n       \n                        </div>\n                      \n             </div>\n             </div>\n            </div>\n\n            <div className='col-12 col-md-6 col-lg-6 mb-4'>\n            <div className='card_bg card h-100'>\n            <div className='card-body'>\n            <div className='card_footer_form'>\n                                <div className='d-flex align-items-center justify-content-center'>\n                                <p className='mb-0 pl-3'>Make sure the website is cryptotrading!</p>\n                                </div>\n\n                            </div>  \n                            {  saleInfo && isUpcoming(saleInfo.startTime) ?\n                            <>\n                            <p className='text-center sale_deta_name mt-3'>Sale Starts In</p>\n                            <div className='countdown_new text-center'>\n                            {console.log(\"Salediffernce(saleInfo.endTime)\",UpcomingDiffernce(saleInfo.startTime))}\n                            <Countdown date={Date.now() +  (UpcomingDiffernce(saleInfo.startTime))}  renderer={renderer} className=\"countdown_grey\" />\n                            </div>\n                            </> : \n\n(saleInfo && isSaleLive(saleInfo.startTime,saleInfo.endTime,saleInfo.isPresaleOpen)  ?  \n<>\n<p className='text-center sale_deta_name mt-3'>Sale Ends In</p>\n<div className='countdown_new text-center'>\n{console.log(\"Salediffernce(saleInfo.endTime)\",Salediffernce(saleInfo.endTime))}\n<Countdown date={Date.now() +  Salediffernce(saleInfo?.endTime)}  renderer={renderer} className=\"countdown_grey\" />\n</div>\n</>:\n<>\n<p className='text-center sale_deta_name mt-3'>Sale Ends In</p>\n<div className='countdown_new text-center'>\n<p className='text-center sale_deta_name mt-3'>Not Live</p>\n</div>\n</>)}\n                      \n\n                            <ProgressBar now={saleInfo && parseInt(parseInt(saleInfo?.earnedCap)/parseInt(saleInfo?.hardCap) * 100)} className='yellow_bar mt-3'/>\n            <p className='white_txt_sm d-flex justify-content-between mt-1'>\n               <span className='desc_grey_txt'>{saleInfo && parseInt(parseInt(saleInfo?.earnedCap)/parseInt(saleInfo?.hardCap) * 100)} % </span>\n               <span className='desc_grey_txt'>{saleInfo && ((saleInfo?.earnedCap)/10**this.state.buyTokenDecimal).toFixed(3)}/{(parseInt(saleInfo.hardCap)/10**this.state.buyTokenDecimal).toFixed(2)} {this.state.buyToken}</span>\n                </p>\n                <p className='input_desc_sm'>Amount (Min: {saleInfo && saleInfo?.minEthLimit / 10 ** this.state.buyTokenDecimal} & Max: {saleInfo && saleInfo?.maxEthLimit / 10 ** this.state.buyTokenDecimal}  {this.state.buyToken})</p>\n                {/* <p className='input_desc_sm'>You Will Get : {this.state.claim} {this.state.saleInfo?.name}</p> */}\n               \n\n                <div className=\"inputs input-groups date_inoput_grps\">\n                        <InputGroup className=\"datepicker_input\">\n                        <FormControl id=\"amountmax\" placeholder=\"0.0\"\n                        value={this.state.amount}\n                        onChange={(e)=> { this.setState({ amount: e.target.value });this.calculateToken(e.target.value);}}\n                        \n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                        <InputGroup.Append className='cur_pointer'>\n                                <button onClick={async()=> {await this.max();await this.calculateToken(this.state.amount)}} variant=\"outline-secondary\" className=\"trans_cal_btn\">\n                                Max\n                                </button>\n                            </InputGroup.Append>\n                    </div>\n                    { saleInfo && isSaleLive(saleInfo.startTime,saleInfo.endTime,saleInfo.isPresaleOpen) ? \n                    <button onClick={this.buy.bind(this)}disabled={ saleInfo && saleInfo.isWhitelisted ? userData && !(userData.userWhitelistedAmount > 0) : false } className=\"get-started-btn\">{saleInfo && saleInfo.isWhitelisted ? (userData && !(userData.userWhitelistedAmount > 0) ? \"Not Whitelisted\" : \"Buy\"):\"Buy\"} with {this.state.buyToken} </button>:\n                    (isUpcoming(saleInfo.startTime,saleInfo.endTime) ? <button disabled={true} className=\"get-started-btn mr-2\" > Upcoming </button> :\n                    (!isSaleLive(saleInfo.startTime,saleInfo.endTime) ?<button disabled={true} className=\"get-started-btn mr-2\" > Sale InActive </button>:<button onClick={this.buy.bind(this)} className=\"get-started-btn\" > Buy </button>))\n                    }\n\n\n                    {saleInfo && saleInfo.isVested ?\n                    <button  className=\"get-started-btn mt-3\">Vested  {this.state.saleInfo?.symbol} </button>:\n                    (saleInfo && saleInfo.isClaimable ? \n             \n                    <button  onClick={() => this.Claim()} className=\"get-started-btn mt-3\"> Claim  {this.state.saleInfo?.symbol}  </button> :\n                    <button disabled className=\"get-started-btn mt-3\"> Claim  {this.state.saleInfo?.symbol}  </button>)}\n                </div>\n                </div>\n                </div>\n        </div>\n\n                <div className='row'>\n                <div className='col-12 col-md-6 col-lg-6 mb-4'>\n                <div className='card_bg card h-100'>\n            <div className='card-body'>\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Token Address :</span>\n            <span><a href={`https://testnet.bscscan.com/address/${saleInfo && saleInfo.tokenAddress}`} target='_blank'className='desc_grey_txt font_12'>{saleInfo && saleInfo?.tokenAddress}</a></span>\n            </p> \n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Access Type:</span>\n            {saleInfo && saleInfo.isWhitelisted ?\n            <span className='desc_grey_txt font_12'>Private</span> :\n           \n           \n             <span className='desc_grey_txt font_12'>Public</span>}\n             </p>\n\n        \n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Status :</span>\n  {saleInfo && isSaleLive(saleInfo.startTime,saleInfo.endTime,saleInfo.isPresaleOpen)  ?\n            <span className='desc_grey_txt font_12'>Live</span> : \n            ( isUpcoming(saleInfo.startTime) ? \n            <span className='desc_grey_txt font_12'>Upcoming</span> :\n            <span className='desc_grey_txt font_12'>Closed</span> )}\n            </p> \n  \n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Minimum Buy :</span>\n            <span className='desc_grey_txt font_12'>{saleInfo && (parseInt(saleInfo.minEthLimit)/10**this.state.buyTokenDecimal).toFixed(3)}  {this.state.buyToken}</span>\n            </p> \n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Maximum Buy :</span>\n            <span className='desc_grey_txt font_12'>{saleInfo && (parseInt(saleInfo.maxEthLimit)/10**this.state.buyTokenDecimal).toFixed(3)}  {this.state.buyToken}</span>\n            </p> \n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>You Purchased :</span>\n            {console.log(\"userData.userClaimbale\",userData?.userClaimbale)}\n            <span className='desc_grey_txt font_12'> {userData && (parseInt(userData?.userClaimbale)/10**parseInt(saleInfo.decimals)).toFixed(3)} {saleInfo && saleInfo.symbol}</span>\n            </p> \n\n              <p className='text-white mt-4'>Token Metrics</p>\n                <hr className='hr_green' />\n                <Chart options={this.state.options} series={this.state.series} className=\"chart_donut_res\" type=\"donut\" />\n                </div>\n                </div>\n</div>\n<div className='col-12 col-md-6 col-lg-6 mb-4'>\n                <div className='card_bg card h-100'>\n            <div className='card-body'>\n                <p className='text-white'>Owner Zone</p>\n                <hr className='hr_green' />\n                <div className='col-12 col-md-12 mb-3 px-0'>\n                        <p className='input_desc_sm'>Sale Type</p>\n                      \n                        <div className=\"custom-control custom-radio mb-2\">\n                    <input type=\"checkbox\"  checked={saleInfo && saleInfo?.isWhitelisted ? false : true} id=\"customRadio1\" name=\"customRadio\" className=\"custom-control-input\" />\n                    <label className=\"custom-control-label\" for=\"customRadio1\">Public</label>\n                    </div>   \n\n                    <div className=\"custom-control custom-radio mb-2\">\n                    <input type=\"checkbox\"  checked={saleInfo && saleInfo?.isWhitelisted ? true : false}id=\"customRadio2\" name=\"customRadio\" className=\"custom-control-input\" />\n                    <label className=\"custom-control-label\" for=\"customRadio2\">Whitelist</label>\n                    </div>  \n\n                    {/* <div className=\"custom-control custom-radio\">\n                    <input type=\"radio\" id=\"customRadio3\" name=\"customRadio\" className=\"custom-control-input\" />\n                    <label className=\"custom-control-label\" for=\"customRadio3\">Public Anti-Bot</label>\n                    </div>                 */}\n                        </div>\n\n                       \n                         <div className='whitelist_div'>\n                        <button className=\"get-started-btn w-100 mb-2\" onClick={() => this.setState({ whitelistModal: true })}>\n                          Add users to whitelist\n                        </button>\n                        <button className=\"get-started-btn w-100 mb-2\" onClick={() => this.setState({ removewhitelistModal: true })}>\n                          Remove users from whitelist\n                        </button>\n                        {/* <button className=\"get-started-btn w-100 mb-2\" onClick={() => this.setState({ changestatueModal: true })}>\n                          Setting time to public\n                        </button> */}\n                       \n                        {saleInfo && saleInfo?.isWhitelisted ? \n                        <button onClick={() => this.Handlewhitelist(false)} className=\"get-started-btn w-100 mb-2\">\n                          Disable whitelist\n                        </button> :\n                        <button onClick={() => this.Handlewhitelist(true)} className=\"get-started-btn w-100 mb-2\">\n                        Enable whitelist\n                      </button>}\n                         </div>\n                       \n\n                        <div className='col-12 col-md-12 mb-3 px-0'>\n                        <p className='input_desc_sm'>Pool Actions</p>\n                        <button onClick={() =>this.Finalisesale()}className=\"get-started-btn w-100 mb-2\" >\n                           Finalize\n                        </button>\n                        <button onClick={()=> this.withdrawToken()} className=\"get-started-btn w-100 mb-2\" >\n                         Get Unsold {this.state.saleInfo?.symbol}\n                        </button>\n                        <button onClick={()=> this.stopSaleEvent()}className=\"get-started-btn w-100 mb-2\">\n                          Stop Sale\n                        </button>\n                        <button onClick={() => this.BNBwithdraw()} className=\"get-started-btn w-100 mb-2\">\n                          Withdraw  {this.state.buyToken}\n                        </button>\n                       \n                       \n                        </div>\n                </div>\n                </div>\n                </div>\n            </div>\n        \n\n                \n               \n\n        </Container>\n\n            <Container className='pb-5 px-0 mt-4'>\n                 \n                 <center>\n                   <small className=\"mt-3 bottom_text\">\n                     Disclaimer: The information provided shall not in any way\n                     constitute a recomendation as to whether you should invest\n                     in any product discussed. We accept no liability for any\n                     loss occasioned to any person acting or refraining from\n                     action as a result of any material provided or published.\n                   </small>\n                 </center>\n               </Container>\n               </div>\n            </div>\n           </div>\n           </div>\n   {whitelistModal && <WhitelistModal onDismiss={() => this.setState({ whitelistModal: false })} /> }\n           {removewhitelistModal && <RemoveWhitelistmodal onDismiss={() => this.setState({ removewhitelistModal: false })} /> }\n           {changestatueModal && <ChangeStatusmodal onDismiss={() => this.setState({ changestatueModal: false })} /> }\n        </div>\n        </div>\n        )\n    }\n}\n\nexport default LaunchpadDetail","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Projects/Comingsoon.js",["571","572","573","574","575","576","577","578","579","580","581"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\n\nimport Header from '../Header';\nimport Sidebar from '../Sidebar';\n\n\nimport { getAccount } from '../../hooks/useAccount'\nimport {Card} from 'react-bootstrap'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\n\n\nimport Web3 from \"web3\";\n\nimport {  Container, FormControl, InputGroup } from 'react-bootstrap';\nimport '../../css/styles.css';\n\nimport favicon from \"../../images/favicon.png\"\nimport { Link } from 'react-router-dom';\n\nclass Comingsoon extends Component {\n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.05;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n\n\n\n  }\n  \n    componentDidMount()\n    {\n      // this.showLoader();\n      this.hideLoader();\n    //    this.setState({ accountInfo: getAccount() });\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {          \n           \n        };\n    }\n    \n\n \n    render() {        \n\n\n\n      \n      \n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n\n           <Header/>\n          \n           <div className=\"whole_sec pb-5\">\n           <div className='flex_side_right'>\n            <Sidebar />\n           <div className='right_side_sec'>\n           \n              <div className=\"right_side_spacing\">\n              \n                {/* Coming soon session */}\n\n                <Container className=\"container\">\n                  <div className=\"coming_soon\">\n                    <h1 className=\"text-white\">Coming Soon</h1>\n                  </div>\n                  <center>\n                    <small className=\"mt-3 bottom_text\">\n                      Disclaimer: The information provided shall not in any way\n                      constitute a recomendation as to whether you should invest\n                      in any product discussed. We accept no liability for any\n                      loss occasioned to any person acting or refraining from\n                      action as a result of any material provided or published.\n                    </small>\n                  </center>\n                </Container>\n\n                {/* end of Coming soon session */}\n\n           \n            </div>\n           </div>\n           </div>\n           </div>\n\n        </div>\n        </div>\n        )\n    }\n}\n\nexport default Comingsoon","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Projects/Home.js",["582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597"],"import React, { Component } from \"react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\nimport PlaceholdingLoader from \"../PlaceholdingLoader\";\nimport Trendingslider from '../trendingslider';\n\n\nimport \"../../css/styles.css\";\n\nimport home_image from \"../../images/home_image.svg\";\nimport home_logo from \"../../images/home_logo.svg\";\n\nimport branding_icon from \"../../images/branding_icon.svg\";\nimport community_icon from \"../../images/community_icon.svg\";\nimport customization_icon from \"../../images/customization_icon.svg\";\nimport deflationary_icon from \"../../images/deflationary_icon.svg\";\nimport launchpad_icon from \"../../images/launchpad_icon.svg\";\nimport locking_icon from \"../../images/locking_icon.svg\";\nimport management_icon from \"../../images/management_icon.svg\";\nimport standard_icon from \"../../images/standard_icon.svg\";\n\nimport coin_img from \"../../images/bsc.png\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  ProgressBar,\n  InputGroup,\n  Form,\n  Tab,\n  Nav\n} from \"react-bootstrap\";\nimport { gethomecalculationhook, gettrendingdisplayhook } from \"../../hooks/usebackend\";\nimport { gethomelaunchpaddetail, getTotalSalesInfo, isSaleLive, isUpcoming } from \"../../hooks/useProjects\";\nimport { Userdollar } from \"../../hooks/useAccount\";\nimport { getSaleInfoCard, Totalvaluelocked, UseTokenInfo } from \"../../hooks/useContract\";\n\n\nclass Landing extends Component {\n \n  \n\n\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      proxy: [],\n      totalSales: [],\n      onGoingSales: [],\n      upComingSales: [],\n      isSearch: false,\n      searchSale: [],\n      search: \"\",\n      interval: 3,\n      loadInterval: 3,\n      searchInterval: 3,\n      searchProxy: [],\n      isLoading: false,\n      currentChain: 0,\n      setUpdateCms: false,\n      trending : [],\n      projects : 0,\n      bnbindollar : 0,\n      users : 0,\n      loadingText:true,\n      totallockedvalue : 0\n    };\n  }\n\n  componentDidMount(){\n    this.gettrending();\n  }\n\n  async gettrending(){\n    let data = await gettrendingdisplayhook();\n    console.log(\"dataa trending\" , data?.data?.data);\n    if(data?.data?.data?.length > 0){\n      let trenddata = await gethomelaunchpaddetail(data?.data?.data)\n      console.log(\"trenddata\" , trenddata);\n      this.setState({trending : trenddata}) \n      const Proxydata = await getTotalSalesInfo();\n     \n      if(Proxydata?.length > 0){\n        let totallock = 0;\n        this.setState({projects : Proxydata?.length});\n        Proxydata?.map(async(data)=>{console.log(\"mapdata\" , data);\n          let saledata = await getSaleInfoCard(data?._sale);\n          \n          let value = saledata.presaleRate * saledata.hardCap/10**18;\n          \n          console.log(\"calculated value\" , value , totallock);\n          totallock = totallock + value;\n          this.setState({totallockedvalue : Math.round(totallock*100)/100})\n        })\n        \n      }\n      \n      \n\n      let calculation = await gethomecalculationhook();\n      console.log(\"calculation\" , calculation);\n      let dollar = await Userdollar(calculation?.data?.totalbnb);\n      console.log(\"dollar in bnb\" , Math.round(dollar*100)/100);\n      this.setState({bnbindollar : Math.round(dollar*100)/100})\n      this.setState({users : calculation?.data?.user});\n      // let lockedvalue = await Totalvaluelocked();\n      this.setState({loadingText : false})\n    }\n  }\n\n\n\n\n\n\n\n  render() {\n \n\n    return (\n      <div id=\"loader_main\">\n      \n        <div className=\"logo_overlay\" id=\"logo_overlay\" style={{opacity:1}}>\n          <Header />\n\n          <div className=\"whole_sec pb-5\">\n            <div className=\"flex_side_right\">\n              <Sidebar />\n              {/* ongoing_sec */}\n              <div className=\"right_side_sec\">\n                {/* <div className=\"text-white topBar d-flex justify-content-between\">\n                  \n                    <small>Trending</small>\n                  <small>\n                    #1&nbsp;<span>Husy</span>\n                  </small>\n                  <small>\n                    #2&nbsp;<span>ORL</span>\n                  </small>\n                  <small>\n                    #3&nbsp;<span>UWC</span>\n                  </small>\n                  <small>\n                    #4&nbsp;<span>777</span>\n                  </small>\n                  <small>\n                    #5&nbsp;<span>IDXS</span>\n                  </small>\n                  <small>\n                    #6&nbsp;<span>COUGNU</span>\n                  </small>\n                  <small>\n                    #7&nbsp;<span>CRICLE</span>\n                  </small>\n                  <small>\n                    #8&nbsp;<span>KASA</span>\n                  </small>\n                  <small>\n                    #9&nbsp;<span>FIFAPP</span>\n                  </small>\n                  <small>\n                    #10&nbsp;<span>SOG</span>\n                  </small>\n                  <small>\n                    #11&nbsp;<span>COOSHA</span>\n                  </small>\n                  <small>\n                    #12&nbsp;<span>Honey</span>\n                  </small>\n                  \n                  \n                </div> */}\n                <Trendingslider/>\n<div className=\"right_side_spacing pb-5\">\n                <Container className=\"text-white container mt-5 pb-4\">\n                  <center>\n                    <h3 className=\"h3_res\">The Launchpad Protocol for Every one !</h3>\n\n                    <span className=\"title_span\">\n                      Crypto Lanuchpad helps everyone to create their own tokens\n                      and token sales in new seconds.\n                    </span>\n                    <br />\n                    <span className=\"title_span\">\n                      Tokens created on crypto Launchpad will be verified and\n                      published on explore website.\n                    </span>\n                  </center>\n                  <div className=\"mt-4 d-flex justify-content-center btn_sec_mob_res\">\n                    <button className=\"get-started-btn mr-3\" onClick={()=>this.props.history.push('/create')}>Create Now</button>\n                    <button className=\"get-started-btn\">Learn more</button>\n                  </div>\n                </Container>\n\n                <Container className=\"mt-0 container pt-4 pb-4 conta_toppols\">\n                <div class=\"text-white container mt-0 pb-4 container\">\n                  <center>\n                    <h3 class=\"h3_res\">Top Pools</h3>\n                    <span className=\"title_span\">\n                      Crypto Lanuchpad helps everyone to create their own tokens\n                      and token sales in new seconds.\n                    </span>\n                    <br />\n                    <span className=\"title_span\">\n                      Tokens created on crypto Launchpad will be verified and\n                      published on explore website.\n                    </span>\n                    </center>\n                    </div>\n                  <div className={this.state.trending ? \"row justify-content-center\" : \"d-none\"}>\n                  <div className={this.state.trending[0]?'col-12 col-xl-4 col-lg-6 col-md-6 col-lg-6-custom mb-4 projects' : \"d-none\"}\n                    onClick = {()=>{ console.log(\"whitelist\" , this.state.trending[1]?.isWhitelisted , this.state.trending);\n                      if(this.state.trending[0]?.isWhitelisted)\n                        window.location.href = window.origin + `/privatesaledetail/${this?.state?.trending[0]?.saleAddress}`\n                      else\n                        window.location.href = window.origin + `/launchpaddetail/${this?.state?.trending[0]?.saleAddress}`\n                      }\n                    }\n                  >\n                  \n                  <div className='card card_style_1 ribbox'>\n                     \n                      <div className='card-body'>\n                      <span class=\"badge badge-kyc-rect mt-0 mb-2 badge_trend\"><span class=\"blk_txt\">#OnTop1</span></span>\n                          <div className='pt-5 px-3 pb-3'>\n                          <div className='grid_img_div'>\n                              <div className='profimg'>\n                                 \n                                 <img src={this?.state?.trending[0]?.logo} alt=\"prof\" />\n                             </div>\n                             <div>\n                              <div className=\"btn-group btn_grp_yel mb-2 d-block d-xl-flex d-md-block d-sm-flex flex_cont_end_flex\" role=\"group\" aria-label=\"Basic example\">\n                                 \n                                  <div className='d-sm-flex d-block mt-3 mt-xl-0 mt-md-3 mt-sm-0 text-right-xss'>\n                                  <p className=' mb-0'>\n                               \n                                          \n                                          <span className=\"badge badge_live\">                      \n                                         \n                                          <span className='stats_txt'>{\n                                              this?.state?.trending && isSaleLive(this?.state?.trending[0]?.startTime,this?.state?.trending[1]?.endTime,this?.state?.trending[0]?.isPresaleOpen) ?\n                                             \" Sales Live\"\n                                            : this?.state?.trending[0] && isUpcoming(this?.state?.trending[0].startTime)? \"Upcoming\" : \"Sale Ended\"\n                                            }</span>\n                                          </span>\n                                 \n                                \n                                  </p>\n                          </div>\n                              </div>\n                              \n                             \n                              <p className='text-right'>\n                              <span className=\"badge badge-green-rect mt-0 mr-2\">\n                                  <span className='blk_txt'>Audit</span>\n                                  </span>\n                                  <span className=\"badge badge-kyc-rect mt-0\">\n                                  <span className='blk_txt'>KYC</span>\n                                  </span>\n                              <span className=\"badge badge-yellow-fill mt-0\">\n                                 \n                                  </span> \n                               </p>\n                          </div>\n           \n                     \n                          </div>\n                \n                         \n                       \n                          <p className='text-white cardhead font_16 mb-1 mt-3'>{this?.state?.trending[0]?.name}</p>\n                          <p className=\"desc_grey_txt pb-0 mb-0\">1 BNB = {this?.state?.trending[0]?.presaleRate+\" \" + this?.state?.trending[0]?.symbol}</p>\n                         \n          \n                              \n                   \n                    \n                     \n             \n             \n                  \n                      \n                          </div>\n                      </div>\n                  </div>\n                  \n          \n              </div>\n\n              <div className={this.state.trending[1]?'col-12 col-xl-4 col-lg-6 col-md-6 col-lg-6-custom mb-4 projects' : \"d-none\"}\n                 onClick = {()=>{ console.log(\"whitelist\" , this.state.trending[1]?.isWhitelisted);\n                  if(this.state.trending[1]?.isWhitelisted)\n                    window.location.href = window.origin + `/privatesaledetail/${this?.state?.trending[1]?.saleAddress}`\n                  else\n                    window.location.href = window.origin + `/launchpaddetail/${this?.state?.trending[1]?.saleAddress}`}\n                }\n              >\n                  \n                  <div className='card card_style_1 ribbox'>\n                     \n                      <div className='card-body'>\n                      <span class=\"badge badge-kyc-rect mt-0 mb-2 badge_trend\"><span class=\"blk_txt\">#OnTop2</span></span>\n                          <div className='pt-5 px-3 pb-3'>\n                          <div className='grid_img_div'>\n                              <div className='profimg'>\n                                 \n                                 <img src={this?.state?.trending[1]?.logo} alt=\"prof\" />\n                             </div>\n                             <div>\n                              <div className=\"btn-group btn_grp_yel mb-2 d-block d-xl-flex d-md-block d-sm-flex flex_cont_end_flex\" role=\"group\" aria-label=\"Basic example\">\n                                 \n                                  <div className='d-sm-flex d-block mt-3 mt-xl-0 mt-md-3 mt-sm-0 text-right-xss'>\n                                  <p className=' mb-0'>\n                               \n                                          \n                                          <span className=\"badge badge_live\">                      \n                                         \n                                              <span className='stats_txt'>{\n                                              this?.state?.trending && isSaleLive(this?.state?.trending[1]?.startTime,this?.state?.trending[1]?.endTime,this?.state?.trending[1]?.isPresaleOpen) ?\n                                             \" Sales Live\"\n                                            : this?.state?.trending[1] && isUpcoming(this?.state?.trending[1].startTime)? \"Upcoming\" : \"Sale Ended\"\n                                            }</span>\n                                          </span>\n                                 \n                                \n                                  </p>\n                          </div>\n                              </div>\n                              \n                             \n                              <p className='text-right'>\n                              <span className=\"badge badge-green-rect mt-0 mr-2\">\n                                  <span className='blk_txt'>Audit</span>\n                                  </span>\n                                  <span className=\"badge badge-kyc-rect mt-0\">\n                                  <span className='blk_txt'>KYC</span>\n                                  </span>\n                              <span className=\"badge badge-yellow-fill mt-0\">\n                                 \n                                  </span> \n                               </p>\n                          </div>\n           \n                     \n                          </div>\n                \n                         \n                       \n                          <p className='text-white cardhead font_16 mb-1 mt-3'>{this?.state?.trending[1]?.name}</p>\n                          <p className=\"desc_grey_txt pb-0 mb-0\">1 BNB = {this?.state?.trending[1]?.presaleRate + \" \" +this?.state?.trending[1]?.symbol}</p>\n                         \n          \n                              \n                   \n                    \n                     \n             \n             \n                  \n                      \n                          </div>\n                      </div>\n                  </div>\n                  \n          \n              </div>\n\n              <div className={this.state.trending[2]?'col-12 col-xl-4 col-lg-6 col-md-6 col-lg-6-custom mb-4 projects' : \"d-none\"}\n                 onClick = {()=>{ console.log(\"whitelist\" , this.state.trending[2]?.isWhitelisted);\n                  if(this.state.trending[2]?.isWhitelisted)\n                    window.location.href = window.origin + `/privatesaledetail/${this?.state?.trending[2]?.saleAddress}`\n                  else\n                    window.location.href = window.origin + `/launchpaddetail/${this?.state?.trending[2]?.saleAddress}`}\n                }\n              >\n                  \n                  <div className='card card_style_1 ribbox'>\n                     \n                      <div className='card-body'>\n                      <span class=\"badge badge-kyc-rect mt-0 mb-2 badge_trend\"><span class=\"blk_txt\">#OnTop3</span></span>\n                          <div className='pt-5 px-3 pb-3'>\n                          <div className='grid_img_div'>\n                              <div className='profimg'>\n                                 \n                                 <img src={this?.state?.trending[2]?.logo} alt=\"prof\" />\n                             </div>\n                             <div>\n                              <div className=\"btn-group btn_grp_yel mb-2 d-block d-xl-flex d-md-block d-sm-flex flex_cont_end_flex\" role=\"group\" aria-label=\"Basic example\">\n                                 \n                                  <div className='d-sm-flex d-block mt-3 mt-xl-0 mt-md-3 mt-sm-0 text-right-xss'>\n                                  <p className=' mb-0'>\n                               \n                                          \n                                          <span className=\"badge badge_live\">                      \n                                         \n                                          <span className='stats_txt'>{\n                                              this?.state?.trending && isSaleLive(this?.state?.trending[3]?.startTime,this?.state?.trending[3]?.endTime,this?.state?.trending[3]?.isPresaleOpen) ?\n                                             \" Sales Live\"\n                                            : this?.state?.trending[3] && isUpcoming(this?.state?.trending[3].startTime)? \"Upcoming\" : \"Sale Ended\"\n                                            }</span>\n                                          </span>\n                                 \n                                \n                                  </p>\n                          </div>\n                              </div>\n                              \n                             \n                              <p className='text-right'>\n                              <span className=\"badge badge-green-rect mt-0 mr-2\">\n                                  <span className='blk_txt'>Audit</span>\n                                  </span>\n                                  <span className=\"badge badge-kyc-rect mt-0\">\n                                  <span className='blk_txt'>KYC</span>\n                                  </span>\n                              <span className=\"badge badge-yellow-fill mt-0\">\n                                 \n                                  </span> \n                               </p>\n                          </div>\n           \n                     \n                          </div>\n                \n                         \n                       \n                          <p className='text-white cardhead font_16 mb-1 mt-3'>{this?.state?.trending[2]?.name}</p>\n                          <p className=\"desc_grey_txt pb-0 mb-0\">1 BNB = {this?.state?.trending[2]?.presaleRate + this?.state?.trending[2]?.symbol}</p>\n                         \n          \n                              \n                   \n                    \n                     \n             \n             \n                  \n                      \n                          </div>\n                      </div>\n                  </div>\n                  \n          \n              </div>\n                    </div>\n                </Container>\n\n\n                \n\n                <Container className=\"mt-5 container pt-4\">\n                  <Row className=\"row_frist_home\">\n                    <Col\n                      className=\"mb-5\"\n                      xxl={3}\n                      xl={3}\n                      lg={6}\n                      md={6}\n                      sm={6}\n                      xs={12}\n                    >\n                      <div className=\"liquid_raised w-100 text-center\">\n                        <div className=\"icon_align\">\n                          <img src={home_image} />\n                        </div>\n                        {this.state.loadingText?\n                         <h4 className=\"text-white mt-3\">\n                          <PlaceholdingLoader classnames=\"stripe small-stripe mb-2\" parentclassname=\"loading\" />\n                        \n                          </h4> :\n                        <h4 className=\"text-white mt-3\">\n                        \n                          $ {this?.state?.bnbindollar}\n                          </h4>\n                        }\n                        \n                        \n                        <span className=\"font15\">Total Liquid Raised</span>\n                      </div>\n                    </Col>\n                    <Col\n                      className=\"mb-5\"\n                      xxl={3}\n                      xl={3}\n                      lg={6}\n                      md={6}\n                      sm={6}\n                      xs={12}\n                    >\n                      <div className=\"liquid_raised text-center\">\n                        <div className=\"icon_align\">\n                          <img src={home_image} />\n                        </div>\n                        {this.state.loadingText?\n                         <h4 className=\"text-white mt-3\">\n                          <PlaceholdingLoader classnames=\"stripe small-stripe mb-2\" parentclassname=\"loading\" />\n                        \n                          </h4> :\n                        <h4 className=\"text-white mt-3\">{this.state.projects}</h4>\n  }\n                        <span className=\"font15\">Total Projects</span>\n                      </div>\n                    </Col>\n                    <Col\n                      className=\"mb-5\"\n                      xxl={3}\n                      xl={3}\n                      lg={6}\n                      md={6}\n                      sm={6}\n                      xs={12}\n                    >\n                      <div className=\"liquid_raised text-center\">\n                        <div className=\"icon_align\">\n                          <img src={home_image} />\n                        </div>\n                        {this.state.loadingText?\n                         <h4 className=\"text-white mt-3\">\n                          <PlaceholdingLoader classnames=\"stripe small-stripe mb-2\" parentclassname=\"loading\" />\n                        \n                          </h4> :\n                        <h4 className=\"text-white mt-3\">{this.state.users}</h4>\n  }\n                        <span className=\"font15\">Total Participants</span>\n                      </div>\n                    </Col>\n                    <Col\n                      className=\"mb-5\"\n                      xxl={3}\n                      xl={3}\n                      lg={6}\n                      md={6}\n                      sm={6}\n                      xs={12}\n                    >\n                      <div className=\"liquid_raised text-center\">\n                        <div className=\"icon_align\">\n                          <img src={home_image} />\n                        </div>\n                        {this.state.loadingText?\n                         <h4 className=\"text-white mt-3\">\n                          <PlaceholdingLoader classnames=\"stripe small-stripe mb-2\" parentclassname=\"loading\" />\n                        \n                          </h4> :\n                        <h4 className=\"text-white mt-3\">$ {this?.state?.totallockedvalue}</h4>\n  }\n                        <span className=\"font15\">Total Values Locked</span>\n                      </div>\n                    </Col>\n                  </Row>\n                </Container>\n\n\n\n            \n                <Container className=\"mt-3 text-white container\">\n                  <center>\n                    <h3 className=\"h3_res\">A Suite of Tools for Token Sales.</h3>\n                  </center>\n                  <Row className=\"d-flex justify-content-center\">\n                    <Col\n                      className=\"text-center\"\n                      xxl={8}\n                      xl={8}\n                      lg={8}\n                      md={12}\n                      sm={6}\n                      xs={12}\n                    >\n                      <small className=\"title_span\">\n                        A suite of tools were built to help you create your own\n                        tokens and launchpads in a fast, simple and cheap way\n                        with no prior code knowldege required and 100%\n                        decentralized!\n                      </small>\n                    </Col>\n                  </Row>\n\n                  <Row className=\"mt-4\">\n                    <Col\n                      className=\"mb-4\"\n                      xxl={3}\n                      xl={3}\n                      lg={4}\n                      md={6}\n                      sm={6}\n                      xs={12}\n                    >\n                      <Card className=\"card_bg h-100 py-3\">\n                        <div className=\"card_img_pare_div\">\n                        <Card.Img\n                          variant=\"top\"\n                          className=\"mx-auto\"                          \n                          src={standard_icon}\n                        />\n                        </div>\n                       \n                        <Card.Body className=\"text-center pb-5\">\n                          <Card.Title>Standard</Card.Title>\n                          <Card.Text className=\"sub_text\">\n                            Mint standard tokens on BSC.\n                          </Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                    <Col\n                      className=\"mb-4\"\n                      xxl={3}\n                      xl={3}\n                      lg={4}\n                      md={6}\n                      sm={6}\n                      xs={12}\n                    >\n                      <Card className=\"card_bg h-100 py-3\">\n                      <div className=\"card_img_pare_div\">\n                        <Card.Img\n                          variant=\"top\"\n                          className=\"mx-auto\"                          \n                          src={deflationary_icon}\n                        />\n                        </div>\n                        <Card.Body className=\"text-center pb-5\">\n                          <Card.Title>Deflationary</Card.Title>\n                          <Card.Text className=\"sub_text\">\n                            Generate deflationary tokens with tax and/or charity\n                            functions.\n                          </Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                    <Col\n                      className=\"mb-4\"\n                      xxl={3}\n                      xl={3}\n                      lg={4}\n                      md={6}\n                      sm={6}\n                      xs={12}\n                    >\n                      <Card className=\"card_bg h-100 py-3\">\n                      <div className=\"card_img_pare_div\">\n                        <Card.Img\n                          variant=\"top\"\n                          className=\"mx-auto\"                          \n                          src={customization_icon}\n                        />\n                        </div>\n                        <Card.Body className=\"text-center pb-5\">\n                          <Card.Title>Customization</Card.Title>\n                          <Card.Text className=\"sub_text\">\n                            Create a token sale for your own custom token\n                            easily.\n                          </Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                    <Col\n                      className=\"mb-4\"\n                      xxl={3}\n                      xl={3}\n                      lg={4}\n                      md={6}\n                      sm={6}\n                      xs={12}\n                    >\n                      <Card className=\"card_bg h-100 py-3\">\n                      <div className=\"card_img_pare_div\">\n                        <Card.Img\n                          variant=\"top\"\n                          className=\"mx-auto\"                          \n                          src={launchpad_icon}\n                        />\n                        </div>\n                        <Card.Body className=\"text-center pb-5\">\n                          <Card.Title>Launchpad</Card.Title>\n                          <Card.Text className=\"sub_text\">\n                            Use the token you mint to create a launchpad with\n                            just a few clicks\n                          </Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n\n                    <Col\n                      className=\"mb-4\"\n                      xxl={3}\n                      xl={3}\n                      lg={4}\n                      md={6}\n                      sm={6}\n                      xs={12}\n                    >\n                      <Card className=\"card_bg h-100 py-3\">\n                      <div className=\"card_img_pare_div\">\n                        <Card.Img\n                          variant=\"top\"\n                          className=\"mx-auto\"                          \n                          src={branding_icon}\n                        />\n                        </div>\n                        <Card.Body className=\"text-center pb-5\">\n                          <Card.Title>Branding</Card.Title>\n                          <Card.Text className=\"sub_text\">\n                            Adding logo, social links, description, listing on\n                            FuzzySale\n                          </Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                    <Col\n                      className=\"mb-4\"\n                      xxl={3}\n                      xl={3}\n                      lg={4}\n                      md={6}\n                      sm={6}\n                      xs={12}\n                    >\n                      <Card className=\"card_bg h-100 py-3\">\n                      <div className=\"card_img_pare_div\">\n                        <Card.Img\n                          variant=\"top\"\n                          className=\"mx-auto\"                          \n                          src={management_icon}\n                        />\n                        </div>\n                        <Card.Body className=\"text-center pb-5\">\n                          <Card.Title>Management</Card.Title>\n                          <Card.Text className=\"sub_text\">\n                            The portal to help you easily update content for\n                            your launchpad.\n                          </Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                    <Col\n                      className=\"mb-4\"\n                      xxl={3}\n                      xl={3}\n                      lg={4}\n                      md={6}\n                      sm={6}\n                      xs={12}\n                    >\n                      <Card className=\"card_bg h-100 py-3\">\n                      <div className=\"card_img_pare_div\">\n                        <Card.Img\n                          variant=\"top\"\n                          className=\"mx-auto\"                          \n                          src={community_icon}\n                        />\n                        </div>\n                        <Card.Body className=\"text-center pb-5\">\n                          <Card.Title>Community</Card.Title>\n                          <Card.Text className=\"sub_text\">\n                            Promote your launchpad to thousands of buyers on\n                            FuzzySale.\n                          </Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                    <Col\n                      className=\"mb-4\"\n                      xxl={3}\n                      xl={3}\n                      lg={4}\n                      md={6}\n                      sm={6}\n                      xs={12}\n                    >\n                      <Card className=\"card_bg h-100 py-3\">\n                      <div className=\"card_img_pare_div\">\n                        <Card.Img\n                          variant=\"top\"\n                          className=\"mx-auto\"                          \n                          src={locking_icon}\n                        />\n                        </div>\n                        <Card.Body className=\"text-center pb-5\">\n                          <Card.Title>Locking</Card.Title>\n                          <Card.Text className=\"sub_text\">\n                            Lock your liquidity to CryptoSwap, PancakeSwap after\n                            presale.\n                          </Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                  </Row>\n                </Container>\n\n                <Container className=\"mt-3 text-white container\">\n                  <center>\n                    <h3  className=\"h3_res\">A Growing Protocol Ecosystem.</h3>\n                  </center>\n                  <Row className=\"d-flex justify-content-center\">\n                    <Col\n                      className=\"text-center\"\n                      xxl={8}\n                      xl={8}\n                      lg={8}\n                      md={12}\n                      sm={6}\n                      xs={12}\n                    >\n                      <small className=\"title_span\">\n                        We build a suite of tools for the world of decentralized\n                        finance. CryptoMoon, CryptoSale, CryptoElon of CrytpoLock,\n                        CryptoSwap, we Crypto everything!\n                      </small>\n                    </Col>\n                  </Row>\n\n                  <Row className=\"mt-4 d-flex justify-content-center\">\n                    <Col\n                      className=\"mb-4\"\n                      xxl={3}\n                      xl={3}\n                      lg={4}\n                      md={6}\n                      sm={6}\n                      xs={12}\n                    >\n                      <Card className=\"card_bg h-100 py-3\">\n                      <div className=\"card_img_pare_div\">\n                        <Card.Img\n                          variant=\"top\"\n                          className=\"mx-auto\"                          \n                          src={home_logo}\n                        />\n                        </div>\n                        <Card.Body className=\"text-center pb-5\">\n                          <Card.Title>Crypto Moon</Card.Title>\n                          <Card.Text className=\"sub_text\">\n                            The best launchpad for professional teams\n                          </Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                    <Col\n                      className=\"mb-4\"\n                      xxl={3}\n                      xl={3}\n                      lg={4}\n                      md={6}\n                      sm={6}\n                      xs={12}\n                    >\n                      <Card className=\"card_bg h-100 py-3\">\n                      <div className=\"card_img_pare_div\">\n                        <Card.Img\n                          variant=\"top\"\n                          className=\"mx-auto\"                          \n                          src={home_logo}\n                        />\n                        </div>\n                        <Card.Body className=\"text-center pb-5\">\n                          <Card.Title>Crypto Sale</Card.Title>\n                          <Card.Text className=\"sub_text\">\n                            Launch a token sale with a few clicks.\n                          </Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                    <Col\n                      className=\"mb-4\"\n                      xxl={3}\n                      xl={3}\n                      lg={4}\n                      md={6}\n                      sm={6}\n                      xs={12}\n                    >\n                      <Card className=\"card_bg h-100 py-3\">\n                      <div className=\"card_img_pare_div\">\n                        <Card.Img\n                          variant=\"top\"\n                          className=\"mx-auto\"                          \n                          src={home_logo}\n                        />\n                        </div>\n                        <Card.Body className=\"text-center pb-5\">\n                          <Card.Title>Crypto Swap</Card.Title>\n                          <Card.Text className=\"sub_text\">\n                            Swap tokens and farming #Crypto.\n                          </Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                    <Col\n                      className=\"mb-4\"\n                      xxl={3}\n                      xl={3}\n                      lg={4}\n                      md={6}\n                      sm={6}\n                      xs={12}\n                    >\n                      <Card className=\"card_bg h-100 py-3\">\n                      <div className=\"card_img_pare_div\">\n                        <Card.Img\n                          variant=\"top\"\n                          className=\"mx-auto\"                          \n                          src={home_logo}\n                        />\n                        </div>\n                        <Card.Body className=\"text-center pb-5\">\n                          <Card.Title>Crypto Lock</Card.Title>\n                          <Card.Text className=\"sub_text\">\n                            Locking liquidity on CryptoSwap.\n                          </Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n\n                    <Col\n                      className=\"mb-4\"\n                      xxl={3}\n                      xl={3}\n                      lg={4}\n                      md={6}\n                      sm={6}\n                      xs={12}\n                    >\n                      <Card className=\"card_bg h-100 py-3\">\n                      <div className=\"card_img_pare_div\">\n                        <Card.Img\n                          variant=\"top\"\n                          className=\"mx-auto\"                          \n                          src={home_logo}\n                        />\n                        </div>\n                        <Card.Body className=\"text-center pb-5\">\n                          <Card.Title>Crypto Elon</Card.Title>\n                          <Card.Text className=\"sub_text\">\n                            The first meme token on CryptoMoon.\n                          </Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                    <Col\n                      className=\"mb-4\"\n                      xxl={3}\n                      xl={3}\n                      lg={4}\n                      md={6}\n                      sm={6}\n                      xs={12}\n                    >\n                      <Card className=\"card_bg h-100 py-3\">\n                      <div className=\"card_img_pare_div\">\n                        <Card.Img\n                          variant=\"top\"\n                          className=\"mx-auto\"                          \n                          src={home_logo}\n                        />\n                        </div>\n                        <Card.Body className=\"text-center pb-5\">\n                          <Card.Title>Crypto Wallet</Card.Title>\n                          <Card.Text className=\"sub_text\">\n                            Crypto wallet, buy, store, exchange & earn.\n                          </Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                  </Row>\n                  <center>\n                    <small className=\"mt-3 bottom_text\">\n                      Disclaimer: The information provided shall not in any way\n                      constitute a recomendation as to whether you should invest\n                      in any product discussed. We accept no liability for any\n                      loss occasioned to any person acting or refraining from\n                      action as a result of any material provided or published.\n                    </small>\n                  </center>\n                </Container>\n\n             \n\n\n             \n\n                {/* end ongoing_sec */}\n\n\n                \n\n            </div>\n              </div>\n            </div>\n          </div>\n          {/* <Footer /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Landing;\n","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Lock/TokenLock.js",["598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\n\nimport Header from '../Header';\nimport Sidebar from '../Sidebar';\nimport Trendingslider from '../trendingslider';\n\nimport Walletmodal from \"../Walletmodal\";\n\n\nimport { getAccount } from '../../hooks/useAccount'\n\n\n\n\n\nimport {  Container, FormControl, InputGroup, ProgressBar,Form,Tab,Nav,Col,Row } from 'react-bootstrap';\nimport '../../css/styles.css';\n\nimport favicon from \"../../images/favicon.png\"\nimport { Link } from 'react-router-dom';\nimport { Getalltokenlock, Getlockercount, Getmytokenlock, UseTokenInfo, ViewMylock } from '../../hooks/useContract';\nimport { existsSync } from 'fs';\nimport { searchdata } from '../../hooks/filter';\n\nclass TokenLock extends Component {\n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.05;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n  }\n  \n    componentDidMount()\n    {\n      document.getElementById(\"lock_parent\").classList.add(\"active\");\n\n      // this.showLoader();\n      this.hideLoader();\n    //    this.setState({ accountInfo: getAccount() });\n    this.getmylock();\n    this.getalllock();\n    }\n\n    getmylock = async()=>{\n      this.showLoader()\n      const mylockaddress = await Getmytokenlock();\n      // console.log(\"mylock\" , mylockaddress);\n      this.setState({\"mylocks\" : mylockaddress});\n      let mylockdata = []\n      // mylockaddress.map(async(data , i)=>{\n          console.log(\"IIIII\" , i);\n\n        for(var i =0 ; i<mylockaddress.length ; i++){\n          console.log(\"IIIII\" , i , mylockaddress.length);\n\n        if(i<mylockaddress.length){\n        let singlelockdata = await ViewMylock(mylockaddress[i]);\n        console.log(\"datass\" , await UseTokenInfo(mylockaddress[i]).name);\n        const tokendata = await UseTokenInfo(mylockaddress[i])\n        singlelockdata.name = tokendata.name\n        singlelockdata.decimal = tokendata.decimals;\n        singlelockdata.symbol = tokendata.symbol\n        mylockdata.push(singlelockdata);\n        console.log(\"mylck\" , mylockdata , i ,mylockaddress.length , mylockdata.length);\n        if( mylockdata.length == 3){\n          console.log(\"if\", mylockdata , i ,mylockaddress.length , mylockdata.length);\n          this.setState({mylocksdata : mylockdata})\n          this.setState({mylockindex : i+1})\n          return;\n        }\n        else if(i == mylockaddress.length-1){\n          console.log(\"ifelse\", mylockdata , i ,mylockaddress.length , mylockdata.length);\n          this.setState({mylocksdata : mylockdata})\n          this.setState({mylockindex : i+1})\n          return;\n        }\n        }\n        this.hideLoader();\n        // this.setState({ mylocksdata: [...this.state.mylocksdata, singlelockdata] })\n      }\n      // )\n    }\n\n    loadmylock = async()=>{\n     \n      this.setState({isLoading : true})\n      console.log(\"insideload\" , this.state.mylockindex , this?.state?.mylocks.length);\n      for(var i=this.state.mylockindex ; i<this?.state?.mylocks.length ; i++){\n        console.log(\"insidefor\");\n        let lockarray = []\n        if(i<this.state.mylocks.length){\n          let singlelockdata = await ViewMylock(this.state.mylocks[i]);\n          const tokendata = await UseTokenInfo(this.state.mylocks[i])\n        singlelockdata.name = tokendata.name\n        singlelockdata.decimal = tokendata.decimals;\n        singlelockdata.symbol = tokendata.symbol\n        lockarray.push(singlelockdata);\n        if(lockarray.length == 3){\n          var total = this.state.mylocksdata.concat(lockarray)\n          this.setState({mylocksdata : total})\n          this.setState({mylockindex : i-1})\n          this.setState({isLoading : false})\n          return 0;\n        }else if(i==(this.state.mylocks.length-1)){\n          var total = this.state.mylocksdata.concat(lockarray)\n          this.setState({mylocksdata : total})\n          this.setState({mylockindex : i-1})\n          this.setState({mylockbutton : false});\n          this.setState({isLoading : false})\n        }\n        }\n      }\n     \n    }\n\n    getalllock = async()=>{\n      this.showLoader()\n      const lockercount = await Getlockercount();      \n      this.setState({lockercount : lockercount});\n      const locker = await Getalltokenlock(lockercount , 0 , this.state.interval );\n      console.log(\"locker\" , locker);\n      this.setState({alllocksdata : locker?.lock});\n      this.setState({alllocksindex : locker?.index})\n      if(locker.index >= lockercount)\n      this.setState({alllockbutton : false})\n\n      this.hideLoader()\n    }\n\n    loadalllock = async()=>{\n      this.setState({allisLoading : true})\n      const lockercount = this.state.lockercount;   \n      const locker = await Getalltokenlock(lockercount , this.state.alllocksindex);\n      console.log(\"locker\" , locker);\n      if(locker?.index >= lockercount)\n      this.setState({alllockbutton : false})\n      var total = this.state.alllocksdata.concat(locker?.lock);\n      this.setState({alllocksdata : total});\n      this.setState({alllocksindex : locker?.index})\n      this.setState({allisloading : false});\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {          \n            walletModal: false,\n            accountInfo: '',\n            isLoading : false,\n\n            mylocks : [],\n            mylocksdata : [],\n            mylockindex : \"\",\n            mylockbutton : true,\n            alllocks : [],\n            alllocksdata : [],\n            alllocksindex : \"\",\n            alllockbutton : true,\n            lockercount : \"\",\n            interval : 3,\n            isuser : false,\n\n            singlemylocksdata : {},\n            singlealllocksdata : {},\n            allisloading : false\n        };\n    }\n \n    render() {\n\n\n      \n      \n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n\n           <Header/>\n          \n           <div className=\"whole_sec pb-5\">\n           <div className='flex_side_right'>\n            <Sidebar />\n           {/* ongoing_sec */}\n           <div className='right_side_sec'>\n           {/* <div className=\"text-white topBar d-flex justify-content-between\">\n                  \n                  <small>Trending</small>\n                <small>\n                  #1&nbsp;<span>Husy</span>\n                </small>\n                <small>\n                  #2&nbsp;<span>ORL</span>\n                </small>\n                <small>\n                  #3&nbsp;<span>UWC</span>\n                </small>\n                <small>\n                  #4&nbsp;<span>777</span>\n                </small>\n                <small>\n                  #5&nbsp;<span>IDXS</span>\n                </small>\n                <small>\n                  #6&nbsp;<span>COUGNU</span>\n                </small>\n                <small>\n                  #7&nbsp;<span>CRICLE</span>\n                </small>\n                <small>\n                  #8&nbsp;<span>KASA</span>\n                </small>\n                <small>\n                  #9&nbsp;<span>FIFAPP</span>\n                </small>\n                <small>\n                  #10&nbsp;<span>SOG</span>\n                </small>\n                <small>\n                  #11&nbsp;<span>COOSHA</span>\n                </small>\n                <small>\n                  #12&nbsp;<span>Honey</span>\n                </small>\n                \n                \n              </div> */}\n              {/* <Trendingslider/> */}\n              <div className=\"right_side_spacing\">\n              <div className='row mt-5'>\n           <div className='col-12 col-md-10 col-lg-9 mx-auto'>\n           <div className=\"tab_img\">\n                 <div className='card_bg card'>\n            <div className='card-body'>\n            <div className=\"tab_par px-0 py-3\">\n                        <input\n                          className=\"common_search searc_style_2\"\n                          type=\"text\"\n                          id='myInput'\n                          placeholder=\"Search by LP token address or token address...\"\n                          onChange = {searchdata}\n                        />\n                        <Tab.Container defaultActiveKey=\"first\">\n  <Row className=\"container-fluid mt-4 w-100 mx-0 px-0\">\n    <Col lg={12} className=\"px-0\">\n      <Nav variant=\"\" className=\"table_nav justify-content-end\">\n        <Nav.Item>\n          <Nav.Link eventKey=\"first\" className=\"nav_link\" id=\"first\">\n          <p className='mb-0'>All</p>\n\n          </Nav.Link>\n         </Nav.Item>\n         \n        <Nav.Item>\n          <Nav.Link eventKey=\"second\" className=\"nav_link\" id=\"second\">\n          <p className='mb-0'>My Lock</p>\n   \n          </Nav.Link>\n                               \n        </Nav.Item>\n        \n        \n      </Nav>\n    </Col>\n\n    <Col lg={12} className=\"img_center_lg px-0\">\n    <div className='container container_custom px-0'>\n      <Tab.Content>\n        <Tab.Pane eventKey=\"first\">\n        <div class=\"table-responsive\">\n  <table className=\"table recepients_table\" id = \"myTable\">\n    <thead>\n    <tr>\n      <th>Token</th>\n      <th>Amount</th>\n    </tr>\n    </thead>\n\n    {this.state.alllocksdata.map((data , i)=><>\n      <tr>\n      <td>\n      <div className=\"d-flex pr-2\">\n        <div className=\"d-flex justify-content-center align-items-center\">\n        <div className=\"relative_token_div  mr-2\">\n        <img className=\"token_image_sm \" src={favicon} />\n        </div>\n\n        </div>\n        <div className=\"p-0 table_det\">\n          <span className=\"table_text\">{data?.name}</span>\n          <span className=\"sub_tabletext\">LINKS</span>\n        </div>\n      </div>\n      </td>\n      <td>{data?.amount/10**data?.decimal+\" \" + data?.symbol  }</td>\n      <td className=\"d-flex justify-content-end\"><a \n      href={`/lockdetail/${data.LPAddress}`} className=\"link_text\" to='/lockdetail'>View</a></td>\n      \n    </tr>\n    </>)}\n   \n   \n   \n    {/* <tr>\n      <td>\n      <div className=\"d-flex pr-2\">\n        <div className=\"d-flex justify-content-center align-items-center\">\n        <div className=\"relative_token_div  mr-2\">\n        <img className=\"token_image_sm \" src={favicon} />\n        </div>\n\n        </div>\n        <div className=\"p-0 table_det\">\n          <span className=\"table_text\">PERAGON</span>\n          <span className=\"sub_tabletext\">$Peragon</span>\n        </div>\n      </div>\n      </td>\n      <td>100,000,000 $Peragon</td>\n      <td className=\"d-flex justify-content-end\"><Link className=\"link_text\" to='/lockdetail'>View</Link></td>\n      \n    </tr>\n    <tr>\n      <td>\n      <div className=\"d-flex pr-2\">\n        <div className=\"d-flex justify-content-center align-items-center\">\n        <div className=\"relative_token_div  mr-2\">\n        <img className=\"token_image_sm \" src={favicon} />\n        </div>\n\n        </div>\n        <div className=\"p-0 table_det\">\n          <span className=\"table_text\">Chainscan</span>\n          <span className=\"sub_tabletext\">LINKS</span>\n        </div>\n      </div>\n      </td>\n      <td>600,000,000 LINKS</td>\n      <td className=\"d-flex justify-content-end\"><Link className=\"link_text\" to='/lockdetail'>View</Link></td>\n      \n    </tr> */}\n  </table>\n</div>\n<div className=\"mt-2 d-flex justify-content-center align-items-center btn_pagin_wrap\">\n{this.state.alllockbutton &&<button className=\"get-started-btn\" onClick={this.loadalllock.bind(this)} id=\"load_more_btn\">{this.state.allisLoading ? 'Loading...' : 'View More Locks' }</button>}\n{/* <button className=\"pagination_btn\"><i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i></button>\n  <button className=\"pagination_btn\">1</button>\n  <button className=\"pagination_btn\">2</button>\n  <button className=\"pagination_btn\">3</button>\n  <button className=\"pagination_btn\">4</button>\n  <button className=\"pagination_btn\">5</button>\n  <button className=\"pagination_btn\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></button> */}\n</div>\n        \n        </Tab.Pane>\n        <Tab.Pane eventKey=\"second\">\n        <div class=\"table-responsive\">\n         \n  <table className=\"table recepients_table\" id = \"myTable\">\n    <thead>\n    <tr>\n      <th>Token</th>\n      <th>Amount</th>\n    </tr>\n    </thead>\n   {/* { this.state.mylocksdata.map((item,index)=>{\n    console.log(\"mylocksdata\" ,item,this.state.mylocksdata.length)\n    })} */}\n    {this.state.mylocksdata.map((data , i)=><>\n    {/* {console.log(\"data\" , data)} */}\n      <tr>\n      <td>\n      <div className=\"d-flex pr-2\">\n        <div className=\"d-flex justify-content-center align-items-center\">\n        <div className=\"relative_token_div  mr-2\">\n        <img className=\"token_image_sm \" src={favicon} />\n        </div>\n\n        </div>\n        <div className=\"p-0 table_det\">\n          <span className=\"table_text\">{data.name}</span>\n          {/* <span className=\"sub_tabletext\">LINKS</span> */}\n        </div>\n      </div>\n      </td>\n      <td>{data.amount/10**18 + \" \" + data?.symbol} </td>\n      <td className=\"d-flex justify-content-end\"><a className=\"link_text\" onClick={\n        (e)=>{\n          this.setState({singlemylocksdata : data})\n          console.log(\"data\" , data);\n          this.props.history.push({\n            pathname : \"/view-lockinfo\",\n            state : {lockdata : data , address : this.state.mylocks[i]}\n          })\n        }\n      } \n      // to='/lockdetail'\n      >View</a></td>\n      \n    </tr>\n    </>)}\n    \n\n\n    {/* <tr>\n      <td>\n      <div className=\"d-flex pr-2\">\n        <div className=\"d-flex justify-content-center align-items-center\">\n        <div className=\"relative_token_div  mr-2\">\n        <img className=\"token_image_sm \" src={favicon} />\n        </div>\n\n        </div>\n        <div className=\"p-0 table_det\">\n          <span className=\"table_text\">PERAGON</span>\n          <span className=\"sub_tabletext\">$Peragon</span>\n        </div>\n      </div>\n      </td>\n      <td>100,000,000 $Peragon</td>\n      <td className=\"d-flex justify-content-end\"><Link className=\"link_text\" to='/lockdetail'>View</Link></td>\n      \n    </tr>\n    <tr>\n      <td>\n      <div className=\"d-flex pr-2\">\n        <div className=\"d-flex justify-content-center align-items-center\">\n        <div className=\"relative_token_div  mr-2\">\n        <img className=\"token_image_sm \" src={favicon} />\n        </div>\n\n        </div>\n        <div className=\"p-0 table_det\">\n          <span className=\"table_text\">Chainscan</span>\n          <span className=\"sub_tabletext\">LINKS</span>\n        </div>\n      </div>\n      </td>\n      <td>600,000,000 LINKS</td>\n      <td className=\"d-flex justify-content-end\"><Link className=\"link_text\" to='/lockdetail'>View</Link></td>\n      \n    </tr> */}\n  </table>\n</div>\n<div className=\"mt-2 d-flex justify-content-center align-items-center btn_pagin_wrap\">\n\n{this.state.mylockbutton &&<button className=\"get-started-btn\" onClick={this.loadmylock.bind(this)} id=\"load_more_btn\">{this.state.isLoading ? 'Loading...' : 'View More Locks' }</button>}\n{/* <button className=\"pagination_btn\"><i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i></button>\n  <button className=\"pagination_btn\">1</button>\n  <button className=\"pagination_btn\">2</button>\n  <button className=\"pagination_btn\">3</button>\n  <button className=\"pagination_btn\">4</button>\n  <button className=\"pagination_btn\">5</button>\n  <button className=\"pagination_btn\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></button> */}\n</div>\n          <Container>\n        \n</Container>\n       \n        </Tab.Pane>\n        \n      </Tab.Content>\n      </div>\n    </Col>\n  </Row>\n</Tab.Container>\n\n\n                        \n                        \n                      </div>\n</div>\n</div>\n</div>\n</div>\n</div>\n\n            <Container className='pb-5 px-0 mt-4'>\n                 \n                 <center>\n                   <small className=\"mt-3 bottom_text\">\n                     Disclaimer: The information provided shall not in any way\n                     constitute a recomendation as to whether you should invest\n                     in any product discussed. We accept no liability for any\n                     loss occasioned to any person acting or refraining from\n                     action as a result of any material provided or published.\n                   </small>\n                 </center>\n               </Container>\n            </div>\n           </div>\n           </div>\n           </div>\n\n            {/* <Footer /> */}\n        </div>\n        </div>\n        )\n    }\n}\n\nexport default TokenLock","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/CreateFairlaunch.js",["620","621","622","623","624","625","626","627","628"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\n\nimport Header from '../Header';\nimport Sidebar from '../Sidebar';\n\nimport Walletmodal from \"../Walletmodal\";\nimport Trendingslider from '../trendingslider';\n\nimport CreatetabFair from \"./CreatetabFair\";\nimport { getAccount } from '../../hooks/useAccount'\n\n\n\nimport {  Container } from 'react-bootstrap';\nimport '../../css/styles.css';\n\nimport favicon from \"../../images/favicon.png\"\n\n\nclass CreateFairlaunch extends Component {\n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.05;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n\n\n\n  }\n  \n    componentDidMount()\n    {\n      // this.showLoader();\n      document.getElementById(\"launchpad_parent\").classList.add(\"active\");\n\n      this.hideLoader();\n      // var kyc = sessionStorage.getItem(\"kyc\")\n      // if(kyc == \"false\" ||  !kyc){\n      //   console.log(\"sessionStorage.getItem\" , kyc)\n      //   this.props.history.push(\"/kyc\");\n      // }\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {          \n            walletModal: false,\n            accountInfo: '',\n        };\n    }\n \n    render() {\n        \n      const location = this.props.location.pathname.split('/')[1];\n\n      const { walletModal} = this.state\n\n      \n      \n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n\n           <Header/>\n          \n           <div className=\"whole_sec pb-5\">\n           <div className='flex_side_right'>\n            <Sidebar />\n           {/* ongoing_sec */}\n           <div className='right_side_sec'>\n           {/* <div className=\"text-white topBar d-flex justify-content-between\">\n                  \n                    <small>Trending</small>\n                  <small>\n                    #1&nbsp;<span>Husy</span>\n                  </small>\n                  <small>\n                    #2&nbsp;<span>ORL</span>\n                  </small>\n                  <small>\n                    #3&nbsp;<span>UWC</span>\n                  </small>\n                  <small>\n                    #4&nbsp;<span>777</span>\n                  </small>\n                  <small>\n                    #5&nbsp;<span>IDXS</span>\n                  </small>\n                  <small>\n                    #6&nbsp;<span>COUGNU</span>\n                  </small>\n                  <small>\n                    #7&nbsp;<span>CRICLE</span>\n                  </small>\n                  <small>\n                    #8&nbsp;<span>KASA</span>\n                  </small>\n                  <small>\n                    #9&nbsp;<span>FIFAPP</span>\n                  </small>\n                  <small>\n                    #10&nbsp;<span>SOG</span>\n                  </small>\n                  <small>\n                    #11&nbsp;<span>COOSHA</span>\n                  </small>\n                  <small>\n                    #12&nbsp;<span>Honey</span>\n                  </small>\n                  \n                  \n                </div> */}\n                {/* <Trendingslider/> */}\n                <div className=\"right_side_spacing\">\n             <CreatetabFair />\n\n            <Container className='pb-5 px-0 mt-4'>\n                 \n                 <center>\n                   <small className=\"mt-3 bottom_text\">\n                     Disclaimer: The information provided shall not in any way\n                     constitute a recomendation as to whether you should invest\n                     in any product discussed. We accept no liability for any\n                     loss occasioned to any person acting or refraining from\n                     action as a result of any material provided or published.\n                   </small>\n                 </center>\n               </Container>\n            </div>\n           </div>\n           </div>\n           </div>\n\n            {/* <Footer /> */}\n        </div>\n        </div>\n        )\n    }\n}\n\nexport default CreateFairlaunch","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Lock/LiquidityLock.js",["629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\n\nimport Header from '../Header';\nimport Sidebar from '../Sidebar';\nimport Trendingslider from '../trendingslider';\n\nimport Walletmodal from \"../Walletmodal\";\n\n\nimport { getAccount } from '../../hooks/useAccount'\n\n\n\n\n\nimport {  Container, FormControl, InputGroup, ProgressBar,Form,Tab,Nav,Col,Row } from 'react-bootstrap';\nimport '../../css/styles.css';\n\nimport favicon from \"../../images/favicon.png\"\nimport { Link } from 'react-router-dom';\n\nclass LiquidityLock extends Component {\n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.05;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n\n\n\n  }\n  \n    componentDidMount()\n    {\n      document.getElementById(\"lock_parent\").classList.add(\"active\");\n\n      // this.showLoader();\n      this.hideLoader();\n    //    this.setState({ accountInfo: getAccount() });\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {          \n            walletModal: false,\n            accountInfo: ''\n        };\n    }\n \n    render() {\n\n\n      \n      \n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n\n           <Header/>\n          \n           <div className=\"whole_sec pb-5\">\n           <div className='flex_side_right'>\n            <Sidebar />\n           {/* ongoing_sec */}\n           <div className='right_side_sec'>\n           {/* <div className=\"text-white topBar d-flex justify-content-between\">\n                  \n                  <small>Trending</small>\n                <small>\n                  #1&nbsp;<span>Husy</span>\n                </small>\n                <small>\n                  #2&nbsp;<span>ORL</span>\n                </small>\n                <small>\n                  #3&nbsp;<span>UWC</span>\n                </small>\n                <small>\n                  #4&nbsp;<span>777</span>\n                </small>\n                <small>\n                  #5&nbsp;<span>IDXS</span>\n                </small>\n                <small>\n                  #6&nbsp;<span>COUGNU</span>\n                </small>\n                <small>\n                  #7&nbsp;<span>CRICLE</span>\n                </small>\n                <small>\n                  #8&nbsp;<span>KASA</span>\n                </small>\n                <small>\n                  #9&nbsp;<span>FIFAPP</span>\n                </small>\n                <small>\n                  #10&nbsp;<span>SOG</span>\n                </small>\n                <small>\n                  #11&nbsp;<span>COOSHA</span>\n                </small>\n                <small>\n                  #12&nbsp;<span>Honey</span>\n                </small>\n                \n                \n              </div> */}\n              {/* <Trendingslider/> */}\n              <div className=\"right_side_spacing\">\n              <div className='row mt-5'>\n           <div className='col-12 col-md-10 col-lg-9 mx-auto'>\n           <div className=\"tab_img\">\n                 <div className='card_bg card'>\n            <div className='card-body'>\n            <div className=\"tab_par px-0 py-3\">\n                        <input\n                          className=\"common_search searc_style_2\"\n                          type=\"text\"\n                          placeholder=\"Search by LP token address or token address...\"\n                        />\n                        <Tab.Container defaultActiveKey=\"first\">\n  <Row className=\"container-fluid mt-4 w-100 mx-0 px-0\">\n    <Col lg={12} className=\"px-0\">\n      <Nav variant=\"\" className=\"table_nav justify-content-end\">\n        <Nav.Item>\n          <Nav.Link eventKey=\"first\" className=\"nav_link\" id=\"first\">\n          <p className='mb-0'>All</p>\n\n          </Nav.Link>\n         </Nav.Item>\n         \n        <Nav.Item>\n          <Nav.Link eventKey=\"second\" className=\"nav_link\" id=\"second\">\n          <p className='mb-0'>My Lock</p>\n   \n          </Nav.Link>\n                               \n        </Nav.Item>\n        \n        \n      </Nav>\n    </Col>\n\n    <Col lg={12} className=\"img_center_lg px-0\">\n    <div className='container container_custom px-0'>\n      <Tab.Content>\n        <Tab.Pane eventKey=\"first\">\n        <div class=\"table-responsive\">\n  <table className=\"table recepients_table\">\n    <thead>\n    <tr>\n      <th>Token</th>\n      <th>Amount</th>\n    </tr>\n    </thead>\n    <tr>\n      <td>\n      <div className=\"d-flex pr-2\">\n        <div className=\"d-flex justify-content-center mr-2 align-items-center\">\n          <div className=\"relative_token_div\">\n          <img className=\"token_image_sm\" src={favicon} />\n            \n            </div>\n            <div className=\"absolute_token_div\">\n            <img className=\"token_image_sm \" src={favicon} />\n\n            </div>\n        \n        \n\n        </div>\n        <div className=\"p-0 table_det\">\n          <span className=\"table_text\">Chainscan</span>\n          <span className=\"sub_tabletext\">LINKS</span>\n        </div>\n      </div>\n      </td>\n      <td>600,000,000 LINKS</td>\n      <td className=\"d-flex justify-content-end\"><Link className=\"link_text\" to='/lockdetail'>View</Link></td>\n      \n    </tr>\n    <tr>\n      <td>\n      <div className=\"d-flex pr-2\">\n      <div className=\"d-flex justify-content-center mr-2 align-items-center\">\n          <div className=\"relative_token_div\">\n          <img className=\"token_image_sm\" src={favicon} />\n            \n            </div>\n            <div className=\"absolute_token_div\">\n            <img className=\"token_image_sm \" src={favicon} />\n\n            </div>\n        \n        \n\n        </div>\n        <div className=\"p-0 table_det\">\n          <span className=\"table_text\">PERAGON</span>\n          <span className=\"sub_tabletext\">$Peragon</span>\n        </div>\n      </div>\n      </td>\n      <td>100,000,000 $Peragon</td>\n      <td className=\"d-flex justify-content-end\"><Link className=\"link_text\" to='/lockdetail'>View</Link></td>\n      \n    </tr>\n    <tr>\n      <td>\n      <div className=\"d-flex pr-2\">\n      <div className=\"d-flex justify-content-center mr-2 align-items-center\">\n          <div className=\"relative_token_div\">\n          <img className=\"token_image_sm\" src={favicon} />\n            \n            </div>\n            <div className=\"absolute_token_div\">\n            <img className=\"token_image_sm \" src={favicon} />\n\n            </div>\n        \n        \n\n        </div>\n        <div className=\"p-0 table_det\">\n          <span className=\"table_text\">Chainscan</span>\n          <span className=\"sub_tabletext\">LINKS</span>\n        </div>\n      </div>\n      </td>\n      <td>600,000,000 LINKS</td>\n      <td className=\"d-flex justify-content-end\"><Link className=\"link_text\" to='/lockdetail'>View</Link></td>\n      \n    </tr>\n  </table>\n</div>\n<div className=\"mt-2 d-flex justify-content-center align-items-center btn_pagin_wrap\">\n<button className=\"pagination_btn\"><i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i></button>\n  <button className=\"pagination_btn\">1</button>\n  <button className=\"pagination_btn\">2</button>\n  <button className=\"pagination_btn\">3</button>\n  <button className=\"pagination_btn\">4</button>\n  <button className=\"pagination_btn\">5</button>\n  <button className=\"pagination_btn\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></button>\n</div>\n        \n        </Tab.Pane>\n        <Tab.Pane eventKey=\"second\">\n        <div class=\"table-responsive\">\n  <table className=\"table recepients_table\">\n    <thead>\n    <tr>\n      <th>Token</th>\n      <th>Amount</th>\n    </tr>\n    </thead>\n    <tr>\n      <td>\n      <div className=\"d-flex pr-2\">\n        <div className=\"d-flex justify-content-center mr-2 align-items-center\">\n          <div className=\"relative_token_div\">\n          <img className=\"token_image_sm\" src={favicon} />\n            \n            </div>\n            <div className=\"absolute_token_div\">\n            <img className=\"token_image_sm \" src={favicon} />\n\n            </div>\n        \n        \n\n        </div>\n        <div className=\"p-0 table_det\">\n          <span className=\"table_text\">Chainscan</span>\n          <span className=\"sub_tabletext\">LINKS</span>\n        </div>\n      </div>\n      </td>\n      <td>600,000,000 LINKS</td>\n      <td className=\"d-flex justify-content-end\"><Link className=\"link_text\" to='/lockdetail'>View</Link></td>\n      \n    </tr>\n    <tr>\n      <td>\n      <div className=\"d-flex pr-2\">\n      <div className=\"d-flex justify-content-center mr-2 align-items-center\">\n          <div className=\"relative_token_div\">\n          <img className=\"token_image_sm\" src={favicon} />\n            \n            </div>\n            <div className=\"absolute_token_div\">\n            <img className=\"token_image_sm \" src={favicon} />\n\n            </div>\n        \n        \n\n        </div>\n        <div className=\"p-0 table_det\">\n          <span className=\"table_text\">PERAGON</span>\n          <span className=\"sub_tabletext\">$Peragon</span>\n        </div>\n      </div>\n      </td>\n      <td>100,000,000 $Peragon</td>\n      <td className=\"d-flex justify-content-end\"><Link className=\"link_text\" to='/lockdetail'>View</Link></td>\n      \n    </tr>\n    <tr>\n      <td>\n      <div className=\"d-flex pr-2\">\n      <div className=\"d-flex justify-content-center mr-2 align-items-center\">\n          <div className=\"relative_token_div\">\n          <img className=\"token_image_sm\" src={favicon} />\n            \n            </div>\n            <div className=\"absolute_token_div\">\n            <img className=\"token_image_sm \" src={favicon} />\n\n            </div>\n        \n        \n\n        </div>\n        <div className=\"p-0 table_det\">\n          <span className=\"table_text\">Chainscan</span>\n          <span className=\"sub_tabletext\">LINKS</span>\n        </div>\n      </div>\n      </td>\n      <td>600,000,000 LINKS</td>\n      <td className=\"d-flex justify-content-end\"><Link className=\"link_text\" to='/lockdetail'>View</Link></td>\n      \n    </tr>\n  </table>\n</div>\n<div className=\"mt-2 d-flex justify-content-center align-items-center btn_pagin_wrap\">\n<button className=\"pagination_btn\"><i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i></button>\n  <button className=\"pagination_btn\">1</button>\n  <button className=\"pagination_btn\">2</button>\n  <button className=\"pagination_btn\">3</button>\n  <button className=\"pagination_btn\">4</button>\n  <button className=\"pagination_btn\">5</button>\n  <button className=\"pagination_btn\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></button>\n</div>\n          <Container>\n        \n</Container>\n       \n        </Tab.Pane>\n        \n      </Tab.Content>\n      </div>\n    </Col>\n  </Row>\n</Tab.Container>\n\n\n                        \n                        \n                      </div>\n</div>\n</div>\n</div>\n</div>\n</div>\n\n            <Container className='pb-5 px-0 mt-4'>\n                 \n                 <center>\n                   <small className=\"mt-3 bottom_text\">\n                     Disclaimer: The information provided shall not in any way\n                     constitute a recomendation as to whether you should invest\n                     in any product discussed. We accept no liability for any\n                     loss occasioned to any person acting or refraining from\n                     action as a result of any material provided or published.\n                   </small>\n                 </center>\n               </Container>\n            </div>\n           </div>\n           </div>\n           </div>\n\n            {/* <Footer /> */}\n        </div>\n        </div>\n        )\n    }\n}\n\nexport default LiquidityLock","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Privatesale/PrivatesaleList.js",["652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\n\nimport Header from '../Header';\nimport Sidebar from '../Sidebar';\nimport Trendingslider from '../trendingslider';\n\nimport LaunchpadBuycard from \"./LaunchpadBuycard\";\n\nimport Web3 from \"web3\";\nimport '../../css/styles.css';\n\nimport coin from \"../../images/coin.png\"\nimport favicon from \"../../images/favicon.png\"\n\nimport loader from \"../../images/loader.gif\"\nimport { getlaunchpaddatalimit, getmycontributiondatalimit, getPrivatesaleCardLimit, getPrivatesaleFilter, getSaleCards, getSaleCardsLimit, getTotalSalesInfo, searchCards, searchSale } from '../../hooks/useProjects';\nimport { Dropdown, Nav, Tab, Row, Col, Container,InputGroup,ProgressBar,Form } from 'react-bootstrap';\nimport { CHAINS } from '../../config/env'\nimport { getAccount, getChainId, setChainId } from '../../hooks/useAccount'\nimport { privatesalefilterby, privatesalesortby, searchdata, tokenfilter, tokenfilterlaunchpad } from '../../hooks/filter';\nimport { UseTokenInfo } from '../../hooks/useContract';\nimport { gettrendingdisplayhook, getuserdatahook } from '../../hooks/usebackend';\n\nclass Privatesalelist extends Component {\n   \n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.5;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n\n\n\n  }\n\n  closeAllMenusStatus()\n  {\n    this.setState({closeKycmenu:true});\n    this.setState({closeHcmenu:true});\n    this.setState({closeCoinmenu:true});\n  }\n\n  closeAllMenusKyc()\n  {\n    this.setState({closeStatusmenu:true});\n    this.setState({closeHcmenu:true});\n    this.setState({closeCoinmenu:true});\n  }\n\n  closeAllMenusCoin()\n  {\n    this.setState({closeStatusmenu:true});\n    this.setState({closeHcmenu:true});\n    this.setState({closeKycmenu:true});  \n  }\n\n  \n  closeAllMenusHc()\n  {\n    this.setState({closeStatusmenu:true});\n    this.setState({closeCoinmenu:true});\n    this.setState({closeKycmenu:true});  \n  }\n  \n    componentDidMount()\n    {\n      document.getElementById(\"privatesale_parent\").classList.add(\"active\");\n\n      // this.showLoader();\n     this.hideLoader();\n    this.setState( { currentChain: getChainId() });\n    this.gettrending();\n    this.getuserdata();\n     this.loadData();\n     \n\n  \n    }\n\n    getuserdata = async()=>{\n      const totalsale = await getTotalSalesInfo();\n      let userdata = await getuserdatahook(this.state.accountInfo && this.state.accountInfo.toLowerCase());\n      console.log(\"userdata\" , userdata.data.data);\n      // this.setState({investedpools : userdata.data.data.investedpools})\n      // this.setState({wishlist : userdata.data.data.wishlist})\n      // this.setState({viewlist : userdata.data.data.viewlist})\n      // this.setState({investedamount : userdata.data.data.investedamount})\n      // const totalproxydata = userdata.data.data.launchpad.filter(data => data.iswhitelist == true)\n      // console.log(\"totalproxydata\" , totalproxydata);\n      let totalproxydata = userdata.data.data.launchpad;\n      const newly = totalproxydata.filter(data => data.iswhitelist == \"true\" || data.iswhitelist == true)\n      let newarray = [];\n      newly.map((val , i) => {\n         let newvalue = totalsale.find((e) => e._sale == val.saleaddress);\n         newarray.push(newvalue)\n      })\n      console.log(\"userdatanewly\" , newly , newarray);\n      this.setState({mycontribution : newarray.reverse()})\n    }\n   \n    constructor(props) {\n      super(props);\n      this.state = {  \n        original : [],\n        proxy: [],        \n        totalSales: [],\n        onGoingSales: [],\n        upComingSales: [],\n        isSearch: false,\n        searchSale: [],\n        search: '',\n        interval: 3,\n        loadInterval: 3,\n        searchInterval: 3,\n        searchProxy: [],\n        isLoading: false,\n        currentChain: 0,\n        closeHcmenu:false,\n        closeCoinmenu:false,\n        closeKycmenu:false,\n        closeStatusmenu:false,\n        isuser : false,\n        button : true,\n        loadinterval : 3,\n\n        mycontribution : [],\n        accountInfo : getAccount(),\n        filterdata : \"All Status\",\n        sortdata : \"No Filter\",\n        coin : [],\n        status : [],\n        type: [],\n        trending : []\n      \n      };\n    }\n\n    sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\n     async gettrending(){\n        let data = await gettrendingdisplayhook();\n        console.log(\"dataa trending\" , data?.data?.data);\n        if(data?.data?.data?.length > 0)\n        this.setState({trending : data?.data?.data}) \n    }\n\n    async loadData(){\n        this.showLoader();\n        const Proxydata = await getTotalSalesInfo();\n        console.log(\"Proxydata\",Proxydata);\n        const totalproxydata = Proxydata.filter(data => data._isWhitelisted == true)\n\n        let trenddata = await gettrendingdisplayhook();\n        console.log(\"dataa trending\" , trenddata?.data?.data);\n        if(trenddata?.data?.data?.length > 0)\n        this.setState({trending : trenddata?.data?.data})\n        var trending = trenddata?.data?.data\n  console.log(\"trendingdataaaaaaaaaaaaaa\" , trending);\n        let newtotalproxy = [];\n          trending.map((val , i)=>{\n            let singledata = totalproxydata.find(e=>e?._sale == val.saleaddress);\n            if(singledata){\n              newtotalproxy.push(singledata)\n            }\n          })\n          totalproxydata.map((datas , i) => {\n            let singlesale = newtotalproxy.find(e=>e._sale == datas?._sale);\n            if(!singlesale){\n              newtotalproxy.push(datas)\n            }\n          })\n          this.setState({ proxy : newtotalproxy })\n\n        console.log(\"total proxy data\" , newtotalproxy);\n        // this.setState({ proxy : totalproxydata })\n        this.setState({ original : newtotalproxy })\n        const total = await getlaunchpaddatalimit(newtotalproxy , 0 , this.state.loadinterval);\n        console.log(\"totalsaleeeeegetlaunchpaddatalimit\" , total);\n        // const total = await getPrivatesaleCardLimit(Proxydata,0,this.state.interval , this.state.isuser);\n        // console.log(\"button \" ,Proxydata?.length , total.index );\n        // if(Proxydata?.length == total.index || !total){\n        //   this.setState({button : false})\n        // }\n        // await this.sleep(1000)\n        //  this.setState({ totalSales: total.saleInfoCards });  \n        //  this.setState({ interval: total.index+1 }); \n        this.setState({ totalSales: total });  \n         this.setState({ interval: this.state.loadinterval}); \n        this.hideLoader();\n    }\n\n    async loadMore(){\n      console.log(\"Lad moreee\",this.state.totalSales.length < this.state.proxy.length)\n      this.setState({ isLoading: true});\n      const newly = await getlaunchpaddatalimit(this.state.proxy,this.state.interval,this.state.interval+this.state.loadInterval );\n      console.log(\"newly \" , newly);\n      const total = this.state.totalSales.concat(newly);\n      this.setState({ totalSales: total,interval: this.state.interval+this.state.loadInterval });\n       this.setState({ isLoading: false});\n    }\n\n    async loadmycontribution(){\n      this.showLoader()\n      // this.setState({ isLoading: true});\n      this.setState({proxy : this.state.mycontribution})\n      const newly = await getmycontributiondatalimit(this.state.mycontribution,0,this.state.loadInterval);\n      // const newly = totalproxydata.filter(data => data._isWhitelisted == true)\n      console.log(\"newlyyyyyy \" , newly);\n      this.setState({ totalSales: newly});\n      // this.setState({ isLoading: false});\n      this.hideLoader();\n    }\n\n    async loadMoremycontribution(){\n      console.log(\"Lad more\",this.state.totalSales.length < this.state.proxy.length)\n      this.setState({ isLoading: true});\n      const newly = await getmycontributiondatalimit(this.state.mycontribution,this.state.interval,this.state.interval+this.state.loadInterval );\n      console.log(\"newly \" , newly);\n      const total = this.state.totalSales.concat(newly);\n      // if(this?.state?.proxy?.length == newly.index || !newly.saleInfoCards){\n      //   console.log(\"button\");\n      //   this.setState({button : false})\n      // }\n      // await this.sleep(1000)\n      //  this.setState({ totalSales: total,interval: this.state.interval+this.state.loadInterval });\n       this.setState({ totalSales: total,interval: this.state.interval+this.state.loadInterval });\n       this.setState({ isLoading: false});\n      //  this.setState({ isLoading: false});   \n    }\n\n    async loadSearchMore(){\n      console.log(\"Lad more\",this.state.totalSales.length < this.state.proxy.length)\n      this.setState({ isLoading: true});\n      const newly = await getlaunchpaddatalimit(this.state.searchProxy,this.state.searchInterval,this.state.searchInterval+this.state.loadInterval);\n      const total = this.state.searchSale.concat(newly);\n      await this.sleep(1000)\n       this.setState({ searchSale: total,searchInterval: this.state.searchInterval+this.state.loadInterval });\n       this.setState({ isLoading: false});   \n    }\n\n    async handleChange(e){\n      if((e.target.value).length > 0){\n            if (e.key === 'Enter') {\n            console.log(\"Search : \",e.target.value)\n            this.showLoader();\n            const searchS = await searchCards(this.state.proxy,e.target.value);\n            this.setState({ searchProxy : searchS});\n            const data = await getlaunchpaddatalimit(searchS,0,this.state.searchInterval);\n            await this.sleep(1050)\n            console.log(\"Search sale : \",searchS)\n            this.setState({ searchSale: data, isSearch: true})\n            this.hideLoader();\n            }\n      }else{\n        this.setState({ isSearch: false})\n      }\n   \n  }\n\n\n \n\n  async handlesearchChange(e){\n    if((e.target.value).length > 0){\n          if (e.key === 'Enter') {\n          console.log(\"Search : \",e.target.value)\n          this.showLoader();\n          const searchS = await searchCards(this.state.proxy,e.target.value);\n          this.setState({ searchProxy : searchS});\n          const data = await getlaunchpaddatalimit(searchS,0,this.state.searchInterval);\n          await this.sleep(1050)\n          console.log(\"Search sale : \",searchS)\n          this.setState({ searchSale: data, isSearch: true})\n          this.hideLoader();\n          }\n    }else{\n      this.setState({ isSearch: false})\n    }\n \n}\n\n    async nouser(){\n      this.setState({isuser : false});\n      this.setState({loadInterval : 3});\n      this.setState({interval : 3});\n      this.setState({searchInterval : 3});\n      // this.setState({button : true});\n      // this.setState({ isSearch: true})\n      await this.loadData()\n    }\n\n    async yesuser(){\n      this.setState({isuser : true});\n      // this.setState({loadInterval : 3});\n      this.setState({interval : 3});\n      this.setState({searchInterval : 3});\n      // this.setState({button : true})\n      // this.setState({ isSearch: true})\n      await this.loadmycontribution()\n    }\n\n    async handlefilter(val){\n      if(val==\"All Status\"){\n        this.setState({button : true})\n        this.setState({filterdata : val});\n        this.loadData();\n      }\n      else{\n        this.showLoader();\n        this.setState({button : true})\n        this.setState({filterdata : val});\n        var filtered = await privatesalefilterby(this.state.original , val , this.state.isuser);\n        console.log(\"filtered\" , filtered);\n        // var saleinfo = await getPrivatesaleFilter(filtered , this.state.isuser);\n        this.setState({proxy : filtered})\n        if(filtered.length > 0){\n          const total = await getlaunchpaddatalimit(filtered,0,this.state.loadInterval );\n          console.log(\"button \" ,filtered?.length , total );\n\n        if(filtered?.length == 0){\n          this.setState({ totalSales: filtered})\n        }\n        await this.sleep(1000)\n        this.setState({ totalSales: total});  \n        this.setState({ interval: 3 }); \n       this.hideLoader();\n        } \n        else {\n          // this.setState({button : false})\n          this.setState({ totalSales: filtered });\n          this.hideLoader();\n        }\n      }\n    }\n   \n    async handlesort(val){\n      if(val==\"No Filter\"){\n        this.setState({button : true})\n        this.loadData();\n      }\n      else{\n        this.showLoader();\n        this.setState({button : true});\n        var sorted = await privatesalesortby(this.state.original , val , this.state.isuser);\n        console.log(\"sorted\" , sorted);\n        this.setState({proxy : sorted});\n        if(sorted.length > 0){\n          const total = await getPrivatesaleCardLimit(sorted,0,this.state.interval , this.state.isuser);\n          console.log(\"button \" ,sorted?.length , total );\n\n        if(sorted?.length == total.index || !total){\n          this.setState({button : false})\n        }\n        await this.sleep(1000)\n        this.setState({ totalSales: total.saleInfoCards });  \n        this.setState({ interval: total.index+1 }); \n       this.hideLoader();\n        } \n        else {\n          this.setState({button : false})\n          this.setState({ totalSales: sorted });\n          this.hideLoader();\n        }\n      }\n    }\n\n    async handlecoin(val){\n      var coins = this.state.coin\n      if(coins.length==0){\n        coins.push(val);\n      }\n      else{\n        if(coins.includes(val)){\n          const index = coins.indexOf(val);\n          if (index > -1) { \n            coins.splice(index, 1); \n          }\n        }\n        else{\n          coins.push(val)\n        }\n      }\n      console.log(\"coin\" , coins);\n      this.setState({coin : coins})\n    }\n\n    async handlestatus(val){\n      var statuss = this.state.status\n      if(statuss.length==0){\n        statuss.push(val);\n      }\n      else{\n        if(statuss.includes(val)){\n          const index = statuss.indexOf(val);\n          if (index > -1) { \n            statuss.splice(index, 1); \n          }\n        }\n        else{\n          statuss.push(val)\n        }\n      }\n      console.log(\"status\" , statuss);\n      this.setState({status : statuss})\n    }\n\n    async handletype(val){\n      var statuss = this.state.type\n      if(statuss.length==0){\n        statuss.push(val);\n      }\n      else{\n        if(statuss.includes(val)){\n          const index = statuss.indexOf(val);\n          if (index > -1) { \n            statuss.splice(index, 1); \n          }\n        }\n        else{\n          statuss.push(val)\n        }\n      }\n      console.log(\"status\" , statuss);\n      this.setState({type : statuss})\n    }\n  \n    async handleadvancefilter(){\n      this.showLoader();\n      if(this.state.coin.length == 0 && this.state.status.length == 0 && this.state.type.length == 0){\n        this.loadData();\n      }\n      else{\n        // let filtered = await tokenfilter(this.state.proxy , this.state.coin , this.state.status);\n        let filtered = await tokenfilterlaunchpad(this.state.original , this.state.coin , this.state.status , this.state.type);\n\n        console.log(\"filtered\" , filtered);\n        this.setState({proxy : filtered})\n        if(filtered.length > 0){\n          const total = await getlaunchpaddatalimit(filtered,0,this.state.interval);\n            console.log(\"button \" ,filtered?.length , total );\n          // if(filtered?.length == 0){\n          //   this.setState({button : false})\n          // }\n          await this.sleep(1000)\n          this.setState({ totalSales: total });  \n          this.setState({ interval: 3 }); \n         this.hideLoader();\n        }\n        else {\n          this.setState({button : false})\n          this.setState({ totalSales: filtered });\n          this.hideLoader();\n        }\n      }\n      this.hideLoader();\n    }\n\n\n    render() {\n     \n\n      const location = this.props.location.pathname.split('/')[1];\n      const {totalSales,onGoingSales,upComingSales,search,isSearch,searchSale, accountInfo } = this.state\n    \n      \n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n      \n\n           <Header onUpdate={this.loadData.bind(this)} />\n        \n           <div className=\"whole_sec pb-5\">\n            <div className='flex_side_right'>\n            <Sidebar />\n           {/* ongoing_sec */}\n           <div className='right_side_sec'>\n           {/* <div className=\"text-white topBar mx-3\"> */}\n            {/* <div className='d-flex justify-content-between'>\n                  <small>Trending</small>\n                  <small>\n                    #1&nbsp;<span>Husy</span>\n                  </small>\n                  <small>\n                    #2&nbsp;<span>ORL</span>\n                  </small>\n                  <small>\n                    #3&nbsp;<span>UWC</span>\n                  </small>\n                  <small>\n                    #4&nbsp;<span>777</span>\n                  </small>\n                  <small>\n                    #5&nbsp;<span>IDXS</span>\n                  </small>\n                  <small>\n                    #6&nbsp;<span>COUGNU</span>\n                  </small>\n                  <small>\n                    #7&nbsp;<span>CRICLE</span>\n                  </small>\n                  <small>\n                    #8&nbsp;<span>KASA</span>\n                  </small>\n                  <small>\n                    #9&nbsp;<span>FIFAPP</span>\n                  </small>\n                  <small>\n                    #10&nbsp;<span>SOG</span>\n                  </small>\n                  <small>\n                    #11&nbsp;<span>COOSHA</span>\n                  </small>\n                  <small>\n                    #12&nbsp;<span>Honey</span>\n                  </small>\n                  </div> */}\n                  <Trendingslider/>\n                {/* </div> */}\n                <div className=\"right_side_spacing\">\n          \n               <div className='ongoing_sec proj_bg pb-5'>\n            <div className=\"container px-1\">\n                <div className='top_heqad_sec mt-5 mt-md-0'>\n                   \n                  <div className=\"row\">\n                      <div className=\"col-12 col-md-12 flex_cen_col mt-md-5 mb-md-4\">\n                        <p className=\"banner_subtitle form_subhead\">Private Sales</p>\n\n                       \n                        {/* <hr className='hr_yellow mt-5'/> */}\n                      </div>\n                    \n                  </div>\n                </div>\n            </div>\n           \n            <div className=\"inner_bg mt-4\">\n            <div className=\"container px-1\">\n            <Tab.Container  defaultActiveKey=\"first\">\n  <Row className=\"container-fluid w-100 mx-0 px-0\">\n    <Col lg={12} className=\"px-0\">\n      <Nav variant=\"pills\" className=\"nav_green\">\n        <Nav.Item>\n          <Nav.Link eventKey=\"first\" id=\"first\"  onClick={()=>{ this.nouser()\n          \n            \n        }}>\n          <p className='mb-0' \n         \n          >All Launchpads</p>\n\n          </Nav.Link>\n         </Nav.Item>\n         \n        <Nav.Item>\n          <Nav.Link eventKey=\"second\" id=\"second\"onClick={()=>{\n            this.nouser();\n            \n          }}>\n          <p className='mb-0'\n          \n          >Advanced Mode</p>\n   \n          </Nav.Link>\n                               \n        </Nav.Item>\n        \n        <Nav.Item>\n          <Nav.Link eventKey=\"third\" id=\"third\" onClick={()=>{\n          //  this.test()\n          this.yesuser();\n            \n          }}>\n          <p className='mb-0'  >My Contributions</p>\n   \n          </Nav.Link>\n        \n        </Nav.Item>\n        \n      </Nav>\n    </Col>\n    <hr class=\"hr_yellow mt-0 mt-5 mb-3\" />\n\n    <Col lg={12} className=\"img_center_lg px-0\">\n    <div className='container container_custom px-0'>\n      <Tab.Content>\n      <Tab.Pane eventKey=\"first\">\n        <div className='row_div'>\n                <div>\n                  <div className='row'>\n                    <div className='col-12 col-md-6 col-xl-8 mb-2 mb-md-0'>\n                    <p className='label_input invisible'>Search</p>\n\n                    <input className=\"form-control searc_style_2\" value={search} type=\"text\" onChange={(e)=> { this.setState({ search: e.target.value }); this.handleChange(e); }} onKeyDown={(e)=>this.handleChange(e)}  placeholder=\"Enter token name or token symbol\" aria-label=\"Search\" />\n\n                    </div>\n                    <div className='col-6 col-md-3 col-xl-2'>\n                    <p className='label_input'>Filter By</p>\n                    <Dropdown className='dropdown_normal' >\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" >\n                  {this.state.filterdata}\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu className='dropdown_normal_menu' key = {\"up\"}>\n                  <Dropdown.Item ><p onClick={(e)=>this.handlefilter(\"All Status\")}>All Status</p></Dropdown.Item>\n                      {/* <Dropdown.Item>KYC</Dropdown.Item> */}\n                      <Dropdown.Item key ={\"up\"}><p onClick={(e)=>this.handlefilter(\"Upcoming\")}>Upcoming</p></Dropdown.Item>\n                      <Dropdown.Item><p onClick={(e)=>this.handlefilter(\"Live\")}>Live</p></Dropdown.Item>\n                      {/* <Dropdown.Item>Filled</Dropdown.Item> */}\n                      <Dropdown.Item><p onClick={(e)=>this.handlefilter(\"Ended\")}>Ended</p></Dropdown.Item>\n                      {/* <Dropdown.Item>Cancelled</Dropdown.Item> */}\n                  </Dropdown.Menu>\n                </Dropdown>                     \n                    </div>\n                    <div className='col-6 col-md-3 col-xl-2'>\n                    <p className='label_input'>Sort By</p>\n                    <Dropdown className='dropdown_normal'>\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic-1\">\n                  {this.state.sortdata}\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu className='dropdown_normal_menu'>\n                  <Dropdown.Item><p onClick={(e)=>this.handlesort(\"No Filter\")}>No Filter</p></Dropdown.Item>\n                      {/* <Dropdown.Item>Hard Cap</Dropdown.Item>\n                      <Dropdown.Item>Soft Cap</Dropdown.Item>\n                      <Dropdown.Item>LP Percent</Dropdown.Item> */}\n                      <Dropdown.Item><p onClick={(e)=>this.handlesort(\"Start Time\")}>Start Time</p></Dropdown.Item>\n                      <Dropdown.Item><p onClick={(e)=>this.handlesort(\"End Time\")}>End Time</p></Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>  \n                  </div>\n                  </div>\n                \n                </div>\n              </div>\n              {true?\n              <>\n                  <div className='row mt-5'>\n\n                  { !isSearch ? \n            (totalSales && totalSales.map((index)=><>\n            \n            <LaunchpadBuycard saleData={index} user = {true} connect={\"string\"} />\n            </>\n            \n            )):\n            (searchSale && searchSale.map((index)=><>\n             \n             <LaunchpadBuycard saleData={index} user = {true} connect={\"string\"} />\n            </>\n           \n            ))\n            }\n\n         \n{/* <LaunchpadBuycard connect={\"string\"} /> */}\n\n</div>\n<div className='text-center mt-3'>\n{ isSearch ?\n              <>\n            {searchSale && searchSale.length < this.state.searchProxy.length ? \n            \n            <button className=\"get-started-btn\" onClick={this.loadSearchMore.bind(this)} id=\"load_more_btn\">{this.state.isLoading ? 'Loading...' : 'View More Pools' }</button>\n            :<></>\n            }\n            </> :  <>\n            {totalSales && totalSales.length < this.state.proxy.length ? \n            <button className=\"get-started-btn\" onClick={this.loadMore.bind(this)} id=\"load_more_btn\">{this.state.isLoading ? 'Loading...' : 'View More Pools' }</button>\n            :<></>\n            }\n            </>\n            }\n\n\n\n\n\n\n  {/* { true ?\n  <>\n{true ? \n( !this.state.isLoading ?\n<button className=\"get-started-btn\" onClick={this.loadSearchMore.bind(this)} id=\"load_more_btn\">{this.state.isLoading ? 'Loading...' : 'View More Pools' }</button>: <img src={loader}  id=\"loader_div_sm\" />)\n:<></>\n}\n</> :  <>\n{false ? \n( !this.state.isLoading ?\n<button className=\"get-started-btn\" onClick={this.loadMore.bind(this)} id=\"load_more_btn\">{this.state.isLoading ? 'Loading...' : 'View More Pools' }</button>: <img src={loader}  id=\"loader_div_sm\" />)\n:<></>\n}\n</>\n} */}\n\n</div>\n              </>:\n              <div className='row mt-5'>\n              <div className='col-12'>\n                <p className='no_data_txt'>No Data</p>\n              </div>\n            </div>\n              }\n        \n        </Tab.Pane>\n        <Tab.Pane eventKey=\"second\">\n        <div class=\"table-responsive mt-3\">\n  <table className=\"table table_poricat_list\" id = \"myTable\">\n    <tr>\n    <th><InputGroup className=\"mb-3 input_group search_bar\">\n                      <Form.Control\n                        placeholder=\"Search\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                        value={this.state.search}\n                        onChange={(e)=> { this.setState({ search: e.target.value }); this.handleChange(e); }} \n                        onKeyDown={(e)=>this.handleChange(e)}\n                      />\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group\"\n                      >\n                        <i class=\"fas fa-search\"></i>\n                      </InputGroup.Text>\n                    </InputGroup></th>\n\n                    <th><InputGroup className=\"mb-3 input_group input_group_prepend\">\n                      <Form.Control\n                        value={\"Type\"}\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      >\n                        <i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\n                      </InputGroup.Text>\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      >\n                        <Dropdown className='filter_dropdown '>\n                        <Dropdown.Toggle id=\"dropdown-basic\" className='table_filter_icon'>\n                        <i class=\"fas fa-filter\" onClick={()=>{this.setState({closeHcmenu:false});this.closeAllMenusHc()}}></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className={this.state.closeHcmenu?\"table_dropdown_menu filter_menu d-none\":\"table_dropdown_menu filter_menu d-block\"}>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeHcmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" \n  checked = {this.state.type.includes(\"Launchpad\") ? true : false}\n  onChange={()=>this.handletype(\"Launchpad\")}\n  />\n  <label className=\"custom-control-label\" for=\"customCheck1\">Launchpad</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeHcmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck2\" \n    checked = {this.state.type.includes(\"Fairlaunch\") ? true : false}\n    onChange={()=>this.handletype(\"Fairlaunch\")}\n  />\n  <label className=\"custom-control-label\" for=\"customCheck2\">Fairlaunch</label>\n</div></Dropdown.Item>\n\n\n        {/* <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeHcmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck3\" />\n  <label className=\"custom-control-label\" for=\"customCheck3\">Action</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeHcmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck4\" />\n  <label className=\"custom-control-label\" for=\"customCheck4\">Subscription</label>\n</div></Dropdown.Item> */}\n<Dropdown.Divider />\n<Dropdown.Item href=\"javascript:void(0)\">\n  <div className='dropdown_buttons d-flex justify-content-between'>\n  <button className=\"get-started-btn mr-2\" onClick={()=>{this.setState({type : []})}}>Reset</button>\n  <button className=\"get-started-btn\" id=\"ok_hc\" onClick={()=>{this.setState({closeHcmenu:true});\n  this.handleadvancefilter()\n}}>OK</button>\n  </div>\n</Dropdown.Item>\n\n      </Dropdown.Menu>\n                        </Dropdown>\n                      </InputGroup.Text>\n                    </InputGroup></th>\n      {/* <th><InputGroup className=\"mb-3 input_group input_group_prepend\"> */}\n                      {/* <Form.Control\n                        value=\"HC\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      >\n                        <i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\n                      </InputGroup.Text> */}\n                      {/* <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      > */}\n                        {/* <Dropdown className='filter_dropdown '>\n                        <Dropdown.Toggle id=\"dropdown-basic\" className='table_filter_icon'>\n                        <i class=\"fas fa-filter\" onClick={()=>{this.setState({closeHcmenu:false})}}></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className={this.state.closeHcmenu?\"table_dropdown_menu filter_menu d-none\":\"table_dropdown_menu filter_menu d-block\"}>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeHcmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n  <label className=\"custom-control-label\" for=\"customCheck1\">Presale</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeHcmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck2\" />\n  <label className=\"custom-control-label\" for=\"customCheck2\">Fairlaunch</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeHcmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck3\" />\n  <label className=\"custom-control-label\" for=\"customCheck3\">Action</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeHcmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck4\" />\n  <label className=\"custom-control-label\" for=\"customCheck4\">Subscription</label>\n</div></Dropdown.Item>\n<Dropdown.Divider />\n<Dropdown.Item href=\"javascript:void(0)\">\n  <div className='dropdown_buttons d-flex justify-content-between'>\n  <button className=\"get-started-btn mr-2\">Reset</button>\n  <button className=\"get-started-btn\" id=\"ok_hc\" onClick={()=>{this.setState({closeHcmenu:true})}}>OK</button>\n  </div>\n</Dropdown.Item>\n\n      </Dropdown.Menu>\n                        </Dropdown> */}\n                      {/* </InputGroup.Text>\n                    </InputGroup></th> */}\n                    <th><InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"Coin\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                        readOnly\n                      />\n                       <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      >\n                        <Dropdown className='filter_dropdown'>\n                        <Dropdown.Toggle id=\"dropdown-basic\" className='table_filter_icon'>\n                        <i class=\"fas fa-filter\" onClick={()=>{this.setState({closeCoinmenu:false});this.closeAllMenusCoin()}}></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className={this.state.closeCoinmenu?\"table_dropdown_menu filter_menu d-none\":\"table_dropdown_menu filter_menu d-block\"}>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" \n    checked = {this.state.coin.includes(\"BNB\") ? true : false}\n  id=\"customCheck5\" onChange={()=>this.handlecoin(\"BNB\")}/>\n  <label className=\"custom-control-label\" for=\"customCheck5\" >BNB</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" onChange={()=>this.handlecoin(\"BUSD\")} \n  checked = {this.state.coin.includes(\"BUSD\") ? true : false}\n  className=\"custom-control-input\" id=\"customCheck6\" />\n  <label className=\"custom-control-label\" for=\"customCheck6\">BUSD</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" \n  checked = {this.state.coin.includes(\"USDT\") ? true : false}\n  onChange={()=>this.handlecoin(\"USDT\")} id=\"customCheck7\" />\n  <label className=\"custom-control-label\" for=\"customCheck7\">USDT</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" \n    checked = {this.state.coin.includes(\"USDC\") ? true : false}\n  onChange={()=>this.handlecoin(\"USDC\")}  id=\"customCheck8\" />\n  <label className=\"custom-control-label\" for=\"customCheck8\">USDC</label>\n</div></Dropdown.Item>\n        {/* <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" onChange={()=>this.handlecoin(\"ETH\")} id=\"customCheck9\" />\n  <label className=\"custom-control-label\" for=\"customCheck9\">ETH</label>\n</div></Dropdown.Item> */}\n        {/* <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck10\" />\n  <label className=\"custom-control-label\" for=\"customCheck10\">MATIC</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck11\" />\n  <label className=\"custom-control-label\" for=\"customCheck11\">AVAX</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck12\" />\n  <label className=\"custom-control-label\" for=\"customCheck12\">CRO</label>\n</div></Dropdown.Item> */}\n<Dropdown.Divider />\n<Dropdown.Item href=\"javascript:viod(0)\">\n  <div className='dropdown_buttons d-flex justify-content-between'>\n  <button className=\"get-started-btn mr-2\" onClick={()=>this.setState({coin : []})}>Reset</button>\n  <button className=\"get-started-btn\" onClick={()=>{this.setState({closeCoinmenu:true});\n  this.handleadvancefilter();\n}}>OK</button>\n  </div>\n</Dropdown.Item>\n      </Dropdown.Menu>\n                        </Dropdown>\n                      </InputGroup.Text>\n                    </InputGroup>\n                    </th>\n                    {/* <th><InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"InitialCap\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group\"\n                      >\n                        <i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\n                      </InputGroup.Text>\n                    </InputGroup></th> */}\n                    {/* <th><InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"KYC/Audit\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                       <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      >\n                        <Dropdown className='filter_dropdown'>\n                        <Dropdown.Toggle id=\"dropdown-basic\" className='table_filter_icon'>\n                        <i class=\"fas fa-filter\" onClick={()=>{this.setState({closeKycmenu:false})}}></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className={this.state.closeKycmenu?\"table_dropdown_menu filter_menu d-none\":\"table_dropdown_menu filter_menu d-block\"}>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeKycmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck13\" />\n  <label className=\"custom-control-label\" for=\"customCheck13\">KYC</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeKycmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck14\" />\n  <label className=\"custom-control-label\" for=\"customCheck14\">Audit</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeKycmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck15\" />\n  <label className=\"custom-control-label\" for=\"customCheck15\">Safu</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeKycmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck16\" />\n  <label className=\"custom-control-label\" for=\"customCheck16\">Doxx</label>\n</div></Dropdown.Item>\n<Dropdown.Divider />\n<Dropdown.Item href=\"javascript:void(0)\">\n  <div className='dropdown_buttons d-flex justify-content-between'>\n  <button className=\"get-started-btn mr-2\">Reset</button>\n  <button className=\"get-started-btn\" onClick={()=>{this.setState({closeKycmenu:true})}}>OK</button>\n  </div>\n</Dropdown.Item>\n      </Dropdown.Menu>\n                        </Dropdown>\n                      </InputGroup.Text>\n                    </InputGroup>\n                    </th> */}\n                    <th><InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"Status\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                        readOnly\n                      />\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group\"\n                      >\n                        <i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\n                      </InputGroup.Text>\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      >\n                        <Dropdown className='filter_dropdown'>\n                        <Dropdown.Toggle id=\"dropdown-basic\" className='table_filter_icon'>\n                        <i class=\"fas fa-filter\" onClick={()=>{this.setState({closeStatusmenu:false});this.closeAllMenusStatus()}}></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu  className={this.state.closeStatusmenu?\"table_dropdown_menu filter_menu d-none\":\"table_dropdown_menu filter_menu d-block\"}>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeStatusmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" \n    checked = {this.state.status.includes(\"Upcoming\") ? true : false} \n  onChange={()=>this.handlestatus(\"Upcoming\")} id=\"customCheck17\" />\n  <label className=\"custom-control-label\" for=\"customCheck17\">Upcoming</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeStatusmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck18\" \n  checked = {this.state.status.includes(\"Live\") ? true : false} \n  onChange={()=>this.handlestatus(\"Live\")} />\n  <label className=\"custom-control-label\" for=\"customCheck18\">Live</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeStatusmenu:false})}}>\n  <input type=\"checkbox\" checked = {this.state.status.includes(\"Ended\") ? true : false} \n  className=\"custom-control-input\" id=\"customCheck19\" onChange={()=>this.handlestatus(\"Ended\")}/>\n  <label className=\"custom-control-label\" for=\"customCheck19\">Ended</label>\n</div></Dropdown.Item>\n<Dropdown.Divider />\n<Dropdown.Item href=\"javascript:void(0)\">\n  <div className='dropdown_buttons d-flex justify-content-between'>\n  <button className=\"get-started-btn mr-2\" onClick={()=>this.setState({status : []})}>Reset</button>\n  <button className=\"get-started-btn\" onClick={()=>{this.setState({closeStatusmenu:true});\n  this.handleadvancefilter();\n}}>OK</button>\n  </div>\n</Dropdown.Item>\n      </Dropdown.Menu>\n                        </Dropdown>\n                      </InputGroup.Text>\n                    </InputGroup></th>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n\n                    {/* <th><InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"Links\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                    </InputGroup></th>\n                    <th><InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"TGOnline\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group\"\n                      >\n                        <i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\n                      </InputGroup.Text>\n                    </InputGroup></th>\n                    <th><InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"Countdown\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group\"\n                      >\n                        <i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\n                      </InputGroup.Text>\n                    </InputGroup></th> */}\n    </tr>\n\n    \n\n\n         { !isSearch ? \n            (totalSales && totalSales.map((data)=><>\n            {/* {console.log(\"index\" , index)} */}\n            <tr>\n      <td><span className=\"d-flex align-items-center\">\n\n      <div className=\"relative_token_div  mr-2\">\n        <img className=\"token_image_sm \" src={data?.logo} />\n        </div>\n           {data?.name}\n        </span></td>\n        <td>{data?.LaunchpadType? \"Launchpad\" : \"Fairlaunch\"}</td>\n        <td>{data?.coin}</td>\n        <td>{data?.symbol}</td>\n        <td>{data?.softCap/10**18}</td>\n        <td>{data?.hardCap/10**18}</td>\n        {/* <td><span className=\"close_icons\">\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover active_times\"></i>\n        </span></td> */}\n\n        <td>\n          \n         {data?.LaunchpadType ? <><ProgressBar now={ parseInt(parseInt(data?.earnedCap)/parseInt(data?.hardCap) * 100)} className='yellow_bar mt-3'/>\n        <div className=\"d-flex align-items-center justify-content-between\">\n        <span className='desc_grey_txt'>{ parseInt(parseInt(data?.earnedCap)/parseInt(data?.hardCap) * 100)} % </span>\n               <span className='desc_grey_txt'>{((data?.earnedCap)/10**18).toFixed(3)}/{((data?.hardCap)/10**18).toFixed(2)} </span>\n       </div></>\n        :\n        <><ProgressBar now={data && parseInt(parseInt(data?.earnedCap)/parseInt(data?.softCap) * 100)} className='yellow_bar mt-3'/>\n <div className=\"d-flex align-items-center justify-content-between\">\n <span className='desc_grey_txt'>{data && parseInt(parseInt(data.earnedCap)/parseInt(data.softCap) * 100)} %  </span>\n        <span className='desc_grey_txt'>{data && ((data.earnedCap)/10**18).toFixed(3)} / {(parseInt(data?.softCap)/10**18).toFixed(2)} {this.state.buyToken}  </span>\n        </div></>\n       \n       }\n        </td>\n        {/* <td><ProgressBar now={data?.earnedCap/10 ** data?.decimals} label={data?.hardCap} className='yellow_bar'/></td> */}\n        <td><span>\n          <a href={data?.social[1]} target = \"_blank\"><i class=\"fas fa-globe green_icons\"></i></a>\n          <a href={data?.social[1]} target = \"_blank\"><i class=\"fab fa-skype green_icons\"></i></a>\n          <a href={data?.social[5]} target = \"_blank\"><i class=\"fab fa-telegram-plane green_icons\"></i></a>\n        </span></td>\n        <td className=\"table_time\">{new Date(data?.startTime*1000)?.getDate()+\"/\"+new Date(data?.startTime*1000)?.getMonth()+\"/\"+\n        new Date(data?.startTime*1000)?.getFullYear()+\" \"+new Date(data?.startTime*1000)?.getHours()+\":\"+\n        new Date(data?.startTime*1000)?.getMinutes()+\":\"+new Date(data?.startTime*1000)?.getSeconds()}</td>\n        <td className=\"table_time\">{new Date(data?.endTime*1000)?.getDate()+\"/\"+new Date(data?.endTime*1000)?.getMonth()+\"/\"+\n        new Date(data?.endTime*1000)?.getFullYear()+\" \"+new Date(data?.endTime*1000)?.getHours()+\":\"+\n        new Date(data?.endTime*1000)?.getMinutes()+\":\"+new Date(data?.endTime*1000)?.getSeconds()}</td>\n        <td><a className=\"link_text\" href={`/privatesaledetail/${data.saleAddress}`}>View</a></td>\n    </tr>\n            </>\n            \n            )):\n            (searchSale && searchSale.map((data)=><>\n             {/* {console.log(\"index\" , index)} */}\n             <tr>\n      <td><span className=\"d-flex align-items-center\">\n\n      <div className=\"relative_token_div  mr-2\">\n        <img className=\"token_image_sm \" src={data?.logo} />\n        </div>\n           {data?.name}\n        </span></td>\n        <td>{data?.LaunchpadType? \"Launchpad\" : \"Fairlaunch\"}</td>\n        <td>{data?.coin}</td>\n        <td>{data?.symbol}</td>\n        <td>{data?.softCap/10**18}</td>\n        <td>{data?.hardCap/10**18}</td>\n        {/* <td><span className=\"close_icons\">\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover active_times\"></i>\n        </span></td> */}\n\n        <td><ProgressBar now={ parseInt(parseInt(data?.earnedCap)/parseInt(data?.hardCap) * 100)} className='yellow_bar mt-3'/>\n        <div className=\"d-flex align-items-center justify-content-between\">\n        <span className='desc_grey_txt'>{ parseInt(parseInt(data?.earnedCap)/parseInt(data?.hardCap) * 100)} % </span>\n               <span className='desc_grey_txt'>{((data?.earnedCap)/10**18).toFixed(3)}/{((data?.hardCap)/10**18).toFixed(2)} </span>\n      </div>\n        </td>\n        {/* <td><ProgressBar now={data?.earnedCap/10 ** data?.decimals} label={data?.hardCap} className='yellow_bar'/></td> */}\n        <td><span>\n          <a href={data?.social[1]} target = \"_blank\"><i class=\"fas fa-globe green_icons\"></i></a>\n          <a href={data?.social[1]} target = \"_blank\"><i class=\"fab fa-skype green_icons\"></i></a>\n          <a href={data?.social[5]} target = \"_blank\"><i class=\"fab fa-telegram-plane green_icons\"></i></a>\n        </span></td>\n        <td className=\"table_time\">{new Date(data?.startTime*1000)?.getDate()+\"/\"+new Date(data?.startTime*1000)?.getMonth()+\"/\"+\n        new Date(data?.startTime*1000)?.getFullYear()+\" \"+new Date(data?.startTime*1000)?.getHours()+\":\"+\n        new Date(data?.startTime*1000)?.getMinutes()+\":\"+new Date(data?.startTime*1000)?.getSeconds()}</td>\n        <td className=\"table_time\">{new Date(data?.endTime*1000)?.getDate()+\"/\"+new Date(data?.endTime*1000)?.getMonth()+\"/\"+\n        new Date(data?.endTime*1000)?.getFullYear()+\" \"+new Date(data?.endTime*1000)?.getHours()+\":\"+\n        new Date(data?.endTime*1000)?.getMinutes()+\":\"+new Date(data?.endTime*1000)?.getSeconds()}</td>\n        <td><a className=\"link_text\">View</a></td>\n    </tr>\n            </>\n           \n            ))\n            }\n   \n\n\n    {/* <tr>\n      <td><span className=\"d-flex align-items-center\">\n      <div className=\"relative_token_div  mr-2\">\n        <img className=\"token_image_sm \" src={favicon} />\n        </div> 5IREToken\n        </span></td>\n        <td>Fairlaunch</td>\n        <td>BNB</td>\n        <td>$580</td>\n        <td><span className=\"close_icons\">\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover active_times\"></i>\n        </span></td>\n        <td><ProgressBar now={20} label={20} className='yellow_bar'/></td>\n        <td><span>\n        <a href=\"#\"><i class=\"fas fa-globe green_icons\"></i></a>\n          <a href=\"#\"><i class=\"fab fa-skype green_icons\"></i></a>\n          <a href=\"#\"><i class=\"fab fa-telegram-plane green_icons\"></i></a>\n        </span></td>\n        <td>11/100</td>\n        <td className=\"table_time\">03:05:42:01</td>\n        <td><Link className=\"link_text\" to='/launchpaddetail'>View</Link></td>\n    </tr>\n    <tr>\n      <td><span className=\"d-flex align-items-center\">\n      <div className=\"relative_token_div  mr-2\">\n        <img className=\"token_image_sm \" src={favicon} />\n        </div> 5IREToken\n        </span></td>\n        <td>Fairlaunch</td>\n        <td>BNB</td>\n        <td>$580</td>\n        <td><span className=\"close_icons\">\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover active_times\"></i>\n        </span></td>\n        <td><ProgressBar now={20} label={20} className='yellow_bar'/></td>\n        <td><span>\n        <a href=\"#\"><i class=\"fas fa-globe green_icons\"></i></a>\n          <a href=\"#\"><i class=\"fab fa-skype green_icons\"></i></a>\n          <a href=\"#\"><i class=\"fab fa-telegram-plane green_icons\"></i></a>\n        </span></td>\n        <td>11/100</td>\n        <td className=\"table_time\">03:05:42:01</td>\n        <td><Link className=\"link_text\" to='/launchpaddetail'>View</Link></td>\n    </tr> */}\n  </table>\n</div>\n<div className='text-center mt-5'>\n{ isSearch ?\n              <>\n            {searchSale && searchSale.length < this.state.searchProxy.length ? \n            \n            <button className=\"get-started-btn\" onClick={this.loadSearchMore.bind(this)} id=\"load_more_btn\">{this.state.isLoading ? 'Loading...' : 'View More Pools' }</button>\n            :<></>\n            }\n            </> :  <>\n            {totalSales && totalSales.length < this.state.proxy.length ? \n            <button className=\"get-started-btn\" onClick={this.loadMore.bind(this)} id=\"load_more_btn\">{this.state.isLoading ? 'Loading...' : 'View More Pools' }</button>\n            :<></>\n            }\n            </>\n            }\n\n\n\n\n{/* { isSearch ?\n              <>\n            {searchSale && searchSale.length < this.state.searchProxy.length ? \n            ( !this.state.isLoading ?\n            <button className=\"get-started-btn\" onClick={this.loadSearchMore.bind(this)} id=\"load_more_btn\"><i className=\"fa fa-angle-double-down mr-2\" aria-hidden=\"true\"></i>{this.state.isLoading ? 'Loading...' : 'Load More' }</button>: <img src={loader}  id=\"loader_div_sm\" />)\n            :<></>\n            }\n            </> :  <>\n            {totalSales && totalSales.length < this.state.proxy.length ? \n            ( !this.state.isLoading ?\n            <button className=\"get-started-btn\" onClick={this.loadMore.bind(this)} id=\"load_more_btn\"><i className=\"fa fa-angle-double-down mr-2\" aria-hidden=\"true\"></i>{this.state.isLoading ? 'Loading...' : 'Load More' }</button>: <img src={loader}  id=\"loader_div_sm\" />)\n            :<></>\n            }\n            </>\n            } */}\n      </div>  \n        </Tab.Pane>\n        <Tab.Pane eventKey=\"third\">\n        {/* <div className='row_div'>\n                <div>\n                  <div className='row'>\n                    <div className='col-12 col-md-6 col-xl-8 mb-2 mb-md-0'>\n                    <p className='label_input invisible'>Search</p>\n\n                    <input className=\"form-control searc_style_2\" \n                    value={search} type=\"text\" \n                    onChange={(e)=> { this.setState({ search: e.target.value }); this.handleChange(e); }} \n                    onKeyDown={(e)=>this.handleChange(e)}  placeholder=\"Enter token name or token symbol\" \n                    aria-label=\"Search\" />\n\n                    </div>\n                    <div className='col-6 col-md-3 col-xl-2'>\n                    <p className='label_input'>Filter By</p>\n                    <Dropdown className='dropdown_normal'>\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                  All Status\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu className='dropdown_normal_menu'>\n                  <Dropdown.Item>All Status</Dropdown.Item>\n                      <Dropdown.Item>KYC</Dropdown.Item>\n                      <Dropdown.Item>Upcoming</Dropdown.Item>\n                      <Dropdown.Item>Inprogress</Dropdown.Item>\n                      <Dropdown.Item>Filled</Dropdown.Item>\n                      <Dropdown.Item>Ended</Dropdown.Item>\n                      <Dropdown.Item>Cancelled</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>                     \n                    </div>\n                    <div className='col-6 col-md-3 col-xl-2'>\n                    <p className='label_input'>Sort By</p>\n                    <Dropdown className='dropdown_normal'>\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic-1\">\n                  No Filter\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu className='dropdown_normal_menu'>\n                  <Dropdown.Item>No Filter</Dropdown.Item>\n                      <Dropdown.Item>Hard Cap</Dropdown.Item>\n                      <Dropdown.Item>Soft Cap</Dropdown.Item>\n                      <Dropdown.Item>LP Percent</Dropdown.Item>\n                      <Dropdown.Item>Start Time</Dropdown.Item>\n                      <Dropdown.Item>End Time</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>  \n                  </div>\n                  </div>\n                \n                </div>\n              </div> */}\n              <div className='row_div'>\n                <div>\n                  <div className='row'>\n                    <div className='col-12 col-md-6 col-xl-8 mb-2 mb-md-0'>\n                    <p className='label_input invisible'>Search</p>\n\n                    <input className=\"form-control searc_style_2\" value={search} type=\"text\" onChange={(e)=> { this.setState({ search: e.target.value }); this.handleChange(e); }} onKeyDown={(e)=>this.handleChange(e)}  placeholder=\"Enter token name or token symbol\" aria-label=\"Search\" />\n\n                    </div>\n                    <div className='col-6 col-md-3 col-xl-2'>\n                    <p className='label_input'>Filter By</p>\n                    <Dropdown className='dropdown_normal' >\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" >\n                  {this.state.filterdata}\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu className='dropdown_normal_menu' key = {\"up\"}>\n                  <Dropdown.Item ><p onClick={(e)=>this.handlefilter(\"All Status\")}>All Status</p></Dropdown.Item>\n                      {/* <Dropdown.Item>KYC</Dropdown.Item> */}\n                      <Dropdown.Item key ={\"up\"}><p onClick={(e)=>this.handlefilter(\"Upcoming\")}>Upcoming</p></Dropdown.Item>\n                      <Dropdown.Item><p onClick={(e)=>this.handlefilter(\"Live\")}>Live</p></Dropdown.Item>\n                      {/* <Dropdown.Item>Filled</Dropdown.Item> */}\n                      <Dropdown.Item><p onClick={(e)=>this.handlefilter(\"Ended\")}>Ended</p></Dropdown.Item>\n                      {/* <Dropdown.Item>Cancelled</Dropdown.Item> */}\n                  </Dropdown.Menu>\n                </Dropdown>                     \n                    </div>\n                    <div className='col-6 col-md-3 col-xl-2'>\n                    <p className='label_input'>Sort By</p>\n                    <Dropdown className='dropdown_normal'>\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic-1\">\n                 {this.state.sortdata}\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu className='dropdown_normal_menu'>\n                  <Dropdown.Item><p onClick={(e)=>this.handlesort(\"No Filter\")}>No Filter</p></Dropdown.Item>\n                      {/* <Dropdown.Item>Hard Cap</Dropdown.Item>\n                      <Dropdown.Item>Soft Cap</Dropdown.Item>\n                      <Dropdown.Item>LP Percent</Dropdown.Item> */}\n                      <Dropdown.Item><p onClick={(e)=>this.handlesort(\"Start Time\")}>Start Time</p></Dropdown.Item>\n                      <Dropdown.Item><p onClick={(e)=>this.handlesort(\"End Time\")}>End Time</p></Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>  \n                  </div>\n                  </div>\n                \n                </div>\n              </div>\n              {true?\n              <>\n                  <div className='row mt-5'>\n\n                  { !isSearch ? \n            (totalSales && totalSales.map((index)=><>\n            \n            <LaunchpadBuycard saleData={index} user = {false} connect={\"string\"} />\n            </>\n            \n            )):\n            (searchSale && searchSale.map((index)=><>\n            \n             <LaunchpadBuycard saleData={index} user = {false} connect={\"string\"} />\n            </>\n           \n            ))\n            }\n\n         \n          {/* <LaunchpadBuycard saleData={index} connect={\"string\"} /> */}\n\n</div>\n<div className='text-center mt-3'>\n  {/* { true ?\n  <>\n{true ? \n( !this.state.isLoading ?\n<button className=\"get-started-btn\" onClick={this.loadSearchMore.bind(this)} id=\"load_more_btn\">{this.state.isLoading ? 'Loading...' : 'View More Pools' }</button>: <img src={loader}  id=\"loader_div_sm\" />)\n:<></>\n}\n</> :  <>\n{false ? \n( !this.state.isLoading ?\n<button className=\"get-started-btn\" onClick={this.loadMore.bind(this)} id=\"load_more_btn\">{this.state.isLoading ? 'Loading...' : 'View More Pools' }</button>: <img src={loader}  id=\"loader_div_sm\" />)\n:<></>\n}\n</>\n} */}\n\n\n\n{ isSearch ?\n              <>\n            {searchSale && searchSale.length < this.state.searchProxy.length ? \n            \n            <button className=\"get-started-btn\" onClick={this.loadSearchMore.bind(this)} id=\"load_more_btn\">{this.state.isLoading ? 'Loading...' : 'View More Pools' }</button>\n            :<></>\n            }\n            </> :  <>\n            {totalSales && totalSales.length < this.state.proxy.length ? \n            <button className=\"get-started-btn\" onClick={this.loadMoremycontribution.bind(this)} id=\"load_more_btn\">{this.state.isLoading ? 'Loading...' : 'View More Pools' }</button>\n            :<></>\n            }\n            </>\n            }\n\n</div>\n              </>:\n              <div className='row mt-5'>\n              <div className='col-12'>\n                <p className='no_data_txt'>No Data</p>\n              </div>\n            </div>\n              }\n        </Tab.Pane> \n       \n      </Tab.Content>\n      </div>\n    </Col>\n  </Row>\n</Tab.Container>\n\n              \n                </div>\n            </div>\n            </div>\n            {/* end ongoing_sec */}\n\n              {/* upcoming_sec */}\n              {/* <div className='upcoming_sec mt-5'>\n            <div className=\"container container_custom\">\n                <div  className='top_heqad_sec'>\n                <div className='text-right'>\n                <input className=\"form-control searc_style_1\" type=\"text\" placeholder=\"&#xF002; Project Name\" aria-label=\"Search\" />\n                </div>\n                  <div className=\"row py-3\">\n                      <div className=\"col-12 col-md-12 flex_cen_col\">\n                        <p className=\"banner_title text-center\">Upcoming IDOs</p>\n                        <hr className='hr_yellow mt-5'/>\n                      </div>\n                    \n                  </div>\n                </div>\n            </div>\n           \n            <div className=\"inner_bg mt-4\">\n            <div className=\"container container_custom\">\n\n\n            <div className='row  justify-content-between'>\n             \n            <Buycard connect={\"string\"} />\n            <Buycard connect={\"string\"} />\n            </div>\n            <div className='text-center mt-3'>\n\n            <button className=\"get-started-btn\" id=\"load_more_btn_1\">Load More</button>\n            <img src={loader}  id=\"loader_div_sm_1\" className='d-none'/>\n            </div>\n                </div>\n            </div>\n            </div> */}\n            {/* end upcoming_sec */}\n\n            <Container className='pb-4 px-0'>\n                 \n                  <center>\n                    <small className=\"mt-0 bottom_text\">\n                      Disclaimer: The information provided shall not in any way\n                      constitute a recomendation as to whether you should invest\n                      in any product discussed. We accept no liability for any\n                      loss occasioned to any person acting or refraining from\n                      action as a result of any material provided or published.\n                    </small>\n                  </center>\n                </Container>\n            </div>\n            </div>\n            </div>\n            </div>\n            {/* <Footer /> */}\n        </div>\n        </div>\n        )\n    }\n}\n\nexport default Privatesalelist","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Lock/CreateLock.js",["713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\n\nimport Header from '../Header';\nimport Sidebar from '../Sidebar';\nimport Trendingslider from '../trendingslider';\n\n\nimport { getAccount } from '../../hooks/useAccount'\nimport {Card} from 'react-bootstrap'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport isEmpty from \"is-empty\";\nimport toast, { Toaster } from 'react-hot-toast';\n\n\n\nimport Web3 from \"web3\";\n\nimport {  Container, FormControl, InputGroup } from 'react-bootstrap';\nimport '../../css/styles.css';\n\nimport favicon from \"../../images/favicon.png\"\nimport { Link } from 'react-router-dom';\nimport { validtokenlock } from '../../hooks/kycvalidation';\nimport { Approvetoken, Checkaddress, Createlock, CreatelockWithout, Gettokenbalance } from '../../hooks/useContract';\nimport { iconTheme, position, style } from '../../hooks/useToast';\n\nclass CreateLock extends Component {\n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.05;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n\n\n\n  }\n  \n    componentDidMount()\n    {\n      // this.showLoader();\n      document.getElementById(\"lock_parent\").classList.add(\"active\");\n      this.hideLoader();\n    //    this.setState({ accountInfo: getAccount() });\n    }\n    mindate(){\n      let date = new Date();\n      date.setDate(date.getDate() + 30)\n      this.setState({mindates : date})\n    }\n\n    filterPassedTime = (time) => {\n      const currentDate = new Date();\n      const selectedDate = new Date(time);\n  \n      return currentDate.getTime() < selectedDate.getTime();\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {          \n            accountInfo: '',\n            startDate: '',\n            anotherowner : false,\n            tokenaddress : \"\",\n            anotherowneraddress : \"\",\n            amount : \"\",\n            locktime : \"\",\n            tgedate : \"\",\n            tgepercent : \"\",\n            cycle : 0,\n            cyclepercent : 0,\n            vesting : false,\n            tokeninfo : {},\n            errors : {},\n            lockbutton : false,\n            mindates : \"\"\n\n        };\n    }\n\n\n    handlelock = async()=>{\n      let payload = {};\n      payload.tokenaddress = this.state.tokenaddress;\n      payload.amount = this.state.amount;\n      payload.locktime = this.state.locktime.toString();\n      payload.anotherowneraddress = this.state.anotherowneraddress;\n      payload.anotherowner = this.state.anotherowner;\n      payload.vesting = this.state.vesting;\n      payload.cycle = this.state.cycle;\n      payload.cyclepercent = this.state.cyclepercent;\n        \n      console.log('payload' , payload);\n      const validate = await validtokenlock(payload);\n      if(validate.isValid){\n        const lock = await Createlock(payload , this.state.tokeninfo.decimals)\n        console.log(\"lock \" , lock);\n        this.props.history.push({\n          pathname : \"/lockinfo\",\n          state : lock\n        });\n      }\n      else{\n        this.setState({errors : validate.errors})\n      }\n    }\n\n    handleapprove = async()=>{\n      let payload = {};\n      payload.tokenaddress = this.state.tokenaddress;\n      payload.amount = this.state.amount;\n      if(this.state.anotherowner){\n        payload.owner = this.state.anotherowneraddress;\n      }\n      if(this.state.vesting){\n        payload.tgedate =  this.state.locktime.toString()//this.state.tgedate;\n        // payload.tegpercent = this.state.tgepercent;\n        payload.cycle = this.state.cycle;\n        payload.cyclepercent = this.state.cyclepercent;\n        payload.vesting = true\n      }\n      else{\n      payload.locktime = this.state.locktime.toString();\n      }\n      console.log('payload' , payload);\n      const validate = await validtokenlock(payload);\n      if(validate.isValid){\n        const approve = await Approvetoken(this.state.tokenaddress , this.state.amount);\n        this.setState({lockbutton : approve})\n      }\n      else{\n        this.setState({errors : validate.errors})\n      }\n    }\n\n    copyText(a, b){\n      toast.success(\"Address Copied\", {\n          position: position.position,\n          style: style,\n          iconTheme: iconTheme,\n      }\n      )\n\n  }\n    \n//     filterPassedTime = (time)\n//     => {\n//            const currentDate = new Date();\n//            const selectedDate = new Date(time)\n//    ;\n       \n//            return currentDate.getTime() < selectedDate.getTime();\n//          };\n \n    render() {\n        \n      const location = this.props.location.pathname.split('/')[1];\n\n      const {startDate} = this.state\n\n// {console.log(\"date\" , new Date(this.state.locktime).getTime());}\n      \n      \n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n           <Header/>\n           <div className=\"whole_sec pb-5\">\n           <div className='flex_side_right'>\n            <Sidebar />\n           <div className='right_side_sec'>\n           {/* <div className=\"text-white topBar d-flex justify-content-between\">\n                  \n                  <small>Trending</small>\n                <small>\n                  #1&nbsp;<span>Husy</span>\n                </small>\n                <small>\n                  #2&nbsp;<span>ORL</span>\n                </small>\n                <small>\n                  #3&nbsp;<span>UWC</span>\n                </small>\n                <small>\n                  #4&nbsp;<span>777</span>\n                </small>\n                <small>\n                  #5&nbsp;<span>IDXS</span>\n                </small>\n                <small>\n                  #6&nbsp;<span>COUGNU</span>\n                </small>\n                <small>\n                  #7&nbsp;<span>CRICLE</span>\n                </small>\n                <small>\n                  #8&nbsp;<span>KASA</span>\n                </small>\n                <small>\n                  #9&nbsp;<span>FIFAPP</span>\n                </small>\n                <small>\n                  #10&nbsp;<span>SOG</span>\n                </small>\n                <small>\n                  #11&nbsp;<span>COOSHA</span>\n                </small>\n                <small>\n                  #12&nbsp;<span>Honey</span>\n                </small>\n                \n                \n              </div> */}\n              {/* <Trendingslider/> */}\n              <div className=\"right_side_spacing\">\n              <div className='row mt-5'>\n           <div className='col-12 col-md-10 col-lg-9 mx-auto'>\n           <div className=\"tab_img\">\n                 <div className='card_bg card'>\n            <div className='card-body'>\n                  \n          \n\n            <div>\n                <div className='row'>\n\n                <div className='col-12 col-md-12 mb-3'>\n                        <p class=\"text-white\">Create Your Lock</p>\n                        <hr class=\"hr_green mb-0\"></hr>\n                            </div>\n                            {/* <div className='col-12 col-md-12 mb-3'>\n\n                            <Card className=\"card_bg h-100\">\n                        \n                        <Card.Body>\n                        <Card.Title className='card_title_text'>PinkLock is audited by:</Card.Title>\n                        <img style={{ height: \"50px\", width: \"50px\" }}\n                          src={favicon}/>\n                        </Card.Body>\n                        \n                      </Card>\n                      </div> */}\n\n                      <div className='col-12 col-md-12 mt-3 mb-0'>\n                        \n                        <p className='input_desc_sm'>Token or Token LP Address *</p>\n                        <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"file\"  onChange={async(e)=>{\n                              this.setState({ tokenaddress: e.target.value })\n                              const tokendata = await Checkaddress(e.target.value);\n                              console.log(\"tokendata\" , tokendata);\n                              if(tokendata.isValid){\n                                this.setState({tokeninfo : tokendata.tokeninfo})\n                                this.setState({errors : {}});\n                                this.setState({lockbutton : tokendata.allowance})\n                              }\n                              else{\n                                this.setState({errors : tokendata.errors});\n                                this.setState({tokeninfo : {}})\n                              }\n                             }} placeholder=\"\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.tokenaddress}</span>\n                        \n                    </div >\n                    <div className={isEmpty(this.state.tokeninfo) ? \"d-none\" : 'col-12 col-md-12 mb-3'}>\n                        <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n                            <span className='desc_grey_txt'>Name :</span>\n                            <span className='desc_grey_txt font_12'>{this.state.tokeninfo?.name}</span>\n                                </p>\n\n                        \n                                <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n                            <span className='desc_grey_txt'>Symbol :</span>\n                            <span className='desc_grey_txt font_12'>{this.state.tokeninfo?.symbol}</span>\n                                </p>\n\n                                <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n                            <span className='desc_grey_txt'>Decimals :</span>\n                            <span className='desc_grey_txt font_12'>{this.state.tokeninfo?.decimals}</span>\n                                </p>\n                      </div>\n                    <div className=\"custom-control custom-checkbox mt-3\">\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" onChange={(e)=>{this.setState({\"anotherowner\" : e.target?.checked})}}/>\n  <label className=\"custom-control-label\" for=\"customCheck1\">Use another owner?</label>\n</div>\n                            </div>\n\n\n                            <div className={this.state.anotherowner ? 'col-12 col-md-12 mt-3 mb-0' : \"d-none\"}>\n                        \n                        <p className='input_desc_sm'>Owner</p>\n                        <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"file\"  onChange={(e)=>this.setState({ anotherowneraddress: e.target.value }) } placeholder=\"Ex: My Lock\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.anotherowneraddress}</span>\n                    </div>\n                    \n                            </div>\n\n                           \n\n                            <div className='col-12 col-md-12 mt-3 mb-0'>\n                        \n                        <p className='input_desc_sm'>Amount*</p>\n                        <div className=\"inputs input-groups date_inoput_grps\">\n                        <InputGroup className=\"datepicker_input\">\n                        <FormControl id=\"amountmax\" placeholder=\"Enter Amount\"\n                                aria-describedby=\"basic-addon2\"\n                                value={this.state.amount}\n                                onChange={(e)=>{\n                                  this.setState({\"amount\" : e?.target?.value})\n                                }}\n                            />\n                          \n                        </InputGroup>\n                        <InputGroup.Append className='cur_pointer'>\n                                <button variant=\"outline-secondary\" className=\"trans_cal_btn\"\n                                disabled = {this?.state?.errors?.tokenaddress || ! this.state.tokenaddress}\n                                 onClick={async()=>{\n                                  const balance = await Gettokenbalance(this.state.tokenaddress);\n                                  this.setState({amount : balance})\n\n                                  }}>\n                                Max\n                                </button>\n                            </InputGroup.Append>\n                    </div>\n                    <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.amount}</span>\n\n                    <div className=\"custom-control custom-checkbox mt-3\">\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck2\" onChange={(e)=>{this.setState({\"vesting\" : e.target?.checked})}}/>\n  <label className=\"custom-control-label\" for=\"customCheck2\">Use Vesting?</label>\n</div>\n                            </div>\n\n\n                            <div className='col-12 col-md-12 mt-3 mb-0'>\n                        \n                        <p className='input_desc_sm'>{this.state.vesting ? \"TGE Date*\" : \"Lock until*\"}</p>\n                        <div className=\"inputs input-groups date_inoput_grps inut_grp_date_inpt_pad\">\n                        <InputGroup className=\"datepicker_input\" value= {this.state.locktime} readonly  >\n                        <DatePicker\n                         minDate={new Date(Date.now() + (86400000 *30))}\n                          filterTime={this.filterPassedTime.bind(this)}\n                        // disabledKeyboardNavigation\n                          showTimeSelect\n                          selected={this.state.locktime}\n                          onChange={(date)=> {\n                            let formData = { ...this.state.errors, [\"locktime\"]: \"\" };\n                            this.setState({ errors: formData });\n                            this.setState({\"locktime\": date});\n                            if(Date.parse(date) > Date.now()){\n                              let formData = { ...this.state.errors, [\"locktime\"]: \"\" };\n                               this.setState({ errors: formData });\n                            }\n                            else{\n                              let formData = { ...this.state.errors, [\"locktime\"]: \"Unlock time needs to be after now\" };\n                               this.setState({ errors: formData });\n                            }\n                          }}\n                          onKeyDown={e => e.preventDefault()}\n                          dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                                 />\n                          \n                        </InputGroup>\n                        <InputGroup.Append className='cur_pointer'>\n                                <button variant=\"outline-secondary\" className=\"trans_cal_btn\">\n                                <i class=\"far fa-calendar-alt\"></i>\n                                </button>\n                            </InputGroup.Append>\n                    </div>\n                    <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.locktime}</span>\n\n                            </div>\n\n                            {/* <div className={this.state.vesting ? 'col-12 col-md-12 mt-3 mb-0' : \"d-none\"}>\n                        \n                        <p className='input_desc_sm'>TGE Date (UTC time)</p>\n                        <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"file\"  onChange={(e)=>this.setState({ tgedate: e.target.value }) } placeholder=\"Ex: My Lock\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                    \n                            </div> */}\n                            {/* <div className={this.state.vesting ? 'col-12 col-md-12 mt-3 mb-0' : \"d-none\"}>\n                        \n                        <p className='input_desc_sm'>TGE Date (UTC time)*</p>\n                        <div className=\"inputs input-groups date_inoput_grps\">\n                        <InputGroup className=\"datepicker_input\" value = {this.state.tgedate}>\n                        <DatePicker\n                        //   filterTime={this.filterPassedTime.bind(this)}\n                          showTimeSelect\n                          selected={this.state.tgedate}\n                          onChange={(date)=> {\n                            this.setState({tgedate: date})\n                            if(Date.parse(date) > Date.now()){\n                              // this.setState({tgedate: date});\n                            }\n                            else{\n                              let formData = { ...this.state.errors, [\"tgedate\"]: \"TGE Date needs to be after now\" };\n                               this.setState({ errors: formData });\n                            }\n                        \n                          }}\n                          dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                                 />\n                          \n                        </InputGroup>\n                        <InputGroup.Append className='cur_pointer'>\n                                <button variant=\"outline-secondary\" className=\"trans_cal_btn\">\n                                <i class=\"far fa-calendar-alt\"></i>\n                                </button>\n                            </InputGroup.Append>\n                    </div>\n                    <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.tgedate}</span>\n\n                            </div> */}\n\n                            {/* <div className={this.state.vesting ? 'col-12 col-md-12 mt-3 mb-0' : \"d-none\"}>\n                        \n                        <p className='input_desc_sm'>TGE Percent</p>\n                        <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"file\"  onChange={(e)=>this.setState({ tegpercent: e.target.value }) } placeholder=\"Ex: My Lock\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.tgepercent}</span>\n                    </div>\n                    \n                            </div> */}\n\n                            <div className={this.state.vesting ? 'col-12 col-md-12 mt-3 mb-0' : \"d-none\"}>\n                        \n                        <p className='input_desc_sm'>Cycle (days)</p>\n                        <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"file\"  onChange={(e)=>this.setState({ cycle: e.target.value }) } placeholder=\"Ex: 20\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.cycle}</span>\n                    </div>\n                    \n                            </div>\n\n                            <div className={this.state.vesting ? 'col-12 col-md-12 mt-3 mb-0' : \"d-none\"}>\n                        \n                        <p className='input_desc_sm'>Cycle Release Percent</p>\n                        <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"file\"  onChange={(e)=>this.setState({ cyclepercent: e.target.value }) } placeholder=\"Ex:50\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.cyclepercent}</span>\n                    </div>\n                    \n                            </div>\n\n                            <div className='col-12 col-md-12 mt-3 mb-0'>\n                            <div className='card_footer_form'>\n                                <div className='d-flex align-items-center justify-content-center'>\n                                <p className='mb-0 pl-3'>Please exclude CryptoLock's lockup address <span className='wallet_address_text'><strong className='pl-1'>0x3eb6ADf6fBbD4993809D8D5356127F8E8a885d55</strong>\n                                <CopyToClipboard text={\"0x3eb6ADf6fBbD4993809D8D5356127F8E8a885d55\"} onCopy={() => this.copyText('invite link', \"0x3eb6ADf6fBbD4993809D8D5356127F8E8a885d55\")}>\n                        <button variant='link' className='fa fa-copy' style={{backgroundColor:\"transparent\", border:0}}></button>\n                  </CopyToClipboard></span>\n                                {/* <span className='copy_icon'> <i class=\"fa fa-files-o\" aria-hidden=\"true\"></i> */}\n                                {/* </span>  */}\n                                from fees, rewards, max tx amount to start locking tokens. We don't support rebase tokens.</p>\n                                </div>\n\n                            </div>  \n                            </div>\n                            <center className={this.state.lockbutton ? \"d-none\" : 'mt-4 mx-auto'}>\n                            <button className=\"get-started-btn mr-3\" \n                              onClick={this.handleapprove}\n                              >Approve</button>\n                            </center>\n                            <center className={this.state.lockbutton ? 'mt-4 mx-auto' : \"d-none\"}>\n                            <button className=\"get-started-btn mr-3\" onClick={this.handlelock}>Lock</button>\n                            </center>\n               \n               \n                           \n                        \n                       \n\n                       \n\n                       \n\n                       \n\n                       \n                        \n                       \n                       \n\n                       \n\n\n                    \n                  \n                </div>\n            </div>\n\n          \n                      \n             </div>\n             </div>\n            </div>\n            </div>\n        \n\n                \n               \n        </div>\n\n            <Container className='pb-5 px-0 mt-4'>\n                 \n                 <center>\n                   <small className=\"mt-3 bottom_text\">\n                     Disclaimer: The information provided shall not in any way\n                     constitute a recomendation as to whether you should invest\n                     in any product discussed. We accept no liability for any\n                     loss occasioned to any person acting or refraining from\n                     action as a result of any material provided or published.\n                   </small>\n                 </center>\n               </Container>\n            </div>\n           </div>\n           </div>\n           </div>\n\n        </div>\n        </div>\n        )\n    }\n}\n\nexport default CreateLock","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Lock/LockInfo.js",["729","730","731","732","733","734","735","736"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\n\nimport { Link } from 'react-router-dom';\nimport Header from '../Header';\nimport Sidebar from '../Sidebar';\nimport Trendingslider from '../trendingslider';\nimport TransfertokenModal from \"./TransfertokenModal\"\n\nimport {  Container } from 'react-bootstrap';\nimport '../../css/styles.css';\n\nimport Countdown, {zeroPad} from 'react-countdown';\n\nimport favicon from \"../../images/favicon.png\"\nimport { UpcomingDiffernce } from '../../hooks/useProjects';\nimport { Unlocktoken } from '../../hooks/useContract';\n\nconst renderer = ({ days, Month, Year, hours, minutes, seconds, completed }) => {\n  if (completed) {\n    return  <div className='btn_timer_new'>\n    <span>{zeroPad(days)}</span>\n    <span>{zeroPad(hours)}</span>\n    <span>{zeroPad(minutes)}</span>   \n    <span>{zeroPad(seconds)}</span>        \n </div>\n  } else {\n    // Render a countdown\n    return <div className='btn_timer_new'>\n           \n           <span>{zeroPad(days)}</span>\n    <span>{zeroPad(hours)}</span>\n    <span>{zeroPad(minutes)}</span>   \n    <span>{zeroPad(seconds)}</span>  \n          </div>;\n  }\n};\n\nclass LockInfo extends Component {\n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.05;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n  }\n  \n    componentDidMount()\n    {\n      // this.showLoader();\n      document.getElementById(\"launchpad_parent\").classList.add(\"active\");\n\n      this.hideLoader();\n      this.getlocationdata();\n     \n    }\n    componentDidUpdate(){\n      console.log(\"render\");\n    }\n\n    unlock = async () => {\n      const unlocktoken = await Unlocktoken(this.props.location.state.address)\n      // if (unlocktoken) {\n      //   this.setState({ sucess: true })\n      // }\n    }\n    getlocationdata = async()=>{\n      console.log(\"location data\" , this.props.location.state);\n      if(this.props.location.state.tokeninfo){\n        this.setState({tokeninfo : this.props.location.state.tokeninfo})\n        this.setState({lockerinfo : this.props.location.state.lockerinfo})\n        this.setState({owner : this.props.location.state.owner});\n        this.setState({tokenaddress : this.props.location.state.tokenaddress});\n      }\n      else{\n        this.props.history.push(\"/createlock\")\n      }\n    }\n    constructor(props) {\n        super(props);\n        this.state = {          \n          transfertokenModal: false,  \n          tokeninfo : {},\n          lockerinfo : {},\n          tokenaddress : \"\",\n          owner : \"\",\n          // name : \"\",\n          // symbol : '',\n          // decimal : '',\n          // amount : '',\n          // lockdate :''\n        };\n    }\n \n    onDismiss(){\n      this.setState({ transfertokenModal: false });\n  }\n\n\n    render() {\n      const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };   \n      const location = this.props.location.pathname.split('/')[1];\n\n\n      const {transfertokenModal} = this.state\n      \n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n\n           <Header/>\n          \n           <div className=\"whole_sec pb-5\">\n           <div className='flex_side_right'>\n            <Sidebar />\n           {/* ongoing_sec */}\n           <div className='right_side_sec'>\n           {/* <div className=\"text-white topBar d-flex justify-content-between\">\n                  \n                  <small>Trending</small>\n                <small>\n                  #1&nbsp;<span>Husy</span>\n                </small>\n                <small>\n                  #2&nbsp;<span>ORL</span>\n                </small>\n                <small>\n                  #3&nbsp;<span>UWC</span>\n                </small>\n                <small>\n                  #4&nbsp;<span>777</span>\n                </small>\n                <small>\n                  #5&nbsp;<span>IDXS</span>\n                </small>\n                <small>\n                  #6&nbsp;<span>COUGNU</span>\n                </small>\n                <small>\n                  #7&nbsp;<span>CRICLE</span>\n                </small>\n                <small>\n                  #8&nbsp;<span>KASA</span>\n                </small>\n                <small>\n                  #9&nbsp;<span>FIFAPP</span>\n                </small>\n                <small>\n                  #10&nbsp;<span>SOG</span>\n                </small>\n                <small>\n                  #11&nbsp;<span>COOSHA</span>\n                </small>\n                <small>\n                  #12&nbsp;<span>Honey</span>\n                </small>\n                \n                \n              </div> */}\n              {/* <Trendingslider/> */}\n              <div className=\"right_side_spacing\">\n                <div className='row mt-3'>\n                    <div className='col-12 col-md-10 col-lg-9 mx-auto'>\n                    <div className='card_bg card mt-4'>\n                        <div className=\"card-body\">\n                          <p className='text-white text-center'>Unlock in</p>\n                          <div className='text-center mt-3 mb-2'>\n                          {console.log(\"countdown \" , this.props.location.state.tokeninfo.unlockOn)}\n                        <Countdown date={Date.now() + (UpcomingDiffernce(this.props.location.state.lockerinfo.unlockOn))} renderer={renderer} className=\"countdown_grey\" zeroPadTime={2} />\n                          </div>\n                          </div>\n                          </div>\n                    <div className='card_bg card mt-4'>\n                        <div className=\"card-body\">\n                        <p class=\"text-white\">Token Info</p>\n                        <hr class=\"hr_green\"></hr>\n                        <p className='white_txt_sm d-flex justify-content-between mt-4 mb-1'>\n            <span className='desc_grey_txt'>Token Address :</span>\n            <span className='desc_grey_txt font_12'>{this.state.tokenaddress}           \n            </span>\n            </p>\n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Token Name :</span>\n            <span className='desc_grey_txt font_12'>{this.state.tokeninfo.name} \n          \n            </span>\n            </p>\n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Token Symbol :</span>\n            <span className='desc_grey_txt font_12'>{this.state.tokeninfo.symbol} \n            </span>\n            </p>\n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Token Decimals :</span>\n            <span className='desc_grey_txt font_12'>{this.state.tokeninfo.decimals} \n            </span>\n            </p>             \n\n       \n                            </div>\n                        </div>\n                        <div className='card_bg card mt-4'>\n                        <div className=\"card-body\">\n                        <p class=\"text-white\">Lock Info</p>\n                        <hr class=\"hr_green\"></hr>\n                        {/* <p className='white_txt_sm d-flex justify-content-between mt-4 mb-1'>\n            <span className='desc_grey_txt'>Title :</span>\n            <span className='desc_grey_txt font_12'>{this.state.lockerinfo.}\n            <span className='pl-2'>\n              <Link to=\"/updatelock\" className='link_grn_new'>\n              <i className='fa fa-pencil'></i>\n              </Link>\n            </span>\n            </span>\n            </p> */}\n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Total Amount Locked :</span>\n            <span className='desc_grey_txt font_12'>{this.state.lockerinfo.amount/10**18} \n          \n             </span>\n            </p>\n\n            {/* <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Token Values Locked :</span>\n            <span className='desc_grey_txt font_12'>${\"this.state.lockerinfo\"}\n            </span>\n            </p> */}\n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Owner :</span>\n            <span className='desc_grey_txt font_12'>{this.state.owner}\n            </span>\n            </p>       \n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Lock Date :</span>\n            \n            <span className='desc_grey_txt font_12'>{this.state.lockerinfo && String(new Date(this.state.lockerinfo.unlockOn * 1000).toLocaleDateString(\"en-US\", options))}\n             </span> \n            </p>       \n\n        <div className='col-12 col-md-12 text-center mt-4 btn_lock_info_div'>\n        <button className=\"get-started-btn mr-2\" onClick={() => this.setState({ transfertokenModal: true })}>\n        Transfer Lock Ownership\n        </button>\n        {/* <button className=\"get-started-btn mr-2\">\n        Renounce Lock Ownership\n        </button>\n        <button className=\"get-started-btn mr-2\">\n       Update\n        </button> */}\n        <button className=\"get-started-btn\" disabled = {(this.props.location.state.lockerinfo.unlockOn * 1000)>Date.now()} onClick={this.unlock}>\n        Unlock\n        </button>\n        </div>\n                            </div>\n                        </div>\n                    <div>        \n                        </div>\n                    </div>\n                </div>\n             \n\n            <Container className='pb-5 px-0 mt-4'>\n                 \n                 <center>\n                   <small className=\"mt-3 bottom_text\">\n                     Disclaimer: The information provided shall not in any way\n                     constitute a recomendation as to whether you should invest\n                     in any product discussed. We accept no liability for any\n                     loss occasioned to any person acting or refraining from\n                     action as a result of any material provided or published.\n                   </small>\n                 </center>\n               </Container>\n            </div>\n           </div>\n           </div>\n           </div>\n\n            {/* <Footer /> */}\n        </div>\n        {transfertokenModal && <TransfertokenModal tokenaddress = {this.state.tokenaddress} onDismiss={()=>this.onDismiss()} /> }\n\n        </div>\n        )\n    }\n}\n\nexport default LockInfo","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Lock/LockDetail.js",["737","738","739","740","741","742","743","744","745","746","747"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\n\nimport Header from '../Header';\nimport Sidebar from '../Sidebar';\nimport Trendingslider from '../trendingslider';\n\n\nimport { getAccount } from '../../hooks/useAccount'\n\n\n\n\n\nimport {  Container, FormControl, InputGroup } from 'react-bootstrap';\nimport '../../css/styles.css';\n\nimport favicon from \"../../images/favicon.png\"\n\nimport { Link } from 'react-router-dom';\nimport { Getsinglelockerdetail, Getsinglelockerinfo } from '../../hooks/useContract';\n\nclass LockDetail extends Component {\n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.05;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n\n\n\n  }\n  \n    componentDidMount()\n    {\n      document.getElementById(\"lock_parent\").classList.add(\"active\");\n      console.log(\"location datga\" , this.props.location.state)\n      // this.showLoader();\n      this.hideLoader();\n      this.getlockerdetail();\n    }\n\n    getlockerdetail = async()=>{\n      let addressinfo = await Getsinglelockerinfo(this.state.lpaddress);\n      this.setState({\"addressdetail\" : addressinfo})\n      let lockdetail = await Getsinglelockerdetail(this.state.lpaddress);\n      this.setState({lockdetail : lockdetail});\n      console.log(\"getlockerdetail\" , addressinfo , lockdetail);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {          \n            accountInfo: '',\n            lpaddress : window.location.pathname.split('/')[2],\n            addressdetail : {},\n            lockdetail : []\n        };\n    }\n \n    render() {\n        \n      const location = this.props.location.pathname.split('/')[1];\n\n      const { walletModal} = this.state\n\n      \n      \n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n\n           <Header/>\n          \n           <div className=\"whole_sec pb-5\">\n           <div className='flex_side_right'>\n            <Sidebar />\n           {/* ongoing_sec */}\n           <div className='right_side_sec'>\n           {/* <div className=\"text-white topBar d-flex justify-content-between\">\n                  \n                  <small>Trending</small>\n                <small>\n                  #1&nbsp;<span>Husy</span>\n                </small>\n                <small>\n                  #2&nbsp;<span>ORL</span>\n                </small>\n                <small>\n                  #3&nbsp;<span>UWC</span>\n                </small>\n                <small>\n                  #4&nbsp;<span>777</span>\n                </small>\n                <small>\n                  #5&nbsp;<span>IDXS</span>\n                </small>\n                <small>\n                  #6&nbsp;<span>COUGNU</span>\n                </small>\n                <small>\n                  #7&nbsp;<span>CRICLE</span>\n                </small>\n                <small>\n                  #8&nbsp;<span>KASA</span>\n                </small>\n                <small>\n                  #9&nbsp;<span>FIFAPP</span>\n                </small>\n                <small>\n                  #10&nbsp;<span>SOG</span>\n                </small>\n                <small>\n                  #11&nbsp;<span>COOSHA</span>\n                </small>\n                <small>\n                  #12&nbsp;<span>Honey</span>\n                </small>\n                \n                \n              </div> */}\n              {/* <Trendingslider/> */}\n              <div className=\"right_side_spacing\">\n              <div className='row mt-5'>\n           <div className='col-12 col-md-10 col-lg-9 mx-auto'>\n           <div className=\"tab_img\">\n                 <div className='card_bg card'>\n            <div className='card-body'>\n                  \n          \n\n            <div>\n                <div className='row'>\n                <div className='col-12 col-md-12 mb-3'>\n                <p class=\"text-white\">Lock Info</p>\n            <hr class=\"hr_green\"></hr>\n                </div>\n                    \n\n              \n                <div className='col-12 col-md-12 mb-3'>\n                        \n                <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Current Locked Amount</span>\n            <span className='desc_grey_txt font_12'>{this.state.addressdetail.amount / 10**this.state.addressdetail.decimal}</span>\n            </p>  \n                            </div>\n\n                            {/* <div className='col-12 col-md-12 mb-3'>\n                            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Current Values Locked</span>\n            <span className='desc_grey_txt font_12'>$0</span>\n            </p>  \n                        </div> */}\n                        <div className='col-12 col-md-12 mb-3'>\n                        <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Token Address</span>\n            <span className='desc_grey_txt font_12'>{this.state.lpaddress}</span>\n            </p>  \n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                        <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Token Name:</span>\n            <span className='desc_grey_txt font_12'>{this.state.addressdetail.name}</span>\n            </p>  \n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                        <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Token Symbol</span>\n            <span className='desc_grey_txt font_12'>{this.state.addressdetail.symbol}</span>\n            </p>  \n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                        <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Token Decimals</span>\n            <span className='desc_grey_txt font_12'>{this.state.addressdetail.decimal}</span>\n            </p>  \n                        </div>\n\n                        \n\n                       \n                        \n                        \n\n                       \n\n                     \n\n\n\n                    \n                  \n                </div>\n            </div>\n            <p class=\"text-white mt-3\">Lock records</p>\n            <hr class=\"hr_green\"></hr>\n            <div class=\"table-responsive\">\n           \n  <table className=\"table lockdetail_table recepients_table\">\n    <thead>\n    <tr>\n      <th>Wallet</th>\n      <th>Amount</th>\n      {/* <th>Cycle(m)</th>\n      <th>Cycle Release(%)</th> */}\n      {/* <th>TGE(%)</th> */}\n      <th>Unlock Time(UTC)</th>\n    </tr>\n    </thead>\n    {this.state.lockdetail?.map((data , i)=><>\n      <tr>\n      \n      \n       \n        \n      <td className=\"table_text\">{data?.Createduser}</td>\n      <td className=\"sub_tabletext\">{data?.amount / 10**this.state.addressdetail.decimal}</td>\n      {/* <td className=\"sub_tabletext\">{this.props.location.state.lockdata.isVested ?\n        this.props.location.state.lockdata.vestingInterval\n        : \"-\" \n    }</td>\n      <td className=\"sub_tabletext\">{this.props.location.state.lockdata.isVested\n          ? this.props.location.state.lockdata.vestingPercent : \"-\"\n      }</td> */}\n      {/* <td className=\"sub_tabletext\">-</td> */}\n      <td className=\"sub_tabletext\">{new Date(data?.unlockOn*1000).toLocaleDateString()}</td>\n  \n  {/* <td className=\"d-flex justify-content-end\"><Link className=\"link_text\" to='/'>View</Link></td> */}\n  \n</tr>\n    </>)}\n    \n   \n  </table>\n</div>\n\n          \n                      \n             </div>\n             </div>\n            </div>\n            </div>\n        \n\n                \n               \n        </div>\n\n            <Container className='pb-5 px-0 mt-4'>\n                 \n                 <center>\n                   <small className=\"mt-3 bottom_text\">\n                     Disclaimer: The information provided shall not in any way\n                     constitute a recomendation as to whether you should invest\n                     in any product discussed. We accept no liability for any\n                     loss occasioned to any person acting or refraining from\n                     action as a result of any material provided or published.\n                   </small>\n                 </center>\n               </Container>\n            </div>\n           </div>\n           </div>\n           </div>\n\n            {/* <Footer /> */}\n        </div>\n        </div>\n        )\n    }\n}\n\nexport default LockDetail","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Lock/UpdateLock.js",["748","749","750","751","752","753","754","755","756","757","758"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\n\nimport { Link } from 'react-router-dom';\nimport Header from '../Header';\nimport Sidebar from '../Sidebar';\nimport Trendingslider from '../trendingslider';\nimport TransfertokenModal from \"./TransfertokenModal\"\n\nimport {  Container, InputGroup, FormControl } from 'react-bootstrap';\nimport '../../css/styles.css';\n\nimport Countdown, {zeroPad} from 'react-countdown';\n\nimport favicon from \"../../images/favicon.png\"\n\nconst renderer = ({ days, Month, Year, hours, minutes, seconds, completed }) => {\n  if (completed) {\n    return  <div className='btn_timer_new'>\n    <span>{zeroPad(days)}</span>\n    <span>{zeroPad(hours)}</span>\n    <span>{zeroPad(minutes)}</span>   \n    <span>{zeroPad(seconds)}</span>        \n </div>\n  } else {\n    // Render a countdown\n    return <div className='btn_timer_new'>\n           \n           <span>{zeroPad(days)}</span>\n    <span>{zeroPad(hours)}</span>\n    <span>{zeroPad(minutes)}</span>   \n    <span>{zeroPad(seconds)}</span>  \n          </div>;\n  }\n};\n\nclass UpdateLock extends Component {\n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.05;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n  }\n  \n    componentDidMount()\n    {\n      // this.showLoader();\n      document.getElementById(\"launchpad_parent\").classList.add(\"active\");\n\n      this.hideLoader();\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {          \n        };\n    }\n \n\n    render() {\n        \n      const location = this.props.location.pathname.split('/')[1];\n\n\n      \n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />   \n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n\n           <Header/>\n          \n           <div className=\"whole_sec pb-5\">\n           <div className='flex_side_right'>\n            <Sidebar />\n           {/* ongoing_sec */}\n           <div className='right_side_sec'>\n           {/* <div className=\"text-white topBar d-flex justify-content-between\">\n                  \n                  <small>Trending</small>\n                <small>\n                  #1&nbsp;<span>Husy</span>\n                </small>\n                <small>\n                  #2&nbsp;<span>ORL</span>\n                </small>\n                <small>\n                  #3&nbsp;<span>UWC</span>\n                </small>\n                <small>\n                  #4&nbsp;<span>777</span>\n                </small>\n                <small>\n                  #5&nbsp;<span>IDXS</span>\n                </small>\n                <small>\n                  #6&nbsp;<span>COUGNU</span>\n                </small>\n                <small>\n                  #7&nbsp;<span>CRICLE</span>\n                </small>\n                <small>\n                  #8&nbsp;<span>KASA</span>\n                </small>\n                <small>\n                  #9&nbsp;<span>FIFAPP</span>\n                </small>\n                <small>\n                  #10&nbsp;<span>SOG</span>\n                </small>\n                <small>\n                  #11&nbsp;<span>COOSHA</span>\n                </small>\n                <small>\n                  #12&nbsp;<span>Honey</span>\n                </small>\n                \n                \n              </div> */}\n              {/* <Trendingslider/> */}\n              <div className=\"right_side_spacing\">\n                <div className='row mt-3'>\n                    <div className='col-12 col-md-10 col-lg-9 mx-auto'>\n                  \n                    <div className='card_bg card mt-4'>\n                        <div className=\"card-body\">\n                        <p class=\"text-white\">Update Your Lock</p>\n                        <hr class=\"hr_green\"></hr>\n                        <div className='mt-4'>\n                        <small class=\"mt-3 bottom_text\">Crypto Launchpad is audited by Certik: \n                        <a href=\"https:leaderboard.certik.io/projects\" target=\"_blank\" className='link_blue_new pl-1 block_link_new_blue'>\n                            https:leaderboard.certik.io/projects\n                        </a>\n                        </small>\n                        </div>\n                        <p className='white_txt_sm d-flex justify-content-between mt-3 mb-1'>\n            <span className='desc_grey_txt'>Token Address :</span>\n            <span className='desc_grey_txt font_12'>0xB3gjyo78954634hgFEGFTE           \n            </span>\n            </p>\n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Name :</span>\n            <span className='desc_grey_txt font_12'>Binance \n          \n            </span>\n            </p>\n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Symbol :</span>\n            <span className='desc_grey_txt font_12'>BTC\n            </span>\n            </p>\n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Decimals :</span>\n            <span className='desc_grey_txt font_12'>18\n            </span>\n            </p>  \n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Balance :</span>\n            <span className='desc_grey_txt font_12'>999.5\n            </span>\n            </p>  \n            <div className='col-12 col-md-12 mb-3 px-0 mt-4'>\n                        \n                        <p className='input_desc_sm'>Title</p>\n                        <div className=\"inputs input-groups\">\n                            <InputGroup className=\"\">\n                                <FormControl id=\"title\" placeholder=\"Title\"\n                                    aria-describedby=\"basic-addon2\"\n                                />\n                              \n                            </InputGroup>\n                        </div>\n                        \n                            </div>\n            <div className='col-12 col-md-12 text-center mt-4'>\n        <button className=\"get-started-btn\">\n       Update\n        </button>\n        </div>           \n\n       \n                            </div>\n                        </div>\n                       \n                    <div>        \n                        </div>\n                    </div>\n                </div>\n             \n\n            <Container className='pb-5 px-0 mt-4'>\n                 \n                 <center>\n                   <small className=\"mt-3 bottom_text\">\n                     Disclaimer: The information provided shall not in any way\n                     constitute a recomendation as to whether you should invest\n                     in any product discussed. We accept no liability for any\n                     loss occasioned to any person acting or refraining from\n                     action as a result of any material provided or published.\n                   </small>\n                 </center>\n               </Container>\n            </div>\n           </div>\n           </div>\n           </div>\n\n            {/* <Footer /> */}\n        </div>\n\n        </div>\n        )\n    }\n}\n\nexport default UpdateLock","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Lock/Viewlockinfo.js",["759","760","761","762","763","764"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\n\nimport { Link } from 'react-router-dom';\nimport Header from '../Header';\nimport Sidebar from '../Sidebar';\nimport Trendingslider from '../trendingslider';\nimport TransfertokenModal from \"./TransfertokenModal\"\n\nimport { Container } from 'react-bootstrap';\nimport '../../css/styles.css';\n\nimport Countdown, { zeroPad } from 'react-countdown';\n\nimport favicon from \"../../images/favicon.png\";\nimport { Unlocktoken } from '../../hooks/useContract';\nimport { UpcomingDiffernce } from '../../hooks/useProjects';\n\nconst renderer = ({ days, Month, Year, hours, minutes, seconds, completed }) => {\n  if (completed) {\n    return <div className='btn_timer_new'>\n      <span>{zeroPad(days)}</span>\n      <span>{zeroPad(hours)}</span>\n      <span>{zeroPad(minutes)}</span>\n      <span>{zeroPad(seconds)}</span>\n    </div>\n  } else {\n    // Render a countdown\n    return <div className='btn_timer_new'>\n\n      <span>{zeroPad(days)}</span>\n      <span>{zeroPad(hours)}</span>\n      <span>{zeroPad(minutes)}</span>\n      <span>{zeroPad(seconds)}</span>\n    </div>;\n  }\n};\n\nclass LockInfo extends Component {\n  showLoader() {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.05;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n  }\n\n  hideLoader() {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n  }\n\n  componentDidMount() {\n    // this.showLoader();\n    document.getElementById(\"launchpad_parent\").classList.add(\"active\");\n    this.hideLoader();\n    this.getlocationdata();\n\n  }\n\n  getlocationdata = async () => {\n    //    console.log(\"location data\" , this.props.location);\n    if (this.props.location.state.tokeninfo) {\n      this.setState({ tokeninfo: this.props.location.state.tokeninfo })\n      this.setState({ lockerinfo: this.props.location.state.lockerinfo })\n      this.setState({ owner: this.props.location.state.owner });\n      this.setState({ tokenaddress: this.props.location.state.tokenaddress });\n    }\n    else {\n      // this.props.history.push(\"/createlock\")\n    }\n  }\n\n  unlock = async () => {\n    const unlocktoken = await Unlocktoken(this.props.location.state.address)\n    if (unlocktoken) {\n      this.setState({ sucess: true })\n    }\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      transfertokenModal: false,\n      tokeninfo: {},\n      lockerinfo: {},\n      tokenaddress: \"\",\n      owner: \"\",\n      sucess: false,\n      // name : \"\",\n      // symbol : '',\n      // decimal : '',\n      // amount : '',\n      // lockdate :''\n    };\n  }\n\n  onDismiss() {\n    this.setState({ transfertokenModal: false });\n  }\n\n\n  render() {\n\n    // const location = this.props.location?.pathname?.split('/')[1];\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n\n    const { transfertokenModal } = this.state\n\n    return (\n      <div id=\"loader_main\">\n        <div id=\"loader_div\">\n          <span className=\"spin_round\">\n          </span>\n          <img src={favicon} className=\"logo_load\" />\n        </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n          <Header />\n          <div className=\"whole_sec pb-5\">\n            <div className='flex_side_right'>\n              <Sidebar />\n              <div className='right_side_sec'>\n                {/* <div className=\"text-white topBar d-flex justify-content-between\">\n\n                  <small>Trending</small>\n                  <small>\n                    #1&nbsp;<span>Husy</span>\n                  </small>\n                  <small>\n                    #2&nbsp;<span>ORL</span>\n                  </small>\n                  <small>\n                    #3&nbsp;<span>UWC</span>\n                  </small>\n                  <small>\n                    #4&nbsp;<span>777</span>\n                  </small>\n                  <small>\n                    #5&nbsp;<span>IDXS</span>\n                  </small>\n                  <small>\n                    #6&nbsp;<span>COUGNU</span>\n                  </small>\n                  <small>\n                    #7&nbsp;<span>CRICLE</span>\n                  </small>\n                  <small>\n                    #8&nbsp;<span>KASA</span>\n                  </small>\n                  <small>\n                    #9&nbsp;<span>FIFAPP</span>\n                  </small>\n                  <small>\n                    #10&nbsp;<span>SOG</span>\n                  </small>\n                  <small>\n                    #11&nbsp;<span>COOSHA</span>\n                  </small>\n                  <small>\n                    #12&nbsp;<span>Honey</span>\n                  </small>\n\n\n                </div> */}\n                {/* <Trendingslider/> */}\n\n                <div className=\"right_side_spacing\">\n                  <div className='row mt-3'>\n                    <div className='col-12 col-md-10 col-lg-9 mx-auto'>\n                      <div className='card_bg card mt-4'>\n                        <div className=\"card-body\">\n                          <p className='text-white text-center'>Unlock in</p>\n                          <div className='text-center mt-3 mb-2'>\n                            <Countdown date={Date.now() + (UpcomingDiffernce(this.props.location.state.lockdata.unlockOn))} renderer={renderer} className=\"countdown_grey\" zeroPadTime={2} />\n                          </div>{console.log(\"date\", Date.now() + new Date(this.props.location.state.lockdata.unlockOn * 1000).getTime())}\n                        </div>\n                      </div>\n                      <div className='card_bg card mt-4'>\n                        <div className=\"card-body\">\n                          <p class=\"text-white\">Token Info</p>\n                          <hr class=\"hr_green\"></hr>\n                          <p className='white_txt_sm d-flex justify-content-between mt-4 mb-1'>\n                            <span className='desc_grey_txt'>Token Address :</span>\n                            <span className='desc_grey_txt font_12'>{this.props.location.state.address}\n                            </span>\n                          </p>\n\n                          <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n                            <span className='desc_grey_txt'>Token Name :</span>\n                            <span className='desc_grey_txt font_12'>{this.props.location.state.lockdata.name}</span>\n                          </p>\n\n                          <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n                            <span className='desc_grey_txt'>Token Symbol :</span>\n                            <span className='desc_grey_txt font_12'>{this.props.location.state.lockdata.symbol}\n                            </span>\n                          </p>\n\n                          <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n                            <span className='desc_grey_txt'>Token Decimals :</span>\n                            <span className='desc_grey_txt font_12'>{this.props.location.state.lockdata.decimal}\n                            </span>\n                          </p>\n\n\n                        </div>\n                      </div>\n                      <div className='card_bg card mt-4'>\n                        <div className=\"card-body\">\n                          <p class=\"text-white\">Lock Info</p>\n                          <hr class=\"hr_green\"></hr>\n                \n\n                          <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n                            <span className='desc_grey_txt'>Total Amount Locked :</span>\n                            <span className='desc_grey_txt font_12'>{this.props.location.state.lockdata.amount / 10 ** 18}</span>\n                          </p>\n\n                          <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n                            <span className='desc_grey_txt'>Owner :</span>\n                            <span className='desc_grey_txt font_12'>{this.props.location.state.lockdata.to}</span>\n                          </p>\n\n                          <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n                            <span className='desc_grey_txt'>Lock Date :</span>\n                            <span className='desc_grey_txt font_12'>{new Date(this.props.location.state.lockdata.unlockOn * 1000).toLocaleDateString(\"en-US\", options)} </span>\n                          </p>\n\n                          <div className={this.state.sucess ? 'd-none' : 'col-12 col-md-12 text-center mt-4 btn_lock_info_div'}>\n                            <button className=\"get-started-btn mr-2\" onClick={() => this.setState({ transfertokenModal: true })}>\n                              Transfer Lock Ownership\n                            </button>\n                    \n                            <button className=\"get-started-btn\" \n                            disabled = {(this.props.location.state.lockdata.unlockOn * 1000)>Date.now()}\n                            onClick={this.unlock}>\n                              Unlock\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                      <div>\n                      </div>\n                    </div>\n                  </div>\n\n\n                  <Container className='pb-5 px-0 mt-4'>\n\n                    <center>\n                      <small className=\"mt-3 bottom_text\">\n                        Disclaimer: The information provided shall not in any way\n                        constitute a recomendation as to whether you should invest\n                        in any product discussed. We accept no liability for any\n                        loss occasioned to any person acting or refraining from\n                        action as a result of any material provided or published.\n                      </small>\n                    </center>\n                  </Container>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* <Footer /> */}\n        </div>\n        {transfertokenModal && <TransfertokenModal tokenaddress={this.props.location.state.address} onDismiss={() => this.onDismiss()} />}\n\n      </div>\n    )\n  }\n}\n\nexport default LockInfo","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/Adminlaunchpadsettings.js",["765","766","767","768","769","770","771","772"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\n\n\nimport Adminheader from './Adminheader';\nimport Adminsidebar from './Adminsidebar';\nimport Cookies from 'universal-cookie';\n\n\n\nimport '../../css/styles.css';\n\nimport favicon from \"../../images/favicon.png\"\n\nimport loader from \"../../images/loader.gif\"\nimport { InputGroup,FormControl } from 'react-bootstrap';\nimport { getsettinghook } from '../../hooks/usebackend';\nimport { GetAdminfee, SetDeploymentfee, SetTokenfee, SetUserfee } from '../../hooks/useContract';\nconst cookies = new Cookies();\nclass Adminlaunchpadsettings extends Component {\n   \n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.5;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n\n\n\n  }\n  \n    componentDidMount()\n    {\n     this.hideLoader();\n     this.getfee();\n     this.restrict();\n    }\n\n    restrict = async()=>{\n      var email = cookies.get('cryp-launch-admin-email');\n      console.log(\"email\" , email);\n      if(!email){\n        this.props.history.push(\"/login\")\n      }\n    }\n\n    async getfee(){\n      var fee = await GetAdminfee();\n      console.log(\"fee\" , fee);\n      this.setState({deploymentfee : fee.deploymentfee/10**18});\n      this.setState({tokenfee : fee.tokenfee/10**18});\n      this.setState({userfee : fee.liquidityTokenFee/10**18});\n    }\n\n    async settokenFee(value){\n      await SetTokenfee(value)\n    }\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        deploymentfee : 0,\n        tokenfee : 0,\n        userfee : 0\n      }\n    }\n\n    render() {\n     \n\n      const location = this.props.location.pathname.split('/')[1];\n\n\n      \n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n      \n\n           <Adminheader />\n        \n           <div className=\"whole_sec pb-5\">\n            <div className='flex_side_right'>\n            <Adminsidebar />\n           {/* ongoing_sec */}\n           <div className='right_side_sec'>\n        \n              <div className=\"right_side_spacing\">\n              <div className='ongoing_sec pb-5 admn_form'>\n            <div className=\"container px-0\">\n                <div className='top_heqad_sec mt-5 mt-md-0'>\n                   \n                  <div className=\"row\">\n                      <div className=\"col-12 col-md-12 flex_cen_col mt-md-5 mb-md-4\">\n                        <p className=\"banner_subtitle form_subhead\">Launchpad Settings</p>\n\n\n\n                       \n                      \n                      </div>\n                      \n                        </div>\n\n                        <div className='row'>\n           <div className='col-12 col-md-10 col-lg-9 mx-auto'>\n           <div className=\"tab_img\">\n                 <div className='card_bg card'>\n            <div className='card-body'>\n            <div className='row'>\n                            <div className='col-12'>\n                            <p className='input_desc_sm'>Pool Creation Fee</p>\n                        <div className=\"inputs input-groups noearp_input_admin\">\n                        <InputGroup className=\"datepicker_input\">\n                        <FormControl id=\"price\" placeholder=\"Enter Price\"\n                                aria-describedby=\"basic-addon2\"\n                               onChange={(e)=>{this.setState({deploymentfee : e?.target?.value})}}\n                                value = {this.state.deploymentfee}\n                            />\n                              <InputGroup.Text id=\"basic-addon2\">\n                              <button className=\"get-started-btn\"\n                                onClick={()=>{SetDeploymentfee(this.state.deploymentfee)}}\n                              >\n                                Update\n                                </button>\n                                </InputGroup.Text>\n                          \n                        </InputGroup>\n                            </div>\n                            </div>\n                            <div className='col-12 mt-3'>\n                            <p className='input_desc_sm'>Liquidity Token Creation Fee</p>\n                        <div className=\"inputs input-groups noearp_input_admin\">\n                        <InputGroup className=\"datepicker_input\">\n                        <FormControl id=\"tokenaddres\" placeholder=\"Enter Token Address\"\n                                aria-describedby=\"basic-addon2\"\n                                onChange={(e)=>{this.setState({userfee : e?.target?.value})}}\n                                value = {this.state.userfee}\n                            />\n                              <InputGroup.Text id=\"basic-addon2\">\n                              <button className=\"get-started-btn\"\n                                onClick={()=>{SetUserfee(this.state.userfee)}}\n                              >\n                                Update\n                                </button>\n                                </InputGroup.Text>\n                          \n                        </InputGroup>\n                            </div>\n                            </div>\n                            <div className='col-12 mt-3'>\n                            <p className='input_desc_sm'>Token Creation Fee</p>\n                        <div className=\"inputs input-groups noearp_input_admin\">\n                        <InputGroup className=\"datepicker_input\">\n                        <FormControl id=\"mincontribution\" placeholder=\"Enter Minimum Contribution\"\n                                aria-describedby=\"basic-addon2\"\n                                onChange={(e)=>{this.setState({tokenfee : e?.target?.value})}}\n                                value = {this.state.tokenfee}\n                            />\n                              <InputGroup.Text id=\"basic-addon2\">\n                              <button className=\"get-started-btn\"\n                                onClick={()=>{this.settokenFee(this.state.tokenfee)}}\n                              >\n                                Update\n                                </button>\n                                </InputGroup.Text>\n                          \n                        </InputGroup>\n                            </div>\n                            </div>\n                            {/* <div className='col-12 mt-3'>\n                            <p className='input_desc_sm'>Maximum Contribution for USDT*</p>\n                        <div className=\"inputs input-groups noearp_input_admin\">\n                        <InputGroup className=\"datepicker_input\">\n                        <FormControl id=\"maxcontribution\" placeholder=\"Enter Maximum Contribution\"\n                                aria-describedby=\"basic-addon2\"\n                               \n                                \n                            />\n                              <InputGroup.Text id=\"basic-addon2\">\n                              <button className=\"get-started-btn\">\n                                Update\n                                </button>\n                                </InputGroup.Text>\n                          \n                        </InputGroup>\n                            </div>\n                            </div>\n\n                            <div className='col-12 mt-3'>\n                            <p className='input_desc_sm'>Hard Cap for USDT*</p>\n                        <div className=\"inputs input-groups noearp_input_admin\">\n                        <InputGroup className=\"datepicker_input\">\n                        <FormControl id=\"hardcap\" placeholder=\"Enter Hard Cap\"\n                                aria-describedby=\"basic-addon2\"\n                               \n                                \n                            />\n                              <InputGroup.Text id=\"basic-addon2\">\n                              <button className=\"get-started-btn\">\n                                Update\n                                </button>\n                                </InputGroup.Text>\n                          \n                        </InputGroup>\n                            </div>\n                            </div>\n\n                            <div className='col-12 mt-3'>\n                            <p className='input_desc_sm'>Deposit Token*</p>\n                        <div className=\"inputs input-groups noearp_input_admin\">\n                        <InputGroup className=\"datepicker_input\">\n                        <FormControl id=\"deposittoken\" placeholder=\"Enter Deposit Token\"\n                                aria-describedby=\"basic-addon2\"\n                               \n                                \n                            />\n                              <InputGroup.Text id=\"basic-addon2\">\n                              <button className=\"get-started-btn\">\n                                Update\n                                </button>\n                                </InputGroup.Text>\n                          \n                        </InputGroup>\n                            </div>\n                            </div> */}\n{/* \n                            <div className='col-12 col-md-12 text-center mt-4'>                   \n                        <button className=\"get-started-btn\">\n                          Submit\n                        </button>\n                        </div> */}\n                        </div>\n                </div>\n                </div>\n                </div>\n                </div>\n                </div>\n               \n                       \n                        </div>\n                        </div>\n                        </div>\n            {/* end ongoing_sec */}\n\n            </div>\n            </div>\n            </div>\n            </div>\n          \n\n\n            {/* <Footer /> */}\n        </div>\n        </div>\n        )\n    }\n}\n\nexport default Adminlaunchpadsettings","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Privatesale/PrivatesaleDetail.js",["773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\n\nimport Header from '../Header';\nimport Sidebar from '../Sidebar';\nimport Trendingslider from '../trendingslider';\n\n\nimport { getAccount, getAllocationInfo } from '../../hooks/useAccount'\n\n\nimport Chart from \"react-apexcharts\";\n\nimport Countdown from 'react-countdown';\n\n\nimport {  Container, ProgressBar,InputGroup, FormControl} from 'react-bootstrap';\nimport '../../css/styles.css';\n\nimport favicon from \"../../images/favicon.png\"\nimport { Link } from 'react-router-dom';\n\nimport WhitelistModal from \"../WhitelistModal\"\nimport RemoveWhitelistmodal from \"../RemoveWhitelistmodal\"\nimport ChangeStatusmodal from \"../ChangeStatusmodal\"\nimport { approveContractbuy, checkIsApproved, Getliquiditytokenamount, getSaleInfoCard, GetSalePerAccount, Getunsoldtoken, UseTokenInfo } from '../../hooks/useContract';\nimport { isSaleLive, isUpcoming, Salediffernce, UpcomingDiffernce } from '../../hooks/useProjects';\nimport { ONEDAYINSECONDS } from '../../config/env';\nimport { BuyToken, calculateBuy, claimToken } from '../../hooks/useBuy';\nimport { Finalise, getUnsold, SetWhitelisted, updateStopEvent, withdrawBNB } from '../../hooks/useAdmin';\nimport { gettrendingdisplayhook } from '../../hooks/usebackend';\n\nconst renderer = ({ days, Month, Year, hours, minutes, seconds, completed }) => {\n    if (completed) {\n      return  <div className='cout_man_div'>\n      <div>{days}d </div>\n      <div>{hours}h</div>\n      <div>{minutes}m</div>   \n      <div>{seconds}s </div>         \n   </div>\n    } else {\n      // Render a countdown\n      return <div className='cout_man_div'>\n                {/* <span>{days}<span>Days</span> </span>\n                <span>{hours}<span>Hours</span></span>\n                <span>{minutes}<span>Minuits</span></span>   \n                <span>{seconds}<span>Seconds</span> </span>    */}\n                 <div>{days}d </div>\n      <div>{hours}h</div>\n      <div>{minutes}m</div>   \n      <div>{seconds}s </div>\n            </div>;\n    }\n  };\n\n\nclass PrivatesaleDetail extends Component {\n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.05;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n\n\n\n  }\n  \n    componentDidMount()\n    {\n      document.getElementById(\"privatesale_parent\").classList.add(\"active\");\n      // this.showLoader();\n      // this.hideLoader();\n      //  this.setState({ accountInfo: getAccount() });\n      this.gettrending();\n      this.refreshData()\n    }\n    async gettrending(){\n      const {saleData} = this.props\n      let data = await gettrendingdisplayhook();\n      console.log(\"dataa trending\" , data?.data?.data);\n      if(data?.data?.data?.length > 0)\n      this.setState({trending : data?.data?.data}) \n      let finddata = data?.data?.data?.find((e)=> e?.saleaddress == this.state.saleAddress)\n      this.setState({singletrending : finddata})\n  }\n\n\n    constructor(props) {\n        super(props);\n        this.state = {          \n            walletModal: false,\n            saleAddress: window.location.pathname.split('/')[2],\n            accountInfo: '',\n            series: [44, 55, 41, 17, 15],\n            options: {\n              labels: [\"Total Tokens\", \"Sold Tokens\", \"Unsold Tokens\", \"Liquidity Tokens\"],\n              chart: {\n                type: 'donut',\n              },\n              responsive: [\n                {\n                breakpoint: 480,\n                options: {\n                  labels: [\"Total Tokens\", \"Sold Tokens\", \"Unsold Tokens\", \"Liquidity Tokens\"],\n                  chart: {\n                    width: 200\n                  },\n                  legend: {\n                    position: 'bottom'\n                  }\n                },\n              },\n              {\n                breakpoint: 600,\n                options: {\n                  chart: {\n                    width: 300\n                  },\n                  legend: {\n                    position: 'right'\n                  }\n                }\n              },\n              {\n                breakpoint: 1199,\n                options: {\n                  chart: {\n                    width: 300\n                  },\n                  legend: {\n                    position: 'bottom'\n                  }\n                }\n              },\n              {\n                breakpoint: 2000,\n                options: {\n                  chart: {\n                    width: 350\n                  },\n                  legend: {\n                    position: 'right'\n                  }\n                }\n              }\n            ]\n            },\n            iswhitelisted : true,\n            whitelistModal : false,\n            removewhitelistModal:false,\n            changestatueModal:false,\n            buyToken: \"\",\n            saleInfo: {},\n            userData: {},\n            allocations: [],\n            buyTokenDecimal : 0,\n            amount: 0,\n            claim: 0,\n            max: 0,\n            isMax: false,\n            liqtoken : \"\",\n            unsoldtoken : \"\",\n            chartstatus : false,\n          charttokendecimal : \"\",\n          trending : [],\n          singletrending : {}, \n          approvebutton : false,\n        };\n    }\n\n    handlewithdraw = async() => {\n      let account = getAccount();\n      let withdraw = await withdrawBNB(this.state.saleAddress , account);\n    }\n\n    approveFunction = async (accountInfo,tokenAddress,saleAddress) => {\n      const approval = await checkIsApproved(accountInfo,tokenAddress,saleAddress);\n      console.log(\"approval0\",approval);\n       this.setState({ approvebutton: approval}) \n    \n   \n}\n\n\nasync approvetoken(){\n  await approveContractbuy(localStorage.getItem(\"accountInfo\"),this.state.saleInfo.useWithToken,this.state.saleAddress);\n  this.setState({approvebutton : true})\n}\n\n     loadData = async() => {\n      this.showLoader();\n      const saleDetail = await getSaleInfoCard(this.state.saleAddress);\n      this.setState({ saleInfo: saleDetail });\n      if(localStorage.getItem(\"accountInfo\")){\n        const user = await GetSalePerAccount(localStorage.getItem(\"accountInfo\"),this.state.saleAddress);\n        this.setState({userData: user});\n       \n        if(saleDetail.isClaimable){\n          const allocated = await getAllocationInfo(user.actualBalance,user.userClaimbale,saleDetail.vestingInterval,saleDetail.vestingPercent,user.initialClaim);\n          this.setState({ allocations: allocated });\n          console.log(\"allcations L \",allocated)\n        }\n\n        if(!saleDetail?.buytype){\n          this.approveFunction(localStorage.getItem(\"accountInfo\"),saleDetail?.useWithToken,saleDetail?.saleAddress)\n        }\n        \n      }\n      this.hideLoader();\n      \n    }\n    \n    refreshData = async()=>{\n     this.showLoader();\n      console.log(\"address\" , this.state.saleAddress);\n      const saleDetail = await getSaleInfoCard(this.state.saleAddress);\n      console.log(\"saledetail\" , saleDetail);\n\n      console.log(\"saleDetail\" , saleDetail);\n      const token = await UseTokenInfo(saleDetail?.tokenAddress);\n      let decimal ;\n      console.log(\"tokentokentoken\" , token);\n      this.setState({charttokendecimal : 18})\n      let liqtoken = await Getliquiditytokenamount(this.state.saleAddress);\n      console.log(\"liqtoken\" , liqtoken);\n      \n      this.setState({\"liqtoken\" : liqtoken/10**18})\n      let unsoldtoken = await Getunsoldtoken(this.state.saleAddress);\n      console.log(\"liqtoken\" , liqtoken);\n      this.setState({unsoldtoken : unsoldtoken/10**18});\n     \n      this.setState({ saleInfo: saleDetail });\n      this.setState({\"chartstatus\" : true});\n       this.GetBuytokeninfo(saleDetail?.useWithToken)\n      if(localStorage.getItem(\"accountInfo\")){\n        const user = await GetSalePerAccount(localStorage.getItem(\"accountInfo\"),this.state.saleAddress);\n        console.log(\"user\",user);\n       this.setState({userData : user});\n       if(saleDetail.isClaimable){\n        const allocated = await getAllocationInfo(user.actualBalance,saleDetail.vestingInterval,saleDetail.vestingPercent,user.initialClaim);\n       this.setState({ allocations: allocated });\n       }\n\n       if(!saleDetail?.buytype){\n        this.approveFunction(localStorage.getItem(\"accountInfo\"),saleDetail?.useWithToken,saleDetail?.saleAddress)\n      }\n       \n      }\n      this.hideLoader()\n    }\n\n\n     GetBuytokeninfo = async(value)=>{\n     \n      if(value === \"0x0000000000000000000000000000000000000000\"){\n        console.log(\"kxcnvjxch\");\n         this.setState( { buyToken: \"BNB\"});\n         this.setState({buyTokenDecimal : 18})\n      }else{\n          const token =  await UseTokenInfo(this.state.saleInfo && this.state.saleInfo?.useWithToken);\n          console.log(\"token\" , token);\n          this.setState({ buyToken: token?.symbol });\n          this.setState({buyTokenDecimal : Number(token?.decimals)})\n          \n      }\n      }\n\n      async max(){\n        this.setState({ max: this.state.saleInfo && (parseInt(this.state.saleInfo?.maxEthLimit)/10** this.state.buyTokenDecimal), isMax: true })\n        this.setState({amount : this.state.saleInfo && (parseInt(this.state.saleInfo?.maxEthLimit)/10** this.state.buyTokenDecimal)})\n        \n      }\n       \n      \n      async calculateToken(value){\n       \n        const tokenValue = await calculateBuy(this.state.saleAddress,value);\n        this.setState({ claim: (tokenValue/10**this.state.saleInfo?.decimals) })\n       \n    }\n\n    async buy(){\n      console.log(\"buyyyyyyyyyyyyyyyyyyyyyyy\");\n      await BuyToken(this.state.saleAddress,this.state.amount,this.state.isMax,this.state.max,getAccount(),this.state.buyTokenDecimal , this.state.buyToken);\n      window.location.reload();\n      // this.reset();\n      // this.props.onUpdate();\n    }\n    \n    \n    async Claim(){\n      await claimToken(this.state.saleAddress,getAccount());\n      // this.props.onUpdate();\n    }\n\n    async stopSaleEvent(){\n      await updateStopEvent(this.state.saleAddress,getAccount());\n      await this.refreshData()\n     \n    }\n    \n    \n    \n    async withdrawToken(){\n      await getUnsold(this.state.saleAddress,getAccount());\n      await this.refreshData()\n     ;\n    }\n    \n    async BNBwithdraw(){\n      await withdrawBNB(this.state.saleAddress,getAccount());\n      await this.refreshData()\n      \n    }\n    \n    async Finalisesale(){\n      await Finalise(this.state.saleAddress,getAccount());\n      await this.refreshData()\n      \n    }\n    \n    async Handlewhitelist(value){\n      await SetWhitelisted(this.state.saleAddress,value,getAccount());\n      await this.refreshData()\n    }\n \n    render() {\n   \n      const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n      const {saleInfo ,userInfo, whitelistModal,removewhitelistModal,changestatueModal , userData , iswhitelisted} = this.state\n      {console.log(\"saleinfo\" , saleInfo?.startTime);}\n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n\n           <Header/>\n          \n           <div className=\"whole_sec pb-5\">\n           <div className='flex_side_right'>\n            <Sidebar />\n           {/* ongoing_sec */}\n           <div className='right_side_sec'>\n           {/* <div className=\"text-white topBar d-flex justify-content-between\">\n                  \n                  <small>Trending</small>\n                <small>\n                  #1&nbsp;<span>Husy</span>\n                </small>\n                <small>\n                  #2&nbsp;<span>ORL</span>\n                </small>\n                <small>\n                  #3&nbsp;<span>UWC</span>\n                </small>\n                <small>\n                  #4&nbsp;<span>777</span>\n                </small>\n                <small>\n                  #5&nbsp;<span>IDXS</span>\n                </small>\n                <small>\n                  #6&nbsp;<span>COUGNU</span>\n                </small>\n                <small>\n                  #7&nbsp;<span>CRICLE</span>\n                </small>\n                <small>\n                  #8&nbsp;<span>KASA</span>\n                </small>\n                <small>\n                  #9&nbsp;<span>FIFAPP</span>\n                </small>\n                <small>\n                  #10&nbsp;<span>SOG</span>\n                </small>\n                <small>\n                  #11&nbsp;<span>COOSHA</span>\n                </small>\n                <small>\n                  #12&nbsp;<span>Honey</span>\n                </small>\n                \n                \n              </div> */}\n              {/* <Trendingslider/> */}\n              <div className=\"right_side_spacing\">\n        <Container className='px-1'>\n        <div className='row mt-5'>\n           <div className='col-12 col-md-6 col-lg-6 mb-4'>\n                 <div className='card_bg card h-100'>\n            <div className='card-body'>\n            {/* <span class=\"badge badge-kyc-rect mt-0 mb-2 badge_trend_detail\"><span class=\"blk_txt\">#Ontop {}</span></span> */}\n            {this.state.singletrending && <span class=\"badge badge-kyc-rect mt-0 mb-2 badge_trend_detail\"><span class=\"blk_txt\">#OnTop{this.state.singletrending?.position}</span></span>}\n              <div className='row align-items-center pb-4 row_left_res row_left_res_new'>\n                <div className='col-12 col-sm-12 col-md-12 col-xl-8 mb-3 mb-md-0'>\n                <div className='d-flex align-items-center fklex_dircol'>\n                    <div className='d-flex align-items-center'>\n                    <div className='profimg'>\n                    <img src={saleInfo && saleInfo.logo} alt={saleInfo && saleInfo.symbol} className='img_ind_circle'/>\n                       {/* <img src=\"https://bscscan.com/images/svg/brands/bnb.svg?v=1.3\" alt=\"image\" className='img_ind_circle'/> */}\n                   </div>\n                   <span className='sale_deta_name'>\n                    New Private Sale\n                   </span>\n                   </div>\n                   <div>\n                { saleInfo?.owner == localStorage.getItem(\"accountInfo\") ?    \n                   <Link to={`/launchpadedit/${this.state.saleAddress}`}  className='btn_social_new btn_social_new_link ml-2'>\n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                        </Link> : <></>}\n\n                        <button className='btn_social_new ml-2'>\n                        <i class=\"fa fa-globe\" aria-hidden=\"true\"></i>\n                        </button>\n                   </div>\n              \n           \n                </div>\n      \n                  \n                </div>\n                <div className='col-12 col-sm-12 col-md-12 col-xl-4 mb-3 mb-md-0'>\n               \n                    \n                   \n                    <p className='text-right-res-new'>\n                    {/* <button className='btn_social_new mr-2'>\n                        <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\n                        </button> */}\n\n                        {saleInfo && isSaleLive(saleInfo?.startTime,saleInfo?.endTime,saleInfo?.isPresaleOpen)  ?\n                    <span className=\"badge badge-green-rect mt-0\">\n                        <span className='blk_txt'>Live</span>\n                        </span> : ( isUpcoming(saleInfo?.startTime) ? \n                      <span className=\"badge badge-green-rect mt-0\">\n                      <span className='blk_txt'>Upcoming</span>\n                      </span>:\n                       <span className=\"badge badge-green-rect mt-0\">\n                       <span className='blk_txt'>Closed</span>\n                       </span>)\n                  }\n\n                    {/* <span className=\"badge badge-green-rect mt-0\">\n                        <span className='blk_txt'>Upcoming</span>\n                        </span> */}\n                     \n                  \n                    </p>\n \n                    </div>\n             \n              </div>\n         \n\n\n            <div>\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Private Sale Address :</span>\n            <span className='desc_grey_txt font_12'><a href={`https://testnet.bscscan.com/address/${this.state.saleAddress}`} target='_blank'className='desc_grey_txt font_12'>{this?.state?.saleAddress}</a></span>\n            </p>    \n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>1 {this.state.buyToken} :</span>\n            <span className='desc_grey_txt font_12'>{saleInfo && saleInfo.presaleRate} {saleInfo && saleInfo.symbol}\n            </span>\n            </p> \n\n          \n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Softcap :</span>\n            <span className='desc_grey_txt font_12'>{saleInfo && (parseInt(saleInfo?.softCap)/10**18).toFixed(2)} {this?.state?.buyToken}\n            </span>\n            </p> \n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Hardcap :</span>\n            <span className='desc_grey_txt font_12'>{saleInfo && (parseInt(saleInfo?.hardCap)/10**18).toFixed(2)} {this?.state?.buyToken}\n            </span>\n            </p>         \n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Start Time :</span>\n            <span className='desc_grey_txt font_12'>{saleInfo && new Date(saleInfo.startTime*1000).toLocaleDateString()+\"  \"\n             +new Date(saleInfo.startTime*1000).getHours()+\":\"+new Date(saleInfo.startTime*1000).getMinutes()+\":\"\n             +new Date(saleInfo.startTime*1000).getSeconds()+\"(GMT)\"  }\n            </span>\n            </p>   \n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>End Time :</span>\n            <span className='desc_grey_txt font_12'>{saleInfo && new Date(saleInfo.endTime*1000).toLocaleDateString()+\"  \"\n             +new Date(saleInfo.endTime*1000).getHours()+\":\"+new Date(saleInfo.endTime*1000).getMinutes()+\":\"\n             +new Date(saleInfo.endTime*1000).getSeconds()+\"(GMT)\" }\n            </span>\n            </p>          \n\n\n\n            {/* <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>First Release for Project :</span>\n            <span className='desc_grey_txt font_12'>30%\n            </span>\n            </p>   */}\n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Vesting Claim</span>\n            <span className='desc_grey_txt font_12'> {saleInfo && saleInfo.isVested ? 'Enabled' : 'Disabled'}\n            </span>\n            </p>\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Pancake Listing</span>\n            <span className='desc_grey_txt font_12'> {saleInfo && saleInfo.isPancake ? 'Enabled' : 'Disabled'}\n            </span>\n            </p>  \n\n            { saleInfo.isPancake ? \n            <>\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Pancake Rate</span>\n            <span className='desc_grey_txt font_12'> {saleInfo && saleInfo?.pancakeRate}\n            </span>\n</p>\n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Pancake Rate</span>\n            <span className='desc_grey_txt font_12'>  {saleInfo && (saleInfo?.lpUnlockon*1000)/(1000*60*60*24)} Days\n            </span>\n\n           \n            </p> \n            </>  : \n            <></>}\n            {saleInfo && saleInfo.isVested ?\n             <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Vesting for Project :</span>\n            <span className='desc_grey_txt font_12'>{saleInfo && saleInfo.vestingPercent/100} % each {saleInfo && saleInfo.vestingInterval/ONEDAYINSECONDS} Day(s)\n            </span>\n            </p> :<></>} \n       \n            {/* <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Vesting for Project :</span>\n            <span className='desc_grey_txt font_12'>5% each 20 minutes\n            </span>\n            </p>   */}\n       \n                        </div>\n                      \n             </div>\n             </div>\n            </div>\n\n            <div className='col-12 col-md-6 col-lg-6 mb-4'>\n            <div className='card_bg card h-100'>\n            <div className='card-body'>\n            <div className='card_footer_form'>\n                                <div className='d-flex align-items-center justify-content-center'>\n                                <p className='mb-0 pl-3'>Make sure the website is https://cryptolaunchpad.finance/</p>\n                                </div>\n\n                            </div>  \n                            {  saleInfo && isUpcoming(saleInfo.startTime) ?\n                            <>\n                            <p className='text-center sale_deta_name mt-3'>Sale Starts In</p>\n                            <div className='countdown_new text-center'>\n                            {console.log(\"Salediffernce(saleInfo.endTime)\",UpcomingDiffernce(saleInfo.startTime))}\n                            <Countdown date={Date.now() +  (UpcomingDiffernce(saleInfo.startTime))}  renderer={renderer} className=\"countdown_grey\" />\n                            </div>\n                            </> : \n\n                    (saleInfo && isSaleLive(saleInfo.startTime,saleInfo.endTime,saleInfo.isPresaleOpen)  ?  \n                    <>\n                    <p className='text-center sale_deta_name mt-3'>Sale Ends In</p>\n                    <div className='countdown_new text-center'>\n                    {console.log(\"Salediffernce(saleInfo.endTime)\",Salediffernce(saleInfo.endTime))}\n                    <Countdown date={Date.now() +  Salediffernce(saleInfo?.endTime)}  renderer={renderer} className=\"countdown_grey\" />\n                    </div>\n                    </>:\n                    <>\n                    <p className='text-center sale_deta_name mt-3'>Sale Ends In</p>\n                    <div className='countdown_new text-center'>\n                    <p className='text-center sale_deta_name mt-3'>Not Live</p>\n                    </div>\n                  </>)}\n                  {console.log(\"parseInt(parseInt(saleInfo?.earnedCap)/parseInt(saleInfo?.hardCap) * 100)\" , saleInfo)}\n                  {saleInfo?.LaunchpadType ?\n<>\n                          <ProgressBar now={saleInfo && parseInt(parseInt(saleInfo?.earnedCap)/parseInt(saleInfo?.softCap) * 100)} className='yellow_bar mt-3'/>\n            <p className='white_txt_sm d-flex justify-content-between mt-1'>\n               <span className='desc_grey_txt'>{saleInfo && parseInt(parseInt(saleInfo?.earnedCap)/parseInt(saleInfo?.softCap) * 100)} % </span>\n               <span className='desc_grey_txt'>{saleInfo && ((saleInfo?.earnedCap)/10**this.state.buyTokenDecimal).toFixed(3)}/{(parseInt(saleInfo.softCap)/10**this.state.buyTokenDecimal).toFixed(2)} {this.state.buyToken}</span>\n                </p>             <p className='input_desc_sm'>Amount (Min: {saleInfo && saleInfo?.minEthLimit / 10 ** this.state.buyTokenDecimal} & Max: {saleInfo && saleInfo?.maxEthLimit / 10 ** this.state.buyTokenDecimal}  {this.state.buyToken})</p>\n              <p className='input_desc_sm'>You Will Get : {this.state.claim} {this.state.saleInfo?.name}</p>\n              </>\n   \n : <>\n <ProgressBar now={saleInfo && parseInt(parseInt(saleInfo?.earnedCap)/parseInt(saleInfo?.softCap) * 100)} className='yellow_bar mt-3'/>\n<p className='white_txt_sm d-flex justify-content-between mt-1'>\n<span className='desc_grey_txt'>{saleInfo && parseInt(parseInt(saleInfo?.earnedCap)/parseInt(saleInfo?.softCap) * 100)} % </span>\n<span className='desc_grey_txt'>{saleInfo && ((saleInfo?.earnedCap)/10**this.state.buyTokenDecimal).toFixed(3)}/{(parseInt(saleInfo.softCap)/10**this.state.buyTokenDecimal).toFixed(2)} {this.state.buyToken}</span>\n</p>             <p className='input_desc_sm'>Amount (Min: {saleInfo && saleInfo?.minEthLimit / 10 ** this.state.buyTokenDecimal} & Max: {saleInfo && saleInfo?.maxEthLimit / 10 ** this.state.buyTokenDecimal}  {this.state.buyToken})</p>\n{/* <p className='input_desc_sm'>You Will Get : {this.state.claim} {this.state.saleInfo?.name}</p> */}\n</>} \n               <p className='input_desc_sm'>You Will Get : {this.state.claim} {this.state.saleInfo?.name}</p>\n\n                {/* {this?.state?.claim} {this.state.saleInfo?.name} */}\n\n                <div className=\"inputs input-groups date_inoput_grps\">\n                        <InputGroup className=\"datepicker_input\">\n                        <FormControl id=\"amountmax\" placeholder=\"0.0\"\n                                aria-describedby=\"basic-addon2\"\n                                value={this.state.amount}\n                              onChange={(e)=> { this.setState({ amount: e.target.value });this.calculateToken(e.target.value);}}\n                            />\n                          \n                        </InputGroup>\n                        <InputGroup.Append className='cur_pointer'>\n                                <button variant=\"outline-secondary\" className=\"trans_cal_btn\"\n                                  onClick={async()=> {await this.max();await this.calculateToken(this.state.amount)}}\n                                >\n                                Max\n                                </button>\n                            </InputGroup.Append>\n                    </div>\n                   \n                    {/* { saleInfo && isSaleLive(saleInfo.startTime,saleInfo.endTime,saleInfo.isPresaleOpen) || isUpcoming(saleInfo.startTime,saleInfo.endTime) ? \n                    <button onClick={this.buy.bind(this)}disabled={ saleInfo && saleInfo.isWhitelisted ? userData && !(userData.userWhitelistedAmount > 0) : false } className=\"get-started-btn\">{saleInfo && saleInfo.isWhitelisted ? (userData && !(userData.userWhitelistedAmount > 0) ? \"Not Whitelisted\" : \"Buy\"):\"Buy\"} with {this.state.buyToken} </button>:\n                    // (isUpcoming(saleInfo.startTime,saleInfo.endTime) ? <button disabled={true} className=\"get-started-btn mr-2\" > Upcoming </button> :\n                    ((!isSaleLive(saleInfo.startTime,saleInfo.endTime) ?<button disabled={true} className=\"get-started-btn mr-2\" > Sale InActive </button>:<button onClick={this.buy.bind(this)} className=\"get-started-btn\" > Buy </button>))\n                    } */}\n\n\n{saleInfo.buytype ?\n\n                   <> \n                    { saleInfo && isSaleLive(saleInfo.startTime,saleInfo.endTime,saleInfo.isPresaleOpen) || isUpcoming(saleInfo.startTime,saleInfo.endTime)? \n                      <button onClick={this.buy.bind(this)}disabled={ saleInfo && saleInfo.isWhitelisted ? userData && !(userData.userWhitelistedAmount > 0) : false } className=\"get-started-btn\">{saleInfo && saleInfo.isWhitelisted ? (userData && !(userData.userWhitelistedAmount > 0) ? \"Not Whitelisted\" : \"Buy\"):\"Buy\"} with {this.state.buyToken} </button>:\n                      // (isUpcoming(saleInfo.startTime,saleInfo.endTime) ? <button disabled={true} className=\"get-started-btn mr-2\" > Upcoming </button> :\n                      ((!isSaleLive(saleInfo.startTime,saleInfo.endTime) ?<button disabled={true} className=\"get-started-btn mr-2\" > Sale InActive </button>:<button onClick={this.buy.bind(this)} className=\"get-started-btn\" > Buy </button>))\n                      }\n                      </> : \n                      \n\n\n                      <>\n                      {!this.state.approvebutton ?\n                        <button className=\"get-started-btn\" onClick={()=>{this.approvetoken()}}>\n                           Approve\n                        </button>  : \n                        <>\n                        { saleInfo && isSaleLive(saleInfo.startTime,saleInfo.endTime,saleInfo.isPresaleOpen) || isUpcoming(saleInfo.startTime,saleInfo.endTime)? \n                          <button onClick={this.buy.bind(this)}disabled={ saleInfo && saleInfo.isWhitelisted ? userData && !(userData.userWhitelistedAmount > 0) : false } className=\"get-started-btn\">{saleInfo && saleInfo.isWhitelisted ? (userData && !(userData.userWhitelistedAmount > 0) ? \"Not Whitelisted\" : \"Buy\"):\"Buy\"} with {this.state.buyToken} </button>:\n                          // (isUpcoming(saleInfo.startTime,saleInfo.endTime) ? <button disabled={true} className=\"get-started-btn mr-2\" > Upcoming </button> :\n                          ((!isSaleLive(saleInfo.startTime,saleInfo.endTime) ?<button disabled={true} className=\"get-started-btn mr-2\" > Sale InActive </button>:<button onClick={this.buy.bind(this)} className=\"get-started-btn\" > Buy </button>))\n                          }\n                          </>\n                        }</>}\n\n                    { saleInfo && saleInfo.isVested ?\n                    <button  className=\"get-started-btn mt-3\"  disabled = {!this.state.saleInfo?.isClaimable}>Vested  {this.state.saleInfo?.symbol} </button>:\n                    (saleInfo && saleInfo.isClaimable ? \n             \n                    <button  onClick={() => this.Claim()} disabled = {!this.state.saleInfo?.isClaimable} className=\"get-started-btn mt-3\"> Claim  {this.state.saleInfo?.symbol}  </button> :\n                    <button onClick={() => this.Claim()} disabled = {!this.state.saleInfo?.isClaimable} className=\"get-started-btn mt-3\"> Claim  {this.state.saleInfo?.symbol}  </button>)}\n\n                </div>\n                </div>\n                </div>\n        </div>\n\n                <div className='row'>\n                <div className='col-12 col-md-6 col-lg-6 mb-4'>\n                <div className='card_bg card h-100'>\n            <div className='card-body'>\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Token Address :</span>\n            <span><a href={`https://testnet.bscscan.com/address/${saleInfo && saleInfo?.tokenAddress}`} target='_blank'className='desc_grey_txt font_12'>{saleInfo && saleInfo?.tokenAddress}</a></span>\n            </p> \n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Access Type:</span>\n            {saleInfo && saleInfo?.isWhitelisted ?\n            <span className='desc_grey_txt font_12'>Private</span> :\n           \n           \n             <span className='desc_grey_txt font_12'>Public</span>}\n             </p>\n             <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Status :</span>\n  {saleInfo && isSaleLive(saleInfo?.startTime,saleInfo?.endTime,saleInfo?.isPresaleOpen)  ?\n            <span className='desc_grey_txt font_12'>Live</span> : \n            ( isUpcoming(saleInfo?.startTime) ? \n            <span className='desc_grey_txt font_12'>Upcoming</span> :\n            <span className='desc_grey_txt font_12'>Closed</span> )}\n            </p>\n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Minimum Buy :</span>\n            <span className='desc_grey_txt font_12'>{saleInfo && (parseInt(saleInfo.minEthLimit)/10**this.state.buyTokenDecimal)}  {this.state.buyToken}</span>\n            </p> \n{console.log(\"minimum buy\" , this.state.buyTokenDecimal)}\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Maximum Buy :</span>\n            <span className='desc_grey_txt font_12'>{(saleInfo && saleInfo?.maxEthLimit / 10 ** this?.state?.buyTokenDecimal)}  {this.state.buyToken}</span>\n            </p>  \n{console.log(\"this?.state?.buyTokenDecimal\" , this?.state?.buyTokenDecimal)}\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>You Purchased :</span>\n            {console.log(\"userData.userClaimbale\",userData?.userClaimbale)}\n            <span className='desc_grey_txt font_12'> {userData && (parseInt(userData?.userClaimbale)/10**parseInt(saleInfo.decimals)).toFixed(2)} {saleInfo && saleInfo.symbol}</span>\n            </p>\n\n            {saleInfo?.LaunchpadType &&  <><p className='text-white mt-4'>Token Metrics</p>\n            {console.log(\"[((saleInfo?.hardCap/10**this.state.charttokendecimal) * saleInfo?.presaleRate) , ((saleInfo?.hardCap/10**this.state.charttokendecimal) * saleInfo?.presaleRate)-(this.state.unsoldtoken) , this.state.unsoldtoken , this.state.liqtoken]\" , [((saleInfo?.hardCap/10**this.state.charttokendecimal) * saleInfo?.presaleRate) , \n                   ((saleInfo?.hardCap/10**this.state.charttokendecimal) * saleInfo?.presaleRate)-(this.state.unsoldtoken) , this.state.unsoldtoken , this.state.liqtoken])}\n            {this.state.chartstatus && <Chart options={this.state.options} \n                   series={[((saleInfo?.hardCap/10**this.state.charttokendecimal) * saleInfo?.presaleRate) , \n                   ((saleInfo?.hardCap/10**this.state.charttokendecimal) * saleInfo?.presaleRate)-(this.state.unsoldtoken) , this.state.unsoldtoken , this.state.liqtoken]}\n                className=\"chart_donut_res\" type=\"donut\" />}</>}\n                </div>\n                </div>\n</div>\n<div className={saleInfo?.owner == getAccount()?'col-12 col-md-6 col-lg-6 mb-4': \"d-none\"}>\n                <div className='card_bg card h-100'>\n            <div className={'card-body' }>\n                <p className='text-white'>Owner Zone</p>\n                <hr className='hr_green' />\n                <div className='col-12 col-md-12 mb-3 px-0'>\n                        <p className='input_desc_sm'>Sale Type</p>\n                      \n                        <div className=\"custom-control custom-radio mb-2\">\n                    <input type=\"radio\" id=\"customRadio1\" name=\"customRadio\" className=\"custom-control-input\"\n                    checked={saleInfo && saleInfo?.isWhitelisted ? false : true}\n                    />\n                    <label className=\"custom-control-label\" for=\"customRadio1\">Public</label>\n                    </div>   \n\n                    <div className=\"custom-control custom-radio mb-2\">\n                    <input type=\"radio\" id=\"customRadio2\" name=\"customRadio\" className=\"custom-control-input\"\n                       checked={saleInfo && saleInfo?.isWhitelisted ? true : false}\n                    />\n                    <label className=\"custom-control-label\" for=\"customRadio2\">Whitelist</label>\n                    </div>  \n\n                    {/* <div className=\"custom-control custom-radio\">\n                    <input type=\"radio\" id=\"customRadio3\" name=\"customRadio\" className=\"custom-control-input\" />\n                    <label className=\"custom-control-label\" for=\"customRadio3\">Public Anti-Bot</label>\n                    </div>                 */}\n                        </div>\n                        {this.state.iswhitelisted?\n                         <div className='whitelist_div'>\n                        <button className=\"get-started-btn w-100 mb-2\" onClick={() => this.setState({ whitelistModal: true })}>\n                          Add users to whitelist\n                        </button>\n                        <button className=\"get-started-btn w-100 mb-2\" onClick={() => this.setState({ removewhitelistModal: true })}>\n                          Remove users from whitelist\n                        </button>\n                        {/* <button className=\"get-started-btn w-100 mb-2\" onClick={() => this.setState({ changestatueModal: true })}>\n                          Setting time to public\n                        </button> */}\n                        {saleInfo && saleInfo?.isWhitelisted ? \n                        <button onClick={() => this.Handlewhitelist(false)} className=\"get-started-btn w-100 mb-2\">\n                          Disable whitelist\n                        </button> :\n                        <button onClick={() => this.Handlewhitelist(true)} className=\"get-started-btn w-100 mb-2\">\n                        Enable whitelist\n                      </button>}\n                      \n                         </div>\n                        :\n                        \"\"}\n\n                        <div className='col-12 col-md-12 mb-3 px-0'>\n                        <p className='input_desc_sm'>Pool Actions</p>\n                        <button onClick={()=> this.stopSaleEvent()}className=\"get-started-btn w-100 mb-2\"\n                        //  disabled = {!saleInfo.isPresaleOpen}\n                        >\n                          Stop Sale\n                        </button>\n                        <button className=\"get-started-btn w-100 mb-2\" \n                        onClick={() =>this.Finalisesale()}\n                        >\n                           Finalize\n                        </button>\n                        <button onClick={()=> this.withdrawToken()} className=\"get-started-btn w-100 mb-2\" >\n                         Get Unsold {this.state.saleInfo?.symbol}\n                        </button>\n                        \n                        <button onClick={() => this.BNBwithdraw()} className=\"get-started-btn w-100 mb-2\">\n                          Withdraw {this.state.buyToken}\n                        </button> \n                        </div>\n                </div>\n                </div>\n                </div>\n            </div>\n        \n\n                \n               \n\n        </Container>\n\n            <Container className='pb-5 px-0 mt-4'>\n                 \n                 <center>\n                   <small className=\"mt-3 bottom_text\">\n                     Disclaimer: The information provided shall not in any way\n                     constitute a recomendation as to whether you should invest\n                     in any product discussed. We accept no liability for any\n                     loss occasioned to any person acting or refraining from\n                     action as a result of any material provided or published.\n                   </small>\n                 </center>\n               </Container>\n               </div>\n            </div>\n           </div>\n           </div>\n           {whitelistModal && <WhitelistModal saleAddress = {saleInfo.saleAddress} onDismiss={() => this.setState({ whitelistModal: false })} /> }\n           {removewhitelistModal && <RemoveWhitelistmodal saleAddress = {saleInfo.saleAddress} onDismiss={() => this.setState({ removewhitelistModal: false })} /> }\n           {changestatueModal && <ChangeStatusmodal saleAddress = {saleInfo.saleAddress} onDismiss={() => this.setState({ changestatueModal: false })} /> }\n        </div>\n        </div>\n        )\n    }\n}\n\nexport default PrivatesaleDetail","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/Adminkyc.js",["794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\n\nimport Adminheader from './Adminheader';\nimport Adminsidebar from './Adminsidebar';\nimport Kycmodal from \"./Kycmodal\";\n\n\nimport Web3 from \"web3\";\nimport '../../css/styles.css';\n\nimport coin from \"../../images/coin.png\"\nimport favicon from \"../../images/favicon.png\"\n\nimport loader from \"../../images/loader.gif\"\nimport { Dropdown, Nav, Tab, Row, Col, Container, ProgressBar, InputGroup,Form } from 'react-bootstrap';\nimport { getallkychook } from '../../hooks/usebackend';\nconst cookies = new Cookies();\nclass Adminkyc extends Component {\n   \n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.5;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n\n\n\n  }\n  \n    componentDidMount()\n    {\n      this.restrict();\n      // this.showLoader();\n     this.hideLoader();\n     this.handlegetallkyc()\n    }\n  //  componentWillReceiveProps(nextprops){\n  //   this.handlegetallkyc()\n  //  }\n\n  restrict = async()=>{\n    var email = cookies.get('cryp-launch-admin-email');\n    console.log(\"email\" , email);\n    if(!email){\n      this.props.history.push(\"/login\")\n    }\n  }\n   \n    constructor(props) {\n      super(props);\n      this.state = {  \n        kycModal: false,\n        kycdetails : [],\n        singlekyc : {},\n        skip : 0,\n        limit : 10,\n        pagecount : 0,\n        button : 0,\n        currentpage : 1,\n\n        stepcount : 5\n      };\n    }\n\n    handlegetallkyc = async()=>{\n        let payload = {\n          limit : this?.state?.limit ,\n          skip : this.state.skip\n        }\n        let data = await getallkychook(payload);\n        console.log(\"data\" , data?.data?.data?.record);\n        // if(data?.data?.data?.record != this.state.kycdetails)\n        this.setState({\"kycdetails\" : data?.data?.data?.record})\n        \n        let counts = Math.ceil(data?.data?.data?.count/10);\n        // this.setState({\"count\" : counts})\n        this.setState({\"pagecount\" : counts})\n        // console.log(\"counts\" , counts , data?.data?.data?.count/10);\n        // if(counts < 5){\n        //   this.setState({\"stepcount\":counts})\n        // }\n    }\n\n    handlenextpage = async()=>{\n      let payload = {\n        limit : this.state.limit,\n        skip : this.state.skip + this.state.limit\n      }\n      let data = await getallkychook(payload);\n        console.log(\"data\" , data?.data?.data?.record);\n        this.setState({\"kycdetails\" : data?.data?.data?.record})\n      if(this.state.currentpage %5 == 0){\n        this.setState({\"button\" : this.state.button + 5})\n        // if(this.state.pagecount )\n      }\n      this.setState({\"skip\" : this.state.skip + this.state.limit})\n      this.setState({\"currentpage\" : this.state.currentpage+1})\n    }\n\n    handleprevpage = async()=>{\n      let payload = {\n        limit : this.state.limit,\n        skip : this.state.skip - this.state.limit\n      }\n      let data = await getallkychook(payload);\n        console.log(\"data\" , data?.data?.data?.record);\n        this.setState({\"kycdetails\" : data?.data?.data?.record})\n      if((this.state.currentpage-1) %5 == 0){\n        this.setState({\"button\" : this.state.button - 5})\n        // if(this.state.pagecount )\n      }\n      this.setState({\"skip\" : this.state.skip - this.state.limit});\n      this.setState({\"currentpage\" : this.state.currentpage-1});\n    }\n\n    handlenumpage = async(val) => {\n      this.setState({\"currentpage\" : parseInt(val)})\n      let payload = {\n        limit : this.state.limit,\n        skip : (parseInt(val)*10)-10\n      }\n      \n      let data = await getallkychook(payload);\n        console.log(\"data\" , data?.data?.data?.record);\n        this.setState({\"kycdetails\" : data?.data?.data?.record})\n      this.setState({\"skip\" :(parseInt(val)*10)-10 })\n      \n    }\n\n    \n\n    \n    onDismiss(){\n        this.setState({ kycModal: false });\n        this.handlegetallkyc()\n    }\n\n\n    render() {\n     \n\n      const location = this.props.location.pathname.split('/')[1];\n\n      const {kycModal } = this.state\n      \n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n      \n\n           <Adminheader />\n        \n           <div className=\"whole_sec pb-5\">\n            <div className='flex_side_right'>\n            <Adminsidebar />\n           {/* ongoing_sec */}\n           <div className='right_side_sec'>\n        \n              <div className=\"right_side_spacing\">\n               <div className='ongoing_sec proj_bg pb-5'>\n            <div className=\"container px-1\">\n                <div className='top_heqad_sec mt-5 mt-md-0'>\n                   \n                  <div className=\"row\">\n                      <div className=\"col-12 col-md-12 flex_cen_col mt-md-5 mb-md-4\">\n                        <p className=\"banner_subtitle form_subhead\">KYC List</p>\n\n                       \n                        {/* <hr className='hr_yellow mt-5'/> */}\n                      </div>\n                    \n                  </div>\n                </div>\n            </div>\n           \n            <div className=\"inner_bg\">\n            <div className=\"container px-1\">\n            <Tab.Container  defaultActiveKey=\"second\">\n  <Row className=\"container-fluid w-100 mx-0 px-0\">\n \n\n    <Col lg={12} className=\"img_center_lg px-0\">\n    <div className='container container_custom px-0'>\n      <Tab.Content>\n        \n      \n        <Tab.Pane eventKey=\"second\">\n               \n        <div class=\"table-responsive\">\n  <table className=\"table recepients_table\">\n    <thead>\n    <tr>\n      <th>Username</th>\n      <th>Status</th>\n    </tr>\n    </thead>\n    {this?.state?.kycdetails && this?.state?.kycdetails?.map((item , i)=> item?.proof?.length > 0 &&<>\n      <tr>\n      <td>\n     \n    \n        <div className=\"p-0 table_det\">\n          <span className=\"table_text\">{item?.walletaddress}</span>\n    \n      </div>\n      </td>\n      <td>{item?.proof[0]?.status}</td>\n      <td className=\"d-flex justify-content-end\"><a className=\"link_text\" onClick={() => {\n        this.setState({ kycModal: true });\n        this.setState({\"singlekyc\" : item})\n        }}>View</a></td>\n      \n    </tr>\n    </>)}\n    \n\n\n    {/* <tr>\n      <td>\n     \n    \n        <div className=\"p-0 table_det\">\n          <span className=\"table_text\">Chainscan</span>\n    \n      </div>\n      </td>\n      <td>Rejected</td>\n      <td className=\"d-flex justify-content-end\"><a className=\"link_text\" onClick={() => this.setState({ kycModal: true })}>View</a></td>\n      \n    </tr>\n    <tr>\n      <td>\n     \n    \n        <div className=\"p-0 table_det\">\n          <span className=\"table_text\">Chainscan</span>\n    \n      </div>\n      </td>\n      <td>Approved</td>\n      <td className=\"d-flex justify-content-end\"><a className=\"link_text\" onClick={() => this.setState({ kycModal: true })}>View</a></td>\n      \n    </tr> */}\n   \n  </table>\n</div>\n<div className=\"mt-2 d-flex justify-content-center align-items-center btn_pagin_wrap\">\n<button className=\"pagination_btn\"\nonClick={this.handleprevpage}\ndisabled ={this.state.currentpage == 1}\n><i class=\"fa fa-angle-left\" aria-hidden=\"true\" \n\n\n></i></button>\n{/* {[...Array(this.state.stepcount)].map((val,i)=>{\n  if((this.state.button+i+1) <=this.state.pagecount)\n    return(\n<button className=\"pagination_btn\" value = {this.state.button+i+1} onClick={\n    (e)=>{\n      console.log(\"e\" , e?.target?.value);\n      this.handlenumpage(e?.target?.value)\n    }\n    }>{this.state.button+i+1}</button>\n    )\n  \n})} */}\n{[...Array(this.state.stepcount)].map((val,i)=>{\n  if((this.state.button+i+1) <=this.state.pagecount)\n  return(\n  <button className={this.state.currentpage==(this.state.button+i+1)?\"pagination_btn active\" : \"pagination_btn\"} value = {this.state.button+i+1} onClick={\n    (e)=>{\n      console.log(\"e\" , e?.target?.value);\n      this.handlenumpage(e?.target?.value)\n    }\n    }>{this.state.button+i+1}</button>\n)\n}\n\n)}\n\n\n  {/* <button className=\"pagination_btn\" value = {this.state.button+1} onClick={\n    (e)=>{\n      console.log(\"e\" , e?.target?.value);\n      this.handlenumgetallkyc(e?.target?.value)\n    }\n    // this.handlenumgetallkyc\n    }>{this.state.button+1}</button>\n  <button className=\"pagination_btn\"value = {this.state.button+2} onClick={\n    (e)=>{\n      console.log(\"e\" , e?.target?.value);\n      this.handlenumgetallkyc(e?.target?.value)\n    }}\n  >{this.state.button+2}</button>\n  <button className=\"pagination_btn\"value = {this.state.button+3} onClick={\n    (e)=>{\n      console.log(\"e\" , e?.target?.value);\n      this.handlenumgetallkyc(e?.target?.value)\n    }}\n  >{this.state.button+3}</button>\n  <button className=\"pagination_btn\"value = {this.state.button+4} onClick={\n    (e)=>{\n      console.log(\"e\" , e?.target?.value);\n      this.handlenumgetallkyc(e?.target?.value)\n    }}\n  \n  >{this.state.button+4}</button>\n  <button className=\"pagination_btn\"value = {this.state.button+5} onClick={\n    (e)=>{\n      console.log(\"e\" , e?.target?.value);\n      this.handlenumgetallkyc(e?.target?.value)\n    }}\n  \n  >{this.state.button+5}</button> */}\n\n  \n  <button className=\"pagination_btn\"\n  onClick={this.handlenextpage}\n  disabled ={this.state.currentpage == this.state.pagecount}\n  ><i class=\"fa fa-angle-right\" aria-hidden=\"true\"\n    \n  ></i></button>\n</div>\n        </Tab.Pane>\n     \n       \n      </Tab.Content>\n      </div>\n    </Col>\n  </Row>\n</Tab.Container>\n\n              \n                </div>\n            </div>\n            </div>\n            {/* end ongoing_sec */}\n\n            </div>\n            </div>\n            </div>\n            </div>\n            {kycModal && <Kycmodal detail = {this.state.singlekyc} onDismiss={()=>this.onDismiss()} /> }\n            {/* <Footer /> */}\n        </div>\n        </div>\n        )\n    }\n}\n\nexport default Adminkyc","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/Login.js",["816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831"],"import React, { Component } from \"react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\nimport Cookies from 'universal-cookie';\n\nimport \"../../css/styles.css\";\n\nimport logo_grad from \"../../images/logo_grad.png\";\n\n\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  ProgressBar,\n  InputGroup,\n  FormControl,\n  Tab,\n  Nav\n} from \"react-bootstrap\";\nimport { validatelogin } from \"../../hooks/kycvalidation\";\nimport { loginhook } from \"../../hooks/usebackend\";\nimport toast from \"react-hot-toast\";\nconst cookies = new Cookies();\nclass Login extends Component {\n  \n \n  constructor(props) {\n    super(props);\n    this.state = {\n      proxy: [],\n      totalSales: [],\n      onGoingSales: [],\n      upComingSales: [],\n      isSearch: false,\n      searchSale: [],\n      search: \"\",\n      interval: 3,\n      loadInterval: 3,\n      searchInterval: 3,\n      searchProxy: [],\n      isLoading: false,\n      currentChain: 0,\n      setUpdateCms: false,\n      email : \"\",\n      password : \"\",\n      passwordeye : false,\n      errors : {}\n    };\n   \n  }\n\n  componentDidMount(){\n    this.restrict();\n  }\n\n  restrict = async()=>{\n    var email = cookies.get('cryp-launch-admin-email');\n    console.log(\"email\" , email);\n    if(email){\n      this.props.history.push(\"/adminlaunchpad\")\n    }\n  }\n  \n   showPassword = (e) => {\n\n    var e = document.getElementById(\"password\");\n    if (e.type === \"password\") {\n        this.setState({\"passwordeye\" : true})\n        e.type = \"text\";\n    } else {\n      this.setState({\"passwordeye\" : false})\n        e.type = \"password\";\n    }\n};\n\nhandlelogin = async()=>{\n  let payload = {\n    email : this.state.email,\n    password : this.state.password\n  }\n\n  let validate = await validatelogin(payload);\n  if(validate.isValid){\n    var loged = await loginhook(payload);\n    if(loged?.data?.data?.success == \"false\" || !loged?.data?.data?.success){\n      toast.error(\"Invalid Credential!\")\n    }else {\n      console.log(\"loginhook\" , loged);\n      window.location.href = window.location.origin + \"/adminlaunchpad\"\n    }\n   \n  }\n  else{\n    this.setState({\"errors\" : validate?.errors})\n  }\n}\n\n\n\n\n  render() {\n \n\n    return (\n      <div id=\"loader_main\">\n      \n        <div className=\"logo_overlay\" id=\"logo_overlay\" style={{opacity:1}}>\n          {/* <Header /> */}\n\n          <div className=\"whole_sec pb-5\">\n            <div>\n          \n            <Container className=\"container\">\n                  <div className=\"coming_soon login_text\">\n                  <div className='row'>\n           <div className='col-10 col-sm-8 col-md-8 col-lg-9 mx-auto'>\n            <div className=\"text-center\">\n                   <img src={logo_grad} className=\"img-fluid logo_grad_width\" />\n                   </div>\n                   <div className='card_bg card mt-5'>\n            <div className='card-body'>\n            <div className='row'>\n\n<div className='col-12 col-md-12 mb-3'>\n        \n        \n        <p class=\"text-white\">Login</p>\n        <hr class=\"hr_green mb-0\"></hr>       \n      \n            </div>\n         \n\n      <div className='col-12 col-md-12 mt-3 mb-0'>\n        \n        <p className='input_desc_sm'>Email Address</p>\n        <div className=\"inputs input-groups\">\n        <InputGroup className=\"\">\n            <FormControl id=\"email\" placeholder=\"Enter your email\"\n                aria-describedby=\"basic-addon2\"\n                onChange={(e)=>{\n                  this.setState({\"email\" : e?.target?.value})\n                }}\n            />\n          \n        </InputGroup>\n        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.email}</span>\n    </div>   \n            </div>\n\n\n            <div className='col-12 col-md-12 mt-3 mb-0'>\n        \n        <p className='input_desc_sm'>Password</p>\n        <div className=\"inputs input-groups\">\n        <InputGroup className=\"\">\n        <InputGroup.Text ><span className='fa fa-key'></span></InputGroup.Text>\n            <FormControl id=\"password\" placeholder=\"Enter your password\" type = \"password\"\n                aria-describedby=\"basic-addon2\"\n                onChange={(e)=>{\n                  this.setState({\"password\" : e?.target?.value})\n                }}\n            />\n          {!this.state.passwordeye ? \n        <InputGroup.Text><span className='fa fa-eye-slash' onClick={this.showPassword}></span></InputGroup.Text>\n        :<InputGroup.Text><span className='fa fa-eye' onClick={this.showPassword}></span></InputGroup.Text>\n        }\n        </InputGroup>\n        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.password}</span>\n    </div>\n    \n            </div>\n\n           \n            <center className='mt-4 mx-auto'>\n            <button className=\"get-started-btn mr-3\" onClick={this.handlelogin}>Login</button>\n            </center>\n</div>\n                </div>\n                </div>\n                </div>\n                </div>\n                  </div>                \n                </Container>\n            </div>\n          </div>\n          {/* <Footer /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/Adminlaunchpad.js",["832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\n\nimport Adminheader from './Adminheader';\nimport Adminsidebar from './Adminsidebar';\nimport Cookies from 'universal-cookie';\n\nimport Web3 from \"web3\";\nimport '../../css/styles.css';\n\nimport coin from \"../../images/coin.png\"\nimport favicon from \"../../images/favicon.png\"\n\nimport loader from \"../../images/loader.gif\"\nimport { Dropdown, Nav, Tab, Row, Col, Container, ProgressBar, InputGroup,Form } from 'react-bootstrap';\nimport { getlaunchpaddatalimit, getPrivatesaleCardLimit, getSaleCardsLimit, getTotalSalesInfo, isSaleLive, isUpcoming, searchCards } from '../../hooks/useProjects';\nimport { DeletePresale, UseTokenInfo } from '../../hooks/useContract';\nimport { getAccount } from '../../hooks/useAccount';\nimport { admintokenfilterlaunchpad, tokenfilter, tokenfilterlaunchpad } from '../../hooks/filter';\nconst cookies = new Cookies();\n\nclass Adminlaunchpad extends Component {\n   \n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.5;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n\n\n\n  }\n\n  closeAllMenusStatus()\n  {\n    this.setState({closeKycmenu:true});\n    this.setState({closeHcmenu:true});\n    this.setState({closeCoinmenu:true});\n  }\n\n  closeAllMenusKyc()\n  {\n    this.setState({closeStatusmenu:true});\n    this.setState({closeHcmenu:true});\n    this.setState({closeCoinmenu:true});\n  }\n\n  closeAllMenusCoin()\n  {\n    this.setState({closeStatusmenu:true});\n    this.setState({closeHcmenu:true});\n    this.setState({closeKycmenu:true});  \n  }\n\n  \n  closeAllMenusHc()\n  {\n    this.setState({closeStatusmenu:true});\n    this.setState({closeCoinmenu:true});\n    this.setState({closeKycmenu:true});  \n  }\n  \n    componentDidMount()\n    {\n      this.restrict()\n      // this.showLoader();\n     this.hideLoader();\n    this.gettotalsalesinfo();\n\n  \n    }\n\n    restrict = async()=>{\n      var email = cookies.get('cryp-launch-admin-email');\n      console.log(\"email\" , email);\n      if(!email){\n        this.props.history.push(\"/login\")\n      }\n    }\n\n    gettotalsalesinfo = async()=>{\n      this.showLoader();\n        const totalproxydata = await getTotalSalesInfo();\n        console.log(\"Proxydata\",totalproxydata);\n        // const totalproxydata = Proxydata.filter(data => data._isWhitelisted == true)\n        console.log(\"total proxy data\" , totalproxydata);\n        this.setState({ proxy : totalproxydata })\n        this.setState({ original : totalproxydata })\n        const total = await getlaunchpaddatalimit(totalproxydata , 0 , this.state.loadInterval);\n        // const total = await getPrivatesaleCardLimit(Proxydata,0,this.state.interval , this.state.isuser);\n        // console.log(\"button \" ,Proxydata?.length , total.index );\n        // if(Proxydata?.length == total.index || !total){\n        //   this.setState({button : false})\n        // }\n        // await this.sleep(1000)\n        //  this.setState({ totalSales: total.saleInfoCards });  \n        //  this.setState({ interval: total.index+1 }); \n        console.log(\"limittotal\" , total);\n        this.setState({ totalSales: total });  \n         this.setState({ interval: this.state.loadinterval}); \n        this.hideLoader();\n    }\n    viewmore = async()=>{\n      console.log(\"Lad moreee\",this.state.totalSales.length < this.state.proxy.length)\n      this.setState({ isLoading: true});\n      console.log(\"getlaunchpad datalimit\" , this.state.interval,this.state.loadInterval );\n      const newly = await getlaunchpaddatalimit(this.state.proxy,this.state.interval,this.state.interval+this.state.loadInterval );\n      console.log(\"newly \" , newly);\n      const total = this.state.totalSales.concat(newly);\n      this.setState({ totalSales: total,interval: this.state.interval+this.state.loadInterval });\n       this.setState({ isLoading: false});  \n    }\n    sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n   \n    // constructor(props) {\n    //   super(props);\n    //   this.state = { \n    //     original : [], \n    //     proxy : [],\n    //    salesinfo : [],\n    //    interval : 3,\n    //    loadInterval : 3,\n    //   //  interval : 3,\n    //    record : 3,\n    //    isLoading : false,\n    //    //filter\n    //    token : [],\n    //    hc : [],\n    //    coin : [],\n    //    status : [],\n    //    closeHcmenu:false,\n    //    closeCoinmenu:false,\n    //    closeKycmenu:false,\n    //    closeStatusmenu:false,\n    //    issearch : false,\n    //    search : \"\",\n      \n      \n    //   };\n    // }\n    constructor(props) {\n      super(props);\n      this.state = {  \n        original : [],\n        proxy: [],        \n        totalSales: [],\n        onGoingSales: [],\n        upComingSales: [],\n        isSearch: false,\n        searchSale: [],\n        search: '',\n        interval: 3,\n        loadInterval: 3,\n        searchInterval: 3,\n        searchProxy: [],\n        isLoading: false,\n        currentChain: 0,\n        closeHcmenu:false,\n        closeCoinmenu:false,\n        closeKycmenu:false,\n        closeStatusmenu:false,\n        isuser : false,\n        button : true,\n        loadinterval : 3,\n\n        mycontribution : [],\n        accountInfo : getAccount(),\n        filterdata : \"All Status\",\n        sortdata : \"No Filter\",\n        coin : [],\n        status : [],\n        type : []\n      \n      };\n    }\n    async handleChange(e){\n      if((e.target.value).length > 0){\n            if (e.key === 'Enter') {\n            console.log(\"Search : \",e.target.value)\n            this.showLoader();\n            const searchS = await searchCards(this.state.proxy,e.target.value);\n            this.setState({ searchProxy : searchS});\n            const data = await getlaunchpaddatalimit(searchS,0,this.state.searchInterval);\n            await this.sleep(1050)\n            console.log(\"Search sale : \",searchS)\n            this.setState({ searchSale: data, isSearch: true})\n            this.hideLoader();\n            }\n      }else{\n        this.setState({ isSearch: false})\n      }\n   \n  }\n\n    async loadSearchMore(){\n      console.log(\"Lad more\",this.state.totalSales.length < this.state.proxy.length)\n      this.setState({ isLoading: true});\n      const newly = await getlaunchpaddatalimit(this.state.searchProxy,this.state.searchInterval,this.state.searchInterval+this.state.loadInterval);\n      const total = this.state.searchSale.concat(newly);\n      await this.sleep(1000)\n       this.setState({ searchSale: total,searchInterval: this.state.searchInterval+this.state.loadInterval });\n       this.setState({ isLoading: false});   \n    }\n\n    async handlecoin(val){\n      var coins = this.state.coin\n      if(coins.length==0){\n        coins.push(val);\n      }\n      else{\n        if(coins.includes(val)){\n          const index = coins.indexOf(val);\n          if (index > -1) { \n            coins.splice(index, 1); \n          }\n        }\n        else{\n          coins.push(val)\n        }\n      }\n      console.log(\"coin\" , coins);\n      this.setState({coin : coins})\n    }\n\n    async handlestatus(val){\n      var statuss = this.state.status\n      if(statuss.length==0){\n        statuss.push(val);\n      }\n      else{\n        if(statuss.includes(val)){\n          const index = statuss.indexOf(val);\n          if (index > -1) { \n            statuss.splice(index, 1); \n          }\n        }\n        else{\n          statuss.push(val)\n        }\n      }\n      console.log(\"status\" , statuss);\n      this.setState({status : statuss})\n    }\n\n    async handletype(val){\n      var statuss = this.state.type\n      if(statuss.length==0){\n        statuss.push(val);\n      }\n      else{\n        if(statuss.includes(val)){\n          const index = statuss.indexOf(val);\n          if (index > -1) { \n            statuss.splice(index, 1); \n          }\n        }\n        else{\n          statuss.push(val)\n        }\n      }\n      console.log(\"status\" , statuss);\n      this.setState({type : statuss})\n    }\n\n    async handleadvancefilter(){\n      this.showLoader();\n      if(this.state.coin.length == 0 && this.state.status.length == 0 && this.state.type.length == 0){\n        this.gettotalsalesinfo();\n      }\n      // let filtered = await tokenfilter(this.state.proxy , this.state.coin , this.state.status);\n      let filtered = await admintokenfilterlaunchpad(this.state.original , this.state.coin , this.state.status , this.state.type);\n      console.log(\"filtered\" , filtered);\n      if(filtered.length > 0){\n        this.setState({proxy : filtered})\n        const salelist = await getSaleCardsLimit(filtered , 0 , this.state.interval);\n        // this.GetBuytokeninfo(salelist?.useWithToken)\n        \n        console.log(\"salelist\" , salelist);\n        this.setState({\"totalSales\" : salelist});\n        // this.setState({issearch : true});\n        this.hideLoader()\n      }\n      else {\n        // this.setState({button : false})\n        this.setState({ totalSales: filtered });\n        this.setState({\"salesinfo\" : filtered});\n        this.hideLoader();\n      }\n    }\n\n    render() {\n     \n\n      const location = this.props.location.pathname.split('/')[1];\n\n    \n      \n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n      \n\n           <Adminheader />\n        \n           <div className=\"whole_sec pb-5\">\n            <div className='flex_side_right'>\n            <Adminsidebar />\n           {/* ongoing_sec */}\n           <div className='right_side_sec'>\n        \n              <div className=\"right_side_spacing\">\n               <div className='ongoing_sec proj_bg pb-5'>\n            <div className=\"container px-1\">\n                <div className='top_heqad_sec mt-5 mt-md-0'>\n                   \n                  <div className=\"row\">\n                      <div className=\"col-12 col-md-12 flex_cen_col mt-md-5 mb-md-4 flex_row_cen\">\n                        <p className=\"banner_subtitle form_subhead\">Launchpad And Privatesale List</p>\n                        <p className=\"banner_subtitle form_subhead_1\">Total Records: {this?.state?.proxy?.length}</p>\n                       \n                        {/* <hr className='hr_yellow mt-5'/> */}\n                      </div>\n                    \n                  </div>\n                </div>\n            </div>\n           \n            <div className=\"inner_bg\">\n            <div className=\"container px-1\">\n            <Tab.Container  defaultActiveKey=\"second\">\n  <Row className=\"container-fluid w-100 mx-0 px-0\">\n \n\n    <Col lg={12} className=\"img_center_lg px-0\">\n    <div className='container container_custom px-0'>\n      <Tab.Content>\n      \n        <Tab.Pane eventKey=\"second\">\n               \n               \n        <div class=\"table-responsive mt-3 table_repso_with_dropdwon\">\n  <table className=\"table table_admin_laun\">\n    <tr>\n    <th><InputGroup className=\"mb-3 input_group search_bar\">\n                      <Form.Control\n                        placeholder=\"Search\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                        value={this.state.search}  onChange={(e)=> { this.setState({ search: e.target.value }); this.handleChange(e); }} onKeyDown={(e)=>this.handleChange(e)}  \n                      />\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group\"\n                      >\n                        <i class=\"fas fa-search\"></i>\n                      </InputGroup.Text>\n                    </InputGroup></th>\n       <th><InputGroup className=\"mb-3 input_group input_group_prepend\">\n                      <Form.Control\n                        value={\"Type\"}\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      >\n                        <i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\n                      </InputGroup.Text>\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      >\n                        <Dropdown className='filter_dropdown '>\n                        <Dropdown.Toggle id=\"dropdown-basic\" className='table_filter_icon'>\n                        <i class=\"fas fa-filter\" onClick={()=>{this.setState({closeHcmenu:false});this.closeAllMenusHc()}}></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className={this.state.closeHcmenu?\"table_dropdown_menu filter_menu d-none\":\"table_dropdown_menu filter_menu d-block\"}>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeHcmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" \n  checked = {this.state.type.includes(\"Launchpad\") ? true : false}\n  onChange={()=>this.handletype(\"Launchpad\")}\n  />\n  <label className=\"custom-control-label\" for=\"customCheck1\">Launchpad</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeHcmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck2\" \n    checked = {this.state.type.includes(\"Fairlaunch\") ? true : false}\n    onChange={()=>this.handletype(\"Fairlaunch\")}\n  />\n  <label className=\"custom-control-label\" for=\"customCheck2\">Fairlaunch</label>\n</div></Dropdown.Item>\n\n<Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeHcmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck3\" \n    checked = {this.state.type.includes(\"Privatesale\") ? true : false}\n    onChange={()=>this.handletype(\"Privatesale\")}\n  />\n  <label className=\"custom-control-label\" for=\"customCheck3\">Privatesale</label>\n</div></Dropdown.Item>\n\n\n        {/* <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeHcmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck3\" />\n  <label className=\"custom-control-label\" for=\"customCheck3\">Action</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeHcmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck4\" />\n  <label className=\"custom-control-label\" for=\"customCheck4\">Subscription</label>\n</div></Dropdown.Item> */}\n<Dropdown.Divider />\n<Dropdown.Item href=\"javascript:void(0)\">\n  <div className='dropdown_buttons d-flex justify-content-between'>\n  <button className=\"get-started-btn mr-2\" onClick={()=>{this.setState({type : []})}}>Reset</button>\n  <button className=\"get-started-btn\" id=\"ok_hc\" onClick={()=>{this.setState({closeHcmenu:true});\n  this.handleadvancefilter()\n}}>OK</button>\n  </div>\n</Dropdown.Item>\n\n      </Dropdown.Menu>\n                        </Dropdown>\n                      </InputGroup.Text>\n                    </InputGroup></th>\n                    {/* <th><InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"Coin\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                       <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      >\n                        <Dropdown className='filter_dropdown'>\n                        <Dropdown.Toggle id=\"dropdown-basic\" className='table_filter_icon'>\n                        <i class=\"fas fa-filter\" onClick={()=>{this.setState({closeCoinmenu:false})}}></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className={this.state.closeCoinmenu?\"table_dropdown_menu filter_menu d-none\":\"table_dropdown_menu filter_menu d-block\"}>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck5\" />\n  <label className=\"custom-control-label\" for=\"customCheck5\">BNB</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck6\" />\n  <label className=\"custom-control-label\" for=\"customCheck6\">BUSD</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck7\" />\n  <label className=\"custom-control-label\" for=\"customCheck7\">USDT</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck8\" />\n  <label className=\"custom-control-label\" for=\"customCheck8\">USDC</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck9\" />\n  <label className=\"custom-control-label\" for=\"customCheck9\">ETH</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck10\" />\n  <label className=\"custom-control-label\" for=\"customCheck10\">MATIC</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck11\" />\n  <label className=\"custom-control-label\" for=\"customCheck11\">AVAX</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck12\" />\n  <label className=\"custom-control-label\" for=\"customCheck12\">CRO</label>\n</div></Dropdown.Item>\n<Dropdown.Divider />\n<Dropdown.Item href=\"javascript:viod(0)\">\n  <div className='dropdown_buttons d-flex justify-content-between'>\n  <button className=\"get-started-btn mr-2\">Reset</button>\n  <button className=\"get-started-btn\" onClick={()=>{this.setState({closeCoinmenu:true})}}>OK</button>\n  </div>\n</Dropdown.Item>\n      </Dropdown.Menu>\n                        </Dropdown>\n                      </InputGroup.Text>\n                    </InputGroup>\n                    </th> */}\n                    {/*<th><InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"InitialCap\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group\"\n                      >\n                        <i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\n                      </InputGroup.Text>\n                    </InputGroup></th>\n                    <th><InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"KYC/Audit\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                       <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      >\n                        <Dropdown className='filter_dropdown'>\n                        <Dropdown.Toggle id=\"dropdown-basic\" className='table_filter_icon'>\n                        <i class=\"fas fa-filter\" onClick={()=>{this.setState({closeKycmenu:false})}}></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className={this.state.closeKycmenu?\"table_dropdown_menu filter_menu d-none\":\"table_dropdown_menu filter_menu d-block\"}>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeKycmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck13\" />\n  <label className=\"custom-control-label\" for=\"customCheck13\">KYC</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeKycmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck14\" />\n  <label className=\"custom-control-label\" for=\"customCheck14\">Audit</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeKycmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck15\" />\n  <label className=\"custom-control-label\" for=\"customCheck15\">Safu</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeKycmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck16\" />\n  <label className=\"custom-control-label\" for=\"customCheck16\">Doxx</label>\n</div></Dropdown.Item>\n<Dropdown.Divider />\n<Dropdown.Item href=\"javascript:void(0)\">\n  <div className='dropdown_buttons d-flex justify-content-between'>\n  <button className=\"get-started-btn mr-2\">Reset</button>\n  <button className=\"get-started-btn\" onClick={()=>{this.setState({closeKycmenu:true})}}>OK</button>\n  </div>\n</Dropdown.Item>\n      </Dropdown.Menu>\n                        </Dropdown>\n                      </InputGroup.Text>\n                    </InputGroup>\n                    </th>\n                    <th><InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"Status\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group\"\n                      >\n                        <i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\n                      </InputGroup.Text>\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      >\n                        <Dropdown className='filter_dropdown'>\n                        <Dropdown.Toggle id=\"dropdown-basic\" className='table_filter_icon'>\n                        <i class=\"fas fa-filter\" onClick={()=>{this.setState({closeStatusmenu:false})}}></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu  className={this.state.closeStatusmenu?\"table_dropdown_menu filter_menu d-none\":\"table_dropdown_menu filter_menu d-block\"}>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeStatusmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck17\" />\n  <label className=\"custom-control-label\" for=\"customCheck17\">Upcoming</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeStatusmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck18\" />\n  <label className=\"custom-control-label\" for=\"customCheck18\">Live</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeStatusmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck19\" />\n  <label className=\"custom-control-label\" for=\"customCheck19\">Fill</label>\n</div></Dropdown.Item>\n<Dropdown.Divider />\n<Dropdown.Item href=\"javascript:void(0)\">\n  <div className='dropdown_buttons d-flex justify-content-between'>\n  <button className=\"get-started-btn mr-2\">Reset</button>\n  <button className=\"get-started-btn\" onClick={()=>{this.setState({closeStatusmenu:true})}}>OK</button>\n  </div>\n</Dropdown.Item>\n      </Dropdown.Menu>\n                        </Dropdown>\n                      </InputGroup.Text>\n                    </InputGroup></th>\n                    <th><InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"Links\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                    </InputGroup></th>\n                    <th><InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"TGOnline\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group\"\n                      >\n                        <i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\n                      </InputGroup.Text>\n                    </InputGroup></th>\n                    <th><InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"Countdown\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group\"\n                      >\n                        <i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\n                      </InputGroup.Text>\n                    </InputGroup></th> */}\n                     <th><InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"Coin\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                        readOnly\n                      />\n                       <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      >\n                        <Dropdown className='filter_dropdown'>\n                        <Dropdown.Toggle id=\"dropdown-basic\" className='table_filter_icon'>\n                        <i class=\"fas fa-filter\" onClick={()=>{this.setState({closeCoinmenu:false});this.closeAllMenusCoin()}}></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className={this.state.closeCoinmenu?\"table_dropdown_menu filter_menu d-none\":\"table_dropdown_menu filter_menu d-block\"}>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" \n    checked = {this.state.coin.includes(\"BNB\") ? true : false}\n  id=\"customCheck5\" onChange={()=>this.handlecoin(\"BNB\")}/>\n  <label className=\"custom-control-label\" for=\"customCheck5\" >BNB</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" onChange={()=>this.handlecoin(\"BUSD\")} \n  checked = {this.state.coin.includes(\"BUSD\") ? true : false}\n  className=\"custom-control-input\" id=\"customCheck6\" />\n  <label className=\"custom-control-label\" for=\"customCheck6\">BUSD</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" \n  checked = {this.state.coin.includes(\"USDT\") ? true : false}\n  onChange={()=>this.handlecoin(\"USDT\")} id=\"customCheck7\" />\n  <label className=\"custom-control-label\" for=\"customCheck7\">USDT</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" \n    checked = {this.state.coin.includes(\"USDC\") ? true : false}\n  onChange={()=>this.handlecoin(\"USDC\")}  id=\"customCheck8\" />\n  <label className=\"custom-control-label\" for=\"customCheck8\">USDC</label>\n</div></Dropdown.Item>\n      {/* <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" onChange={()=>this.handlecoin(\"ETH\")} id=\"customCheck9\" />\n  <label className=\"custom-control-label\" for=\"customCheck9\">ETH</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck10\" />\n  <label className=\"custom-control-label\" for=\"customCheck10\">MATIC</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck11\" />\n  <label className=\"custom-control-label\" for=\"customCheck11\">AVAX</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:viod(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeCoinmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck12\" />\n  <label className=\"custom-control-label\" for=\"customCheck12\">CRO</label>\n</div></Dropdown.Item> */}\n<Dropdown.Divider />\n<Dropdown.Item href=\"javascript:viod(0)\">\n  <div className='dropdown_buttons d-flex justify-content-between'>\n  <button className=\"get-started-btn mr-2\" onClick={()=>this.setState({coin : []})}>Reset</button>\n  <button className=\"get-started-btn\" onClick={()=>{this.setState({closeCoinmenu:true});\n  this.handleadvancefilter();\n}}>OK</button>\n  </div>\n</Dropdown.Item>\n      </Dropdown.Menu>\n                        </Dropdown>\n                      </InputGroup.Text>\n                    </InputGroup>\n                    </th> \n\n\n                    <th><InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"Status\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                        readOnly\n                      />\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group\"\n                      >\n                        <i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\n                      </InputGroup.Text>\n                      <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      >\n                        <Dropdown className='filter_dropdown'>\n                        <Dropdown.Toggle id=\"dropdown-basic\" className='table_filter_icon'>\n                        <i class=\"fas fa-filter\" onClick={()=>{this.setState({closeStatusmenu:false});this.closeAllMenusStatus()}}></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu  className={this.state.closeStatusmenu?\"table_dropdown_menu filter_menu d-none\":\"table_dropdown_menu filter_menu d-block\"}>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeStatusmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" \n    checked = {this.state.status.includes(\"Upcoming\") ? true : false} \n  onChange={()=>this.handlestatus(\"Upcoming\")} id=\"customCheck17\" />\n  <label className=\"custom-control-label\" for=\"customCheck17\">Upcoming</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeStatusmenu:false})}}>\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck18\" \n  checked = {this.state.status.includes(\"Live\") ? true : false} \n  onChange={()=>this.handlestatus(\"Live\")} />\n  <label className=\"custom-control-label\" for=\"customCheck18\">Live</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"javascript:void(0)\"><div className=\"custom-control custom-checkbox\" onClick={()=>{this.setState({closeStatusmenu:false})}}>\n  <input type=\"checkbox\" checked = {this.state.status.includes(\"Ended\") ? true : false} \n  className=\"custom-control-input\" id=\"customCheck19\" onChange={()=>this.handlestatus(\"Ended\")}/>\n  <label className=\"custom-control-label\" for=\"customCheck19\">Ended</label>\n</div></Dropdown.Item>\n<Dropdown.Divider />\n<Dropdown.Item href=\"javascript:void(0)\">\n  <div className='dropdown_buttons d-flex justify-content-between'>\n  <button className=\"get-started-btn mr-2\" onClick={()=>this.setState({status : []})}>Reset</button>\n  <button className=\"get-started-btn\" onClick={()=>{this.setState({closeStatusmenu:true});\n  this.handleadvancefilter();\n}}>OK</button>\n  </div>\n</Dropdown.Item>\n      </Dropdown.Menu>\n                        </Dropdown>\n                      </InputGroup.Text>\n                    </InputGroup></th>\n   \n   \n    </tr>\n\n    {this.state.isSearch ? \n      (this.state.searchSale && this?.state?.searchSale?.map((data , index)=><>\n        <tr>\n  <td><span className=\"d-flex align-items-center\">\n\n  <div className=\"relative_token_div  mr-2\">\n    <img className=\"token_image_sm \" src={data?.logo} />\n    </div>\n       {data?.name}\n    </span></td>\n    <td>{data ?.isWhitelisted ? \"PrivateSale\" : data?.LaunchpadType? \"Launchpad\" : \"Fairlaunch\"  }</td>\n    <td>{data?.symbol}</td>\n    <td><span >{\n                                              data && isSaleLive(data?.startTime,data?.endTime,data?.isPresaleOpen) ?\n                                             \" Sales Live\"\n                                            : data && isUpcoming(data?.startTime)? \"Upcoming\" : \"Sale Ended\"\n                                            }</span></td>\n    <td>{data?.softCap/10**18}</td>\n    <td>{data?.hardCap/10**18}</td>\n    {/* <td><span className=\"close_icons\">\n      <i className=\"far fa-times-circle times_hover\"></i>\n      <i className=\"far fa-times-circle times_hover\"></i>\n      <i className=\"far fa-times-circle times_hover\"></i>\n      <i className=\"far fa-times-circle times_hover active_times\"></i>\n    </span></td> */}\n\n    <td><ProgressBar now={ parseInt(parseInt(data?.earnedCap)/parseInt(data?.hardCap) * 100)} className='yellow_bar mt-3'/>\n   <div className='d-flex align-items-center justify-content-between'>\n    <span className='desc_grey_txt'>{ parseInt(parseInt(data?.earnedCap)/parseInt(data?.hardCap) * 100)} % </span>\n           <span className='desc_grey_txt'>{((data?.earnedCap)/10**18).toFixed(3)}/{((data?.hardCap)/10**18).toFixed(2)} </span>\n           </div>\n    </td>\n    {/* <td><ProgressBar now={data?.earnedCap/10 ** data?.decimals} label={data?.hardCap} className='yellow_bar'/></td> */}\n    {/* <td><span>\n      <a href={data?.social[1]} target = \"_blank\"><i class=\"fas fa-globe green_icons\"></i></a>\n      <a href={data?.social[1]} target = \"_blank\"><i class=\"fab fa-skype green_icons\"></i></a>\n      <a href={data?.social[5]} target = \"_blank\"><i class=\"fab fa-telegram-plane green_icons\"></i></a>\n    </span></td> */}\n    <td className=\"table_time\">{new Date(data?.startTime*1000)?.getDate()+\"/\"+new Date(data?.startTime*1000)?.getMonth()+\"/\"+\n    new Date(data?.startTime*1000)?.getFullYear()+\" \"+new Date(data?.startTime*1000)?.getHours()+\":\"+\n    new Date(data?.startTime*1000)?.getMinutes()+\":\"+new Date(data?.startTime*1000)?.getSeconds()}</td>\n    <td className=\"table_time\">{new Date(data?.endTime*1000)?.getDate()+\"/\"+new Date(data?.endTime*1000)?.getMonth()+\"/\"+\n    new Date(data?.endTime*1000)?.getFullYear()+\" \"+new Date(data?.endTime*1000)?.getHours()+\":\"+\n    new Date(data?.endTime*1000)?.getMinutes()+\":\"+new Date(data?.endTime*1000)?.getSeconds()}</td>\n    <td><a className=\"link_text\" onClick={()=>DeletePresale(data?.saleAddress , getAccount())}>Disable</a></td>\n  </tr>\n      </>)) :\n\n\n(this.state.totalSales && this?.state?.totalSales?.map((data , index)=><>\n  <tr>\n  <td><span className=\"d-flex align-items-center\">\n\n  <div className=\"relative_token_div  mr-2\">\n    <img className=\"token_image_sm \" src={data?.logo} />\n    </div>\n       {data?.name}\n    </span></td>\n    <td>{data ?.isWhitelisted ? \"PrivateSale\" : data?.LaunchpadType? \"Launchpad\" : \"Fairlaunch\"  }</td>\n    <td>{data?.symbol}</td>\n    <td><span >{\n                                              data && isSaleLive(data?.startTime,data?.endTime,data?.isPresaleOpen) ?\n                                             \" Sales Live\"\n                                            : data && isUpcoming(data?.startTime)? \"Upcoming\" : \"Sale Ended\"\n                                            }</span></td>\n    <td>{data?.softCap/10**18}</td>\n    <td>{data?.hardCap/10**18}</td>\n    {/* <td><span className=\"close_icons\">\n      <i className=\"far fa-times-circle times_hover\"></i>\n      <i className=\"far fa-times-circle times_hover\"></i>\n      <i className=\"far fa-times-circle times_hover\"></i>\n      <i className=\"far fa-times-circle times_hover active_times\"></i>\n    </span></td> */}\n\n    <td>\n      {data.LaunchpadType ?<>\n      <ProgressBar now={ parseInt(parseInt(data?.earnedCap)/parseInt(data?.hardCap) * 100)} className='yellow_bar mt-3'/>\n   <div className='d-flex align-items-center justify-content-between'>\n    <span className='desc_grey_txt'>{ parseInt(parseInt(data?.earnedCap)/parseInt(data?.hardCap) * 100)} % </span>\n           <span className='desc_grey_txt'>{((data?.earnedCap)/10**18).toFixed(3)}/{((data?.hardCap)/10**18).toFixed(2)} </span>\n           </div></>\n            :\n           <><ProgressBar now={data && parseInt(parseInt(data?.earnedCap)/parseInt(data?.softCap) * 100)} className='yellow_bar mt-3'/>\n <div className=\"d-flex align-items-center justify-content-between\">\n <span className='desc_grey_txt'>{data && parseInt(parseInt(data.earnedCap)/parseInt(data.softCap) * 100)} %  </span>\n        <span className='desc_grey_txt'>{data && ((data.earnedCap)/10**18).toFixed(3)} / {(parseInt(data?.softCap)/10**18).toFixed(2)} {this.state.buyToken}  </span>\n        </div></>}\n    </td>\n    {/* <td><ProgressBar now={data?.earnedCap/10 ** data?.decimals} label={data?.hardCap} className='yellow_bar'/></td> */}\n    {/* <td><span>\n      <a href={data?.social[1]} target = \"_blank\"><i class=\"fas fa-globe green_icons\"></i></a>\n      <a href={data?.social[1]} target = \"_blank\"><i class=\"fab fa-skype green_icons\"></i></a>\n      <a href={data?.social[5]} target = \"_blank\"><i class=\"fab fa-telegram-plane green_icons\"></i></a>\n    </span></td> */}\n    <td className=\"table_time\">{new Date(data?.startTime*1000)?.getDate()+\"/\"+new Date(data?.startTime*1000)?.getMonth()+\"/\"+\n    new Date(data?.startTime*1000)?.getFullYear()+\" \"+new Date(data?.startTime*1000)?.getHours()+\":\"+\n    new Date(data?.startTime*1000)?.getMinutes()+\":\"+new Date(data?.startTime*1000)?.getSeconds()}</td>\n    <td className=\"table_time\">{new Date(data?.endTime*1000)?.getDate()+\"/\"+new Date(data?.endTime*1000)?.getMonth()+\"/\"+\n    new Date(data?.endTime*1000)?.getFullYear()+\" \"+new Date(data?.endTime*1000)?.getHours()+\":\"+\n    new Date(data?.endTime*1000)?.getMinutes()+\":\"+new Date(data?.endTime*1000)?.getSeconds()}</td>\n    <td><a className=\"link_text\" onClick={()=>DeletePresale(data?.saleAddress , getAccount())}>Disable</a></td>\n</tr>\n</>))\n      \n  }\n\n\n    \n  \n    \n    \n    {/* <tr>\n      <td><span className=\"d-flex align-items-center\">\n      <div className=\"relative_token_div  mr-2\">\n        <img className=\"token_image_sm \" src={favicon} />\n        </div> 5IREToken\n        </span></td>\n        <td>Fairlaunch</td>\n        <td>BNB</td>\n        <td>$580</td>\n        <td><span className=\"close_icons\">\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover active_times\"></i>\n        </span></td>\n        <td><ProgressBar now={20} label={20} className='yellow_bar'/></td>\n        <td><span>\n        <a href=\"#\"><i class=\"fas fa-globe green_icons\"></i></a>\n          <a href=\"#\"><i class=\"fab fa-skype green_icons\"></i></a>\n          <a href=\"#\"><i class=\"fab fa-telegram-plane green_icons\"></i></a>\n        </span></td>\n        <td>11/100</td>\n        <td className=\"table_time\">03:05:42:01</td>\n        <td><a className=\"link_text\">Disable</a></td>\n    </tr>\n    <tr>\n      <td><span className=\"d-flex align-items-center\">\n      <div className=\"relative_token_div  mr-2\">\n        <img className=\"token_image_sm \" src={favicon} />\n        </div> 5IREToken\n        </span></td>\n        <td>Fairlaunch</td>\n        <td>BNB</td>\n        <td>$580</td>\n        <td><span className=\"close_icons\">\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover\"></i>\n          <i className=\"far fa-times-circle times_hover active_times\"></i>\n        </span></td>\n        <td><ProgressBar now={20} label={20} className='yellow_bar'/></td>\n        <td><span>\n        <a href=\"#\"><i class=\"fas fa-globe green_icons\"></i></a>\n          <a href=\"#\"><i class=\"fab fa-skype green_icons\"></i></a>\n          <a href=\"#\"><i class=\"fab fa-telegram-plane green_icons\"></i></a>\n        </span></td>\n        <td>11/100</td>\n        <td className=\"table_time\">03:05:42:01</td>\n        <td><a className=\"link_text\">Disable</a></td>\n    </tr> */}\n  </table>\n  {this.state.proxy.length == 0 && <p className='no_data_text'>No Data Found</p>}\n</div>\n\n<div className='text-center mt-5'>\n{ this.state.isSearch ?\n              <>\n            {this.state.searchSale && this.state.searchSale.length < this.state.searchProxy.length ? \n            \n            <button className=\"get-started-btn\" onClick={this.loadSearchMore.bind(this)} id=\"load_more_btn\">{this.state.isLoading ? 'Loading...' : 'View More Pools' }</button>\n            :<></>\n            }\n            </> :  <>\n            {this.state.totalSales && this.state.totalSales.length < this.state.proxy.length ? \n            <button className=\"get-started-btn\" onClick={this.viewmore.bind(this)} id=\"load_more_btn\">{this.state.isLoading ? 'Loading...' : 'View More Pools' }</button>\n            :<></>\n            }\n            </>\n            }\n      </div>  \n        </Tab.Pane>\n     \n       \n      </Tab.Content>\n      </div>\n    </Col>\n  </Row>\n</Tab.Container>\n\n              \n                </div>\n            </div>\n            </div>\n            {/* end ongoing_sec */}\n\n            </div>\n            </div>\n            </div>\n            </div>\n            {/* <Footer /> */}\n        </div>\n        </div>\n        )\n    }\n}\n\nexport default Adminlaunchpad","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Projects/Achievement.js",["873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\n\nimport Header from '../Header';\nimport Sidebar from '../Sidebar';\nimport Trendingslider from '../trendingslider';\n\nimport Walletmodal from \"../Walletmodal\";\n\n\nimport { getAccount, Userdollar } from '../../hooks/useAccount'\n\nimport bsc from \"../../images/bsc.png\"\n\n\n\n\n\n\nimport {  Container, FormControl, InputGroup, Dropdown, Nav, Form, Tab, Row, Col } from 'react-bootstrap';\nimport '../../css/styles.css';\n\nimport favicon from \"../../images/favicon.png\"\nimport proof from \"../../images/proof.webp\"\nimport loader from \"../../images/loader.gif\"\nimport { Link } from 'react-router-dom';\nimport { UseProvider } from '../../hooks/useWeb3';\nimport { Getbalance } from '../../hooks/useContract';\nimport { getuserdatahook } from '../../hooks/usebackend';\nimport { getsaledatalimit } from '../../hooks/useProjects';\n\nclass Achievement extends Component {\n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.05;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n\n\n\n  }\n  \n    componentDidMount()\n    {\n      // this.showLoader();\n      this.hideLoader();\n      this.getbalance();\n      this.getuserdata()\n    //    this.setState({ accountInfo: getAccount() });\n    }\n\n    getbalance = async()=>{\n      const balance = await Getbalance();\n      this.setState({\"balance\" : balance})\n    }\n\n    makeTimercopyaddress(){\n      setInterval(() => {\n          this.setState({copyaddress: \"Copy\"})\n      }, 5000)\n    }\n\n    logOut = async () =>{\n      this.setState({accountInfo : \"\"})\n      localStorage.removeItem(\"accountInfo\")\n      if(localStorage.getItem(\"walletconnect\")!=null)\n   {\n      const provider = await UseProvider();\n      await provider.disconnect()\n   }\n    //  this.setState({accountModal: false})\n      window.location.reload()\n      console.log(\"logout\")\n  }\n\n  getuserdata = async()=>{\n    let userdata = await getuserdatahook(this.state.accountInfo.toLowerCase());\n    console.log(\"userdata\" , userdata.data.data);\n    this.setState({investedpools : userdata.data.data.investedpools})\n    // this.setState({wishlist : userdata.data.data.wishlist})\n    // this.setState({viewlist : userdata.data.data.viewlist})\n    // this.setState({investedamount : userdata.data.data.investedamount})\n    let dollar = await Userdollar(userdata.data.data.investedamount);\n    this.setState({dollar : dollar});\n    this.loadData(userdata.data.data.investedpools);\n  }\n\n\n  async loadData(Proxydata){\n    this.showLoader();\n    // const Proxydata = await getTotalSalesInfo();\n    // this.setState({ proxy : Proxydata })\n    if(Proxydata.length>0){\n      const newly = await getsaledatalimit(Proxydata,0 , this.state.loadinterval);\n      await this.sleep(1000)\n      console.log(\"newly\" , newly);\n      // const total = this.state.totalsales.concat(newly);\n      // console.log(\"total\" , total);\n      this.setState({ totalsales: newly }); \n      this.setState({interval :   this.state.loadinterval})\n    }\n    else{\n      this.setState({ totalsales: [] });\n    }\n      \n   \n    this.hideLoader();\n}\n\nasync viewmore(Proxydata){\n  this.setState({loading : true});\n  if(Proxydata.length>0){\n    const newly = await getsaledatalimit(Proxydata,this.state.interval, this.state.interval+this.state.loadinterval);\n    await this.sleep(1000)\n    console.log(\"newly\" , newly);\n    const total = this.state.totalsales.concat(newly);\n    console.log(\"total\" , total);\n    this.setState({ totalsales: total }); \n    this.setState({interval :   this.state.interval + this.state.loadinterval})\n    this.setState({loading : false});\n  }\n  else{\n    this.setState({ totalsales: [] });\n    this.setState({loading : false});\n  }\n}\n\n    constructor(props) {\n        super(props);\n        this.state = {          \n            walletModal: false,\n            accountInfo: '',\n            logined:true,\n            balance : \"\",\n            showTooltip:false,\n            showTooltipOne:false,\n            copyaddress : \"Copy\",\n            copyurl : \"Copy\",\n            dollar : 0,\n            investedpools: [],\n            investedamount : 0,\n            totalsales : []\n\n        };\n    }\n \n    render() {\n\n\n      \n      \n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n\n           <Header/>\n          \n           <div className=\"whole_sec pb-5\">\n           <div className='flex_side_right'>\n            <Sidebar />\n           {/* ongoing_sec */}\n           <div className='right_side_sec'>\n           {/* <div className=\"text-white topBar d-flex justify-content-between\">\n                  \n                  <small>Trending</small>\n                <small>\n                  #1&nbsp;<span>Husy</span>\n                </small>\n                <small>\n                  #2&nbsp;<span>ORL</span>\n                </small>\n                <small>\n                  #3&nbsp;<span>UWC</span>\n                </small>\n                <small>\n                  #4&nbsp;<span>777</span>\n                </small>\n                <small>\n                  #5&nbsp;<span>IDXS</span>\n                </small>\n                <small>\n                  #6&nbsp;<span>COUGNU</span>\n                </small>\n                <small>\n                  #7&nbsp;<span>CRICLE</span>\n                </small>\n                <small>\n                  #8&nbsp;<span>KASA</span>\n                </small>\n                <small>\n                  #9&nbsp;<span>FIFAPP</span>\n                </small>\n                <small>\n                  #10&nbsp;<span>SOG</span>\n                </small>\n                <small>\n                  #11&nbsp;<span>COOSHA</span>\n                </small>\n                <small>\n                  #12&nbsp;<span>Honey</span>\n                </small>\n                \n                \n              </div> */}\n              {/* <Trendingslider/> */}\n              <div className=\"right_side_spacing\">\n              <div className='container'>\n              <div className='row mt-5'>\n           <div className='col-12 mx-auto px-0'>\n           <div className=\"tab_img\">\n                 <div className='card_bg card'>\n            <div className='card-body pt-4'>\n                <div className='text-center mb-4'>\n                    <img src={favicon} className=\"img-fluid\" />\n                </div>\n                <p className='wallet_address_text text-center'>\n                    <span>\n                    <img className=\"token_image_sm\" src={bsc} />\n                    </span>\n                    <span>{getAccount().toLowerCase()}</span>\n                    {/* <span>{localStorage.getItem(\"accountInfo\")}</span> */}\n                  \n                  \n                    <span onClick={() =>  {\n                        navigator.clipboard.writeText(localStorage.getItem(\"accountInfo\"))\n                        this.setState({\"copyaddress\" : \"Copied\"});\n                        this.makeTimercopyaddress();\n                      }}>\n                        <div className='tooltip_parent'>\n                        <i className={this.state.copyaddress == \"Copy\"?'fa fa-copy' : \"fa fa-check\"}\n                         onMouseOver={()=>{this.setState({showTooltip:true})}}\n                        onMouseLeave={()=>{this.setState({showTooltip:false})}}\n                        // onClick={()=>{this.setState({showTooltip:!this.state.showTooltip})}}\n                        />\n\n                        {this.state.showTooltip?\n                      <span className='tooltip_custom' id=\"dummy_tooltip  \">\n                      {this.state.copyaddress}\n                    </span>:\n                    \"\"\n                    }\n                        </div>\n                    </span>\n                    </p>   \n                \n              \n             </div>\n             </div>\n            </div>\n            </div>\n        \n\n                \n               \n        </div>\n        </div>\n        <div>\n        <div className=\"inner_bg mt-2 pb-5\">\n            <div className=\"container px-1\">\n            <Tab.Container  defaultActiveKey=\"first\">\n  <Row className=\"container-fluid w-100 mx-0 px-0\">\n\n   \n\n    <Col lg={12} className=\"img_center_lg px-0\">\n    <div className='container container_custom px-0'>\n      <Tab.Content>\n        <Tab.Pane eventKey=\"first\">\n            {getAccount()?\n            <div>\n            <div className='card_bg card mt-4'>\n     <div className='card-body'>\n         <div className='row row_invested_sec'>\n             <div className='col-12 col-md-4 text-center'>\n                 <p className='pool_detail_title'>Total Pool Invested</p>                        \n                 <p className='text_green font_18 mb-0'>{this?.state?.investedpools?.length}</p>\n\n             </div>\n             <div className='col-12 col-md-4 text-center'>\n                 <p className='pool_detail_title'>Total BNB Invested</p>                        \n                 <p className='text_green font_18 mb-0'>{this?.state?.investedamount}</p>\n\n             </div>\n             <div className='col-12 col-md-4 text-center'>\n                 <p className='pool_detail_title'>Total Invested</p>                        \n                 <p className='text_green font_18 mb-0'>{this?.state?.dollar}</p>\n\n             </div>\n         </div>\n         </div>\n         </div>\n         <div class=\"table-responsive table_repso_with_dropdwon mt-3\">\n<table className=\"table\">\n<tr>\n<th>\n <p>Name</p>\n             </th>\n<th>\n<p>Sale type</p>\n</th>\n             <th>\n             <p>Sale Address</p>\n             </th>\n           \n           \n             {/* <th>\n                 <InputGroup className=\"mb-3 input_group\">\n               <Form.Control\n                 value=\"Type\"\n                 aria-label=\"Recipient's username\"\n                 aria-describedby=\"basic-addon2\"\n               />\n                <InputGroup.Text\n                 id=\"basic-addon2\"\n                 className=\"input_group input_group_filteralign\"\n               >\n                 <Dropdown className='filter_dropdown'>\n                 <Dropdown.Toggle id=\"dropdown-basic\" className='table_filter_icon'>\n                 <i class=\"fas fa-filter\"></i>\n                 </Dropdown.Toggle>\n                 <Dropdown.Menu className='table_dropdown_menu'>\n <Dropdown.Item href=\"#/action-1\"><div className=\"custom-control custom-checkbox\">\n<input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck13\" />\n<label className=\"custom-control-label\" for=\"customCheck13\">Claimed</label>\n</div></Dropdown.Item>\n <Dropdown.Item href=\"#/action-2\"><div className=\"custom-control custom-checkbox\">\n<input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck14\" />\n<label className=\"custom-control-label\" for=\"customCheck14\">Contributed</label>\n</div></Dropdown.Item>\n <Dropdown.Item href=\"#/action-3\"><div className=\"custom-control custom-checkbox\">\n<input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck15\" />\n<label className=\"custom-control-label\" for=\"customCheck15\">Emergency Withdrawn</label>\n</div></Dropdown.Item>\n <Dropdown.Item href=\"#/action-3\"><div className=\"custom-control custom-checkbox\">\n<input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck16\" />\n<label className=\"custom-control-label\" for=\"customCheck16\">Withdrawn</label>\n</div></Dropdown.Item>\n<Dropdown.Divider />\n<Dropdown.Item href=\"#/action-3\">\n<div className='dropdown_buttons d-flex justify-content-between'>\n<button className=\"get-started-btn mr-2\">Reset</button>\n<button className=\"get-started-btn\">OK</button>\n</div>\n</Dropdown.Item>\n</Dropdown.Menu>\n                 </Dropdown>\n               </InputGroup.Text>\n             </InputGroup>\n             </th> */}\n             <th>\n             <p>Action</p>\n             </th>\n           \n           \n          \n</tr>  \n{this.state.investedpools.map((data , i)=><>\n<tr>\n<td><span className=\"d-flex align-items-center\">\n<div className=\"relative_token_div  mr-2\">\n <img className=\"token_image_sm \" src={favicon} />\n </div> {data.name}\n </span></td>\n <td>{data?.isWhitelisted ? \"Whitelist sale\" : \"public sale\"}</td>       \n <td>{data.saleAddress}</td>\n {/* <td>Claimed</td>        */}\n\n {/* <td>0x025c2166741685bc6577ujtiio768ghrtyC9</td> */}\n <td><a className=\"link_text\" href={`/privatesaledetail/${data.saleAddress}`}>View</a></td>\n</tr></>)}\n\n\n{/* <tr>\n<td><span className=\"d-flex align-items-center\">\n<div className=\"relative_token_div  mr-2\">\n <img className=\"token_image_sm \" src={favicon} />\n </div> 5IREToken\n </span></td>\n <td>03:05:42:01</td>       \n <td>$580</td>\n <td>Withdrawn</td>       \n\n <td>0x025c2166741685bc6577ujtiio768ghrtyC9</td>\n</tr>\n<tr>\n<td><span className=\"d-flex align-items-center\">\n<div className=\"relative_token_div  mr-2\">\n <img className=\"token_image_sm \" src={favicon} />\n </div> 5IREToken\n </span></td>\n <td>03:05:42:01</td>       \n <td>$580</td>\n <td>Contributed</td>       \n\n <td>0x025c2166741685bc6577ujtiio768ghrtyC9</td>\n</tr> */}\n</table>\n</div>\n<div className='text-center mt-3'>\n{this.state.totalsales.length < this.state.investedpools.length ?\n<button className=\"get-started-btn\" id=\"load_more_btn_1\"\nonClick={()=>this.viewmore(this.state.investedpools)}\n>{this.state.loading ? \"Loading...\" : \"View More\"}</button>\n: <></>\n}\n\n</div>\n     </div>\n            :\n            <div className='text-center'>\n            <p className='text-white'>We are protecting your activity. You need to sign to see it.</p>\n            <button className=\"get-started-btn\">\n            Sign in\n            </button>\n            </div>\n            }\n       \n        </Tab.Pane>\n       \n      \n       \n      </Tab.Content>\n      </div>\n    </Col>\n  </Row>\n</Tab.Container>\n\n              \n                </div>\n            </div>\n        </div>\n\n            <Container className='pb-5 px-0 mt-4'>\n                 \n                 <center>\n                   <small className=\"mt-3 bottom_text\">\n                     Disclaimer: The information provided shall not in any way\n                     constitute a recomendation as to whether you should invest\n                     in any product discussed. We accept no liability for any\n                     loss occasioned to any person acting or refraining from\n                     action as a result of any material provided or published.\n                   </small>\n                 </center>\n               </Container>\n            </div>\n           </div>\n           </div>\n           </div>\n\n            {/* <Footer /> */}\n        </div>\n        </div>\n        )\n    }\n}\n\nexport default Achievement","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/TokenSuccess.js",["891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917","918","919","920","921","922","923","924"],"import React, { Component } from \"react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport toast, { Toaster } from 'react-hot-toast';\n\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\nimport Trendingslider from '../trendingslider';\n\n\n\n\nimport \"../../css/styles.css\";\n\n\nimport favicon from \"../../images/favicon.png\";\n\n\nimport {\n  getSaleCards,\n  getSaleCardsLimit,\n  getTotalSalesInfo,\n  searchCards,\n  searchSale,\n} from \"../../hooks/useProjects\";\nimport {\n  Container,\n  Dropdown,\n  Row,\n  Col,\n  Card,\n  ProgressBar,\n  InputGroup,\n  Form,\n  Tab,\n  Nav,\n  FormControl\n} from \"react-bootstrap\";\nimport { validstandardtoken } from \"../../hooks/kycvalidation\";\nimport { gettokendata } from \"../../hooks/useContract\";\nimport { CHAINS } from \"../../config/env\";\nimport { iconTheme, position, style } from \"../../hooks/useToast\";\n\n\nclass TokenSuccess extends Component {\n \n  \n\n\n  showLoader() {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.5;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n  }\n\n  hideLoader() {\n    document\n      .getElementsByTagName(\"body\")[0]\n      .classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n  }\n\n  componentDidMount() {\n    document.getElementById(\"launchpad_parent\").classList.add(\"active\");\n    this.hideLoader();\n    // this.gettokendatas()\n    console.log(\"address\" , this.state.tokenaddress , this.state.hash  , this.props.location.state);\n    if(this?.props?.location?.state?.state!=\"token\"){\n      this.props.history.push(\"/\")\n    }\n  }\n  // gettokendatas= async()=>{\n  //   console.log(\">>>\" , this.state.tokenaddress.address , this.state.tokenaddress.hash);\n  //   let data = await gettokendata(this.state.tokenaddress.address);\n  //   console.log(\"data\" , data);\n  // }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      proxy: [],\n      totalSales: [],\n      onGoingSales: [],\n      upComingSales: [],\n      isSearch: false,\n      searchSale: [],\n      search: \"\",\n      interval: 3,\n      loadInterval: 3,\n      searchInterval: 3,\n      searchProxy: [],\n      isLoading: false,\n      currentChain: 0,\n      setUpdateCms: false,\n      name : JSON.parse(sessionStorage.getItem(\"TKNDATA\"))._name?JSON.parse(sessionStorage.getItem(\"TKNDATA\"))._name\n                      : JSON.parse(sessionStorage.getItem(\"TKNDATA\")).name,\n      symbol :JSON.parse(sessionStorage.getItem(\"TKNDATA\"))._symbol ? JSON.parse(sessionStorage.getItem(\"TKNDATA\"))._symbol\n                  : JSON.parse(sessionStorage.getItem(\"TKNDATA\")).symbol,\n      supply : JSON.parse(sessionStorage.getItem(\"TKNDATA\"))._totalSupply ? JSON.parse(sessionStorage.getItem(\"TKNDATA\"))._totalSupply\n                : JSON.parse(sessionStorage.getItem(\"TKNDATA\")).supply,\n      \n      tokenaddress : JSON.parse(sessionStorage.getItem(\"TKNDATA\")).tokenAddres ? JSON.parse(sessionStorage.getItem(\"TKNDATA\")).tokenAddres\n                      : JSON.parse(sessionStorage.getItem(\"TKNDATA\")).tokenAddress,\n      errors : {},\n      hashlink : CHAINS[localStorage.getItem(\"CHAIN\")].TRANSACTION  +JSON.parse(sessionStorage.getItem(\"HASH\")).transactionHash,\n      hash : JSON.parse(sessionStorage.getItem(\"HASH\")).transactionHash ,\n      copy : \"Copy Address\"\n    };\n  }\n\n  handlecreatetoken = async()=>{\n    if(this.state.tokentype == \"Standard Token\"){\n      let payload = {\n        name : this.state.name,\n        symbol : this.state.symbol,\n        decimal : this.state.decimal,\n        totalsupply : this.state.totalsupply\n      }\n      let validate = await validstandardtoken(payload);\n      if(validate?.isValid){\n        \n      }\n      else{\n        this.setState({errors : validate?.errors})\n      }\n    }\n  }\n\n  copyText(a, b){\n    toast.success(\"Address Copied\", {\n        position: position.position,\n        style: style,\n        iconTheme: iconTheme,\n    }\n    )\n\n}\n  \n\n\n\n  render() {\n    const location = this.props.location.pathname.split(\"/\")[1];\n\n    const {\n      totalSales,\n      onGoingSales,\n      upComingSales,\n      search,\n      isSearch,\n      searchSale,\n      accountInfo,\n    } = this.state;\n\n    return (\n      <div id=\"loader_main\">\n        <div id=\"loader_div\">\n          <span className=\"spin_round\"></span>\n          <img src={favicon} className=\"logo_load\" />\n        </div>\n        <div className=\"logo_overlay\" id=\"logo_overlay\">\n          <Header />\n\n          <div className=\"whole_sec pb-5\">\n            <div className=\"flex_side_right\">\n              <Sidebar />\n              {/* ongoing_sec */}\n              <div className=\"right_side_sec\">\n                {/* <div className=\"text-white topBar d-flex justify-content-between\">\n                  \n                    <small>Trending</small>\n                  <small>\n                    #1&nbsp;<span>Husy</span>\n                  </small>\n                  <small>\n                    #2&nbsp;<span>ORL</span>\n                  </small>\n                  <small>\n                    #3&nbsp;<span>UWC</span>\n                  </small>\n                  <small>\n                    #4&nbsp;<span>777</span>\n                  </small>\n                  <small>\n                    #5&nbsp;<span>IDXS</span>\n                  </small>\n                  <small>\n                    #6&nbsp;<span>COUGNU</span>\n                  </small>\n                  <small>\n                    #7&nbsp;<span>CRICLE</span>\n                  </small>\n                  <small>\n                    #8&nbsp;<span>KASA</span>\n                  </small>\n                  <small>\n                    #9&nbsp;<span>FIFAPP</span>\n                  </small>\n                  <small>\n                    #10&nbsp;<span>SOG</span>\n                  </small>\n                  <small>\n                    #11&nbsp;<span>COOSHA</span>\n                  </small>\n                  <small>\n                    #12&nbsp;<span>Honey</span>\n                  </small>\n                  \n                  \n                </div> */}\n                {/* <Trendingslider/> */}\n                <div className=\"right_side_spacing\">\n                <Container className=\"mt-5 pb-3 px-1\">\n                <div className='col-12  col-md-10 col-lg-9 mx-auto px-0'>\n<div className=\"tab_img\">\n      <div className='card_bg card'>\n <div className='card-body'>\n <div>\n                <div className='success_div py-4'>\n              \n<p className=\"text_green text-center\">Your token was created!</p>\n\n<p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n<span className='desc_grey_txt'>Name :</span>\n<span className='desc_grey_txt font_12'>{this.state.name}</span>\n</p> \n\n<p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n<span className='desc_grey_txt'>Symbol :</span>\n<span className='desc_grey_txt font_12'>{this.state.symbol}</span>\n</p> \n\n<p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n<span className='desc_grey_txt'>Total Supply :</span>\n<span className='desc_grey_txt font_12'>{this.state.supply}</span>\n</p> \n\n<p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n<span className='desc_grey_txt'>Address :</span>\n<span className='desc_grey_txt font_12'>{this.state.tokenaddress}</span>\n</p> \n         \n                    <div className='mt-5 btn4_div'>\n                      <a href = {this.state.hashlink} target=\"_blank\">\n                    <button className=\"get-started-btn mt-2 mx-1\"\n                      // onclick={window.open(this.state.hash.toString() , \"_blank\")}\n                      // onclick=\"window.open('http://www.website.com/page')\"\n                    >\n                           View Transaction\n                        </button></a>\n                    {/* <button className=\"get-started-btn mt-2 mx-1\"\n                      onClick={() =>  {\n                        navigator.clipboard.writeText(this.state.tokenaddress)\n                        this.setState({\"copy\" : \"Copied\"})\n                      }}\n                    >\n                           {this.state.copy}\n                        </button> */}\n                        <CopyToClipboard text={`${this.state.tokenaddress}`} onCopy={() => this.copyText('invite link', `${this.state.tokenaddress}`)}>\n                        <button variant='link' className=\"get-started-btn mt-2 mx-1\" >Copy Address</button>\n                        </CopyToClipboard>\n                        <button className=\"get-started-btn mt-2 mx-1\" \n                          onClick={()=>{this.props.history.push(\"/create\")}}\n                        >\n                           Create Launchpad\n                        </button>\n                        <button className=\"get-started-btn mt-2 mx-1\"\n                          onClick={()=>{this.props.history.push(\"/createfairlaunch\")}}\n                        >\n                           Create Fairlaunch\n                        </button>\n                        \n                        </div>\n                </div>\n            </div>\n      </div>\n      </div>\n      </div>\n      </div>\n                </Container>\n                <Container className='pb-5 px-0 mt-2'>\n                 \n                 <center>\n                   <small className=\"mt-3 bottom_text\">\n                     Disclaimer: The information provided shall not in any way\n                     constitute a recomendation as to whether you should invest\n                     in any product discussed. We accept no liability for any\n                     loss occasioned to any person acting or refraining from\n                     action as a result of any material provided or published.\n                   </small>\n                 </center>\n               </Container>\n</div>\n                </div>\n                </div>\n                </div>\n                </div>\n      </div>\n    );\n  }\n}\n\nexport default TokenSuccess;\n","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/AdminTrending.js",["925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\n\nimport Adminheader from './Adminheader';\nimport Adminsidebar from './Adminsidebar';\nimport EditTrendingModal from \"./EditTrendingModal\";\nimport AddTrendingModal from \"./AddTrendingModal\";\n\n\nimport Web3 from \"web3\";\nimport '../../css/styles.css';\n\nimport coin from \"../../images/coin.png\"\nimport favicon from \"../../images/favicon.png\"\n\nimport loader from \"../../images/loader.gif\"\nimport { Dropdown, Nav, Tab, Row, Col, Container, ProgressBar, InputGroup,Form } from 'react-bootstrap';\nimport { getsettinghook, gettrendinghook } from '../../hooks/usebackend';\nconst cookies = new Cookies();\n\nclass AdminTrending extends Component {\n   \n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.5;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n\n\n\n  }\n\n  componentDidMount()\n    {\n      this.restrict()\n      // this.showLoader();\n     this.hideLoader();\n\n      this.gettrending()\n  \n    }\n\n    restrict = async()=>{\n      var email = cookies.get('cryp-launch-admin-email');\n      console.log(\"email\" , email);\n      if(!email){\n        this.props.history.push(\"/login\")\n      }\n    }\n\n    gettrending = async( req , res) => {\n      let payload = {\n        skip : this.state.skip,\n        limit : this.state.limit\n      }\n      \n      let trending = await gettrendinghook(payload);\n      if(trending.data.success == true || trending.data.success == \"true\"){\n      console.log(\"trending result\" , trending);\n      this.setState({trending : trending.data.data})\n      // let count = Math.ceil(trending?.data?.count / this.state.limit)\n      // this.setState({\"pagecount\" : count});\n      }\n      let count = Math.ceil(trending?.data?.count / this.state.limit)\n      this.setState({\"pagecount\" : count});\n    }\n  \n   \n  \n\n    constructor(props) {\n      super(props);\n      this.state = {  \n        edittrendingModal: false,\n        addtrendingModal: false, \n        trending : [],\n        singletrending : {},\n        skip : 0,\n        limit : 10,\n        pagecount : 0,\n        button : 0,\n        currentpage : 1,\n\n        stepcount : 5    \n      };\n    }\n    \n    onDismiss(){\n        this.setState({ edittrendingModal: false });\n    }\n\n    onDismissAdd(){\n        this.setState({ addtrendingModal: false });\n    }\n\n\n    handlenextpage = async()=>{\n      let payload = {\n        limit : this.state.limit,\n        skip : this.state.skip + this.state.limit\n      }\n      let result = await getsettinghook(payload);\n      this.setState({\"settings\" : result?.data?.data})\n      if(this.state.currentpage %5 == 0){\n        this.setState({\"button\" : this.state.button + 5})\n        // if(this.state.pagecount )\n      }\n      this.setState({\"skip\" : this.state.skip + this.state.limit})\n      this.setState({\"currentpage\" : this.state.currentpage+1})\n    }\n\n    handleprevpage = async()=>{\n      let payload = {\n        limit : this.state.limit,\n        skip : this.state.skip - this.state.limit\n      }\n      let result = await getsettinghook(payload);\n      this.setState({\"settings\" : result?.data?.data})\n      if((this.state.currentpage-1) %5 == 0){\n        this.setState({\"button\" : this.state.button - 5})\n        // if(this.state.pagecount )\n      }\n      this.setState({\"skip\" : this.state.skip - this.state.limit});\n      this.setState({\"currentpage\" : this.state.currentpage-1});\n    }\n\n    handlenumpage = async(val) => {\n      this.setState({\"currentpage\" : parseInt(val)})\n      let payload = {\n        limit : this.state.limit,\n        skip : (parseInt(val)*10)-10\n      }\n      \n      let result = await getsettinghook(payload);\n      this.setState({\"settings\" : result?.data?.data})\n      this.setState({\"skip\" :(parseInt(val)*10)-10 })\n      \n    }\n\n    render() {\n     \n\n      const location = this.props.location.pathname.split('/')[1];\n\n      const {edittrendingModal,addtrendingModal } = this.state\n      \n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n      \n\n           <Adminheader />\n        \n           <div className=\"whole_sec pb-5\">\n            <div className='flex_side_right'>\n            <Adminsidebar />\n           {/* ongoing_sec */}\n           <div className='right_side_sec'>\n        \n              <div className=\"right_side_spacing\">\n               <div className='ongoing_sec proj_bg pb-5'>\n            <div className=\"container px-1\">\n                <div className='top_heqad_sec mt-5 mt-md-0'>\n                   \n                  <div className=\"row\">\n                      <div className=\"col-12 col-md-6 flex_cen_col mt-md-5 mb-md-4\">\n                        <p className=\"banner_subtitle form_subhead\">OnTop List</p>\n\n\n\n                       \n                        {/* <hr className='hr_yellow mt-5'/> */}\n                      </div>\n                      <div className=\"col-12 col-md-6 flex_cen_col mt-md-5 mb-md-4\">\n                        {/* <div className='text-right'>\n            <button className=\"get-started-btn btn_width_auto\" onClick={() => this.setState({ addtrendingModal: true })}>Add</button>\n            </div> */}\n                        </div>\n                    \n                  </div>\n                </div>\n            </div>\n           \n            <div className=\"inner_bg\">\n            <div className=\"container px-1\">\n            <Tab.Container  defaultActiveKey=\"second\">\n  <Row className=\"container-fluid w-100 mx-0 px-0\">\n \n\n    <Col lg={12} className=\"img_center_lg px-0\">\n    <div className='container container_custom px-0'>\n      <Tab.Content>\n      \n        <Tab.Pane eventKey=\"second\">\n        <div class=\"table-responsive\">\n  <table className=\"table recepients_table\">\n    <thead>\n    <tr>\n      <th>Position</th>\n      <th>Sale Address</th>\n      <th>Display Name</th>\n      <th>Status</th>\n    </tr>\n    </thead>\n    {this.state.trending && this.state.trending.map((data , i)=><>\n      <tr>\n      <td>\n     \n    \n     <div className=\"p-0 table_det\">\n       <span className=\"table_text\">{data?.position}</span>\n \n   </div>\n   </td>\n      <td>\n     \n    \n        <div className=\"p-0 table_det\">\n          <span className=\"table_text\">{data?.saleaddress}</span>\n    \n      </div>\n      </td>\n      <td>{data?.displayname}</td>\n      <td>{data?.status}</td>\n      <td className=\"d-flex justify-content-end\"><a className=\"link_text\" onClick={() => {\n        this.setState({singletrending : data})\n        this.setState({ edittrendingModal: true })}}>Edit</a></td>\n      \n    </tr>\n    </>)}\n    \n\n\n    {/* <tr>\n      <td>\n     \n    \n        <div className=\"p-0 table_det\">\n          <span className=\"table_text\">Lorem Ipsum</span>\n    \n      </div>\n      </td>\n      <td>Lorem Ipsum</td>\n      <td className=\"d-flex justify-content-end\"><a className=\"link_text\" onClick={() => this.setState({ edittrendingModal: true })}>Edit</a></td>\n      \n    </tr>\n    <tr>\n      <td>\n     \n    \n        <div className=\"p-0 table_det\">\n          <span className=\"table_text\">Lorem Ipsum</span>\n    \n      </div>\n      </td>\n      <td>Lorem Ipsum</td>\n      <td className=\"d-flex justify-content-end\"><a className=\"link_text\" onClick={() => this.setState({ edittrendingModal: true })}>Edit</a></td>\n      \n    </tr> */}\n   \n  </table>\n</div>\n{/* <div className=\"mt-2 d-flex justify-content-center align-items-center btn_pagin_wrap\">\n<button className=\"pagination_btn\"><i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i></button>\n  <button className=\"pagination_btn\">1</button>\n  <button className=\"pagination_btn\">2</button>\n  <button className=\"pagination_btn\">3</button>\n  <button className=\"pagination_btn\">4</button>\n  <button className=\"pagination_btn\">5</button>\n  <button className=\"pagination_btn\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></button>\n</div> */}\n<div className={this.state.trending.length ?\"mt-2 d-flex justify-content-center align-items-center btn_pagin_wrap\" : \"d-none\"}>\n<button className=\"pagination_btn\"\nonClick = {this.handleprevpage}\ndisabled ={this.state.currentpage == 1}\n><i class=\"fa fa-angle-left\" aria-hidden=\"true\"\n\n></i></button>\n  \n  \n{[...Array(this.state.stepcount)].map((val,i)=>{\n  if((this.state.button+i+1) <=this.state.pagecount)\n  return(\n  <button className={this.state.currentpage==(this.state.button+i+1)?\"pagination_btn active\" : \"pagination_btn\"} value = {this.state.button+i+1} onClick={\n    (e)=>{\n      console.log(\"e\" , e?.target?.value);\n      this.handlenumpage(e?.target?.value)\n    }\n    }>{this.state.button+i+1}</button>\n)\n}\n\n)}\n  \n  \n  {/* <button className=\"pagination_btn\">2</button>\n  <button className=\"pagination_btn\">3</button>\n  <button className=\"pagination_btn\">4</button>\n  <button className=\"pagination_btn\">5</button> */}\n  <button className=\"pagination_btn\"\n  onClick={this.handlenextpage}\n  disabled ={this.state.currentpage == this.state.pagecount}\n  ><i class=\"fa fa-angle-right\" aria-hidden=\"true\"\n  \n  ></i></button>\n</div>\n\n{this.state.trending.length == 0 && <p className='no_data_text'>No Data Found</p>}\n        </Tab.Pane>\n     \n       \n      </Tab.Content>\n      </div>\n    </Col>\n  </Row>\n</Tab.Container>\n\n              \n                </div>\n            </div>\n            </div>\n            {/* end ongoing_sec */}\n\n            </div>\n            </div>\n            </div>\n            </div>\n            {edittrendingModal && <EditTrendingModal data = {this.state.singletrending} onDismiss={()=>this.onDismiss()} getset = {()=>this.gettrending()}/> }\n            {/* {addtrendingModal && <AddTrendingModal onDismiss={()=>this.onDismissAdd()} getset = {()=>this.gettrending()}/> } */}\n\n\n            {/* <Footer /> */}\n        </div>\n        </div>\n        )\n    }\n}\n\nexport default AdminTrending","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/Adminsettings.js",["952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\n\nimport Adminheader from './Adminheader';\nimport Adminsidebar from './Adminsidebar';\nimport Editsettingmodal from \"./Editsettingmodal\";\nimport Addsettingmodal from \"./Addsettingmodal\";\n\n\nimport Web3 from \"web3\";\nimport '../../css/styles.css';\n\nimport coin from \"../../images/coin.png\"\nimport favicon from \"../../images/favicon.png\"\n\nimport loader from \"../../images/loader.gif\"\nimport { Dropdown, Nav, Tab, Row, Col, Container, ProgressBar, InputGroup,Form } from 'react-bootstrap';\nimport { getsettinghook } from '../../hooks/usebackend';\n\nconst cookies = new Cookies();\nclass Adminsettings extends Component {\n   \n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.5;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n\n\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n\n\n\n  }\n  \n    componentDidMount()\n    {\n      this.restrict()\n      // this.showLoader();\n     this.hideLoader();\n\n      this.getsetting()\n  \n    }\n\n    restrict = async()=>{\n      var email = cookies.get('cryp-launch-admin-email');\n      console.log(\"email\" , email);\n      if(!email){\n        this.props.history.push(\"/login\")\n      }\n    }\n    \n    getsetting = async()=>{\n      let payload = {\n        skip : this.state.skip,\n        limit : this.state.limit\n      }\n      let setting = await getsettinghook(payload);\n      console.log(\"setting\" , setting?.data?.data);\n      this.setState({\"settings\" : setting?.data?.data});\n      let count = Math.ceil(setting?.data?.count / this.state.limit)\n      this.setState({\"pagecount\" : count});\n      // if(count < 5){\n      //   this.setState({\"stepcount\" : count})\n      // }\n    }\n\n\n    handlenextpage = async()=>{\n      let payload = {\n        limit : this.state.limit,\n        skip : this.state.skip + this.state.limit\n      }\n      let result = await getsettinghook(payload);\n      this.setState({\"settings\" : result?.data?.data})\n      if(this.state.currentpage %5 == 0){\n        this.setState({\"button\" : this.state.button + 5})\n        // if(this.state.pagecount )\n      }\n      this.setState({\"skip\" : this.state.skip + this.state.limit})\n      this.setState({\"currentpage\" : this.state.currentpage+1})\n    }\n\n    handleprevpage = async()=>{\n      let payload = {\n        limit : this.state.limit,\n        skip : this.state.skip - this.state.limit\n      }\n      let result = await getsettinghook(payload);\n      this.setState({\"settings\" : result?.data?.data})\n      if((this.state.currentpage-1) %5 == 0){\n        this.setState({\"button\" : this.state.button - 5})\n        // if(this.state.pagecount )\n      }\n      this.setState({\"skip\" : this.state.skip - this.state.limit});\n      this.setState({\"currentpage\" : this.state.currentpage-1});\n    }\n\n    handlenumpage = async(val) => {\n      this.setState({\"currentpage\" : parseInt(val)})\n      let payload = {\n        limit : this.state.limit,\n        skip : (parseInt(val)*10)-10\n      }\n      \n      let result = await getsettinghook(payload);\n      this.setState({\"settings\" : result?.data?.data})\n      this.setState({\"skip\" :(parseInt(val)*10)-10 })\n      \n    }\n   \n    constructor(props) {\n      super(props);\n      this.state = {  \n        editsettingModal: false,\n        addsettingModal: false,\n        settings : [],\n        singlesetting : {},\n        \n        skip : 0,\n        limit : 10,\n        pagecount : 0,\n        button : 0,\n        currentpage : 1,\n\n        stepcount : 5\n      };\n    }\n    \n    onDismiss(){\n        this.setState({ editsettingModal: false });\n    }\n\n    onDismissAdd(){\n        this.setState({ addsettingModal: false });\n    }\n\n    render() {\n     \n\n      const location = this.props.location.pathname.split('/')[1];\n\n      const {editsettingModal,addsettingModal } = this.state\n      \n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n      \n\n           <Adminheader />\n        \n           <div className=\"whole_sec pb-5\">\n            <div className='flex_side_right'>\n            <Adminsidebar />\n           {/* ongoing_sec */}\n           <div className='right_side_sec'>\n        \n              <div className=\"right_side_spacing\">\n               <div className='ongoing_sec proj_bg pb-5'>\n            <div className=\"container px-1\">\n                <div className='top_heqad_sec mt-5 mt-md-0'>\n                   \n                  <div className=\"row\">\n                      <div className=\"col-12 col-md-6 flex_cen_col mt-md-5 mb-md-4\">\n                        <p className=\"banner_subtitle form_subhead\">Settings List</p>\n\n\n\n                       \n                        {/* <hr className='hr_yellow mt-5'/> */}\n                      </div>\n                      <div className=\"col-12 col-md-6 flex_cen_col mt-md-5 mb-md-4\">\n                        <div className='text-right'>\n            <button className=\"get-started-btn btn_width_auto\" onClick={() => this.setState({ addsettingModal: true })}>Add</button>\n            </div>\n                        </div>\n                    \n                  </div>\n                </div>\n            </div>\n           \n            <div className=\"inner_bg\">\n            <div className=\"container px-1\">\n            <Tab.Container  defaultActiveKey=\"second\">\n  <Row className=\"container-fluid w-100 mx-0 px-0\">\n \n\n    <Col lg={12} className=\"img_center_lg px-0\">\n    <div className='container container_custom px-0'>\n      <Tab.Content>\n      \n        <Tab.Pane eventKey=\"second\">\n               \n        <div class=\"table-responsive\">\n  <table className=\"table recepients_table\">\n    <thead>\n    <tr>\n      <th>Setting Name</th>\n      <th>Setting Value</th>\n    </tr>\n    </thead>\n    {this.state.settings && this.state.settings?.map((data , i)=><>\n      <tr>\n      <td>\n     \n    \n        <div className=\"p-0 table_det\">\n          <span className=\"table_text\">{data.settingname}</span>\n    \n      </div>\n      </td>\n      <td>{data.settingvalue}</td>\n      <td className=\"d-flex justify-content-end\"><a className=\"link_text\" onClick={() => {\n        this.setState({\"singlesetting\" : data})\n        this.setState({ editsettingModal: true });\n      }\n        }>Edit</a></td>\n      \n    </tr>\n    </>\n    )}\n    \n\n\n    {/* <tr>\n      <td>\n     \n    \n        <div className=\"p-0 table_det\">\n          <span className=\"table_text\">Lorem Ipsum</span>\n    \n      </div>\n      </td>\n      <td>Lorem Ipsum</td>\n      <td className=\"d-flex justify-content-end\"><a className=\"link_text\" onClick={() => this.setState({ editsettingModal: true })}>Edit</a></td>\n      \n    </tr>\n    <tr>\n      <td>\n     \n    \n        <div className=\"p-0 table_det\">\n          <span className=\"table_text\">Lorem Ipsum</span>\n    \n      </div>\n      </td>\n      <td>Lorem Ipsum</td>\n      <td className=\"d-flex justify-content-end\"><a className=\"link_text\" onClick={() => this.setState({ editsettingModal: true })}>Edit</a></td>\n      \n    </tr> */}\n   \n  </table>\n</div>\n<div className=\"mt-2 d-flex justify-content-center align-items-center btn_pagin_wrap\">\n<button className=\"pagination_btn\"\nonClick = {this.handleprevpage}\ndisabled ={this.state.currentpage == 1}\n><i class=\"fa fa-angle-left\" aria-hidden=\"true\"\n\n></i></button>\n  \n  \n{[...Array(this.state.stepcount)].map((val,i)=>{\n  if((this.state.button+i+1) <=this.state.pagecount)\n  return(\n  <button className={this.state.currentpage==(this.state.button+i+1)?\"pagination_btn active\" : \"pagination_btn\"} value = {this.state.button+i+1} onClick={\n    (e)=>{\n      console.log(\"e\" , e?.target?.value);\n      this.handlenumpage(e?.target?.value)\n    }\n    }>{this.state.button+i+1}</button>\n)\n}\n\n)}\n  \n  \n  {/* <button className=\"pagination_btn\">2</button>\n  <button className=\"pagination_btn\">3</button>\n  <button className=\"pagination_btn\">4</button>\n  <button className=\"pagination_btn\">5</button> */}\n  <button className=\"pagination_btn\"\n  onClick={this.handlenextpage}\n  disabled ={this.state.currentpage == this.state.pagecount}\n  ><i class=\"fa fa-angle-right\" aria-hidden=\"true\"\n  \n  ></i></button>\n</div>\n        </Tab.Pane>\n     \n       \n      </Tab.Content>\n      </div>\n    </Col>\n  </Row>\n</Tab.Container>\n\n              \n                </div>\n            </div>\n            </div>\n            {/* end ongoing_sec */}\n\n            </div>\n            </div>\n            </div>\n            </div>\n            {editsettingModal && <Editsettingmodal data = {this.state.singlesetting} onDismiss={()=>this.onDismiss()} getset = {()=>this.getsetting()}/> }\n            {addsettingModal && <Addsettingmodal onDismiss={()=>this.onDismissAdd()}  getset = {()=>this.getsetting()}/> }\n\n\n            {/* <Footer /> */}\n        </div>\n        </div>\n        )\n    }\n}\n\nexport default Adminsettings","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/LaunchpadDetail.js",["974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996"],"import React, { Component } from 'react';\r\nimport { useContext, useEffect, useState } from \"react\";\r\n\r\nimport Header from '../Header';\r\nimport Sidebar from '../Sidebar';\r\nimport Trendingslider from '../trendingslider';\r\n\r\nimport { getAccount, getAllocationInfo } from '../../hooks/useAccount'\r\n\r\nimport Chart from \"react-apexcharts\";\r\n\r\n\r\nimport Countdown from 'react-countdown';\r\n\r\n\r\nimport {  Container, ProgressBar,InputGroup, FormControl, Button} from 'react-bootstrap';\r\nimport '../../css/styles.css';\r\n\r\nimport favicon from \"../../images/favicon.png\"\r\nimport { Link } from 'react-router-dom';\r\nimport { approveContractbuy, Approvetoken, checkbalnceTokens, checkIsApproved, DeletePresale, Getliquiditytokenamount, getSaleInfoCard, GetSalePerAccount, Getunsoldtoken, UseTokenInfo, Withdrawbnb } from '../../hooks/useContract';\r\nimport { isSaleLive, isUpcoming, Salediffernce, UpcomingDiffernce } from '../../hooks/useProjects';\r\nimport { ONEDAYINSECONDS } from '../../config/env';\r\n\r\n\r\nimport WhitelistModal from \"../WhitelistModal\"\r\nimport RemoveWhitelistmodal from \"../RemoveWhitelistmodal\"\r\nimport ChangeStatusmodal from \"../ChangeStatusmodal\"\r\nimport { BuyToken, calculateBuy, claimToken } from '../../hooks/useBuy';\r\nimport { Finalise, getUnsold, SetWhitelisted, updateStopEvent, withdrawBNB } from '../../hooks/useAdmin';\r\nimport { gettrendingdisplayhook } from '../../hooks/usebackend';\r\n\r\n\r\nconst renderer = ({ days, Month, Year, hours, minutes, seconds, completed }) => {\r\n    if (completed) {\r\n      return  <div className='cout_man_div'>\r\n      <div>{days}d </div>\r\n      <div>{hours}h</div>\r\n      <div>{minutes}m</div>   \r\n      <div>{seconds}s </div>         \r\n   </div>\r\n    } else {\r\n      // Render a countdown\r\n      return <div className='cout_man_div'>           \r\n                 <div>{days}d </div>\r\n      <div>{hours}h</div>\r\n      <div>{minutes}m</div>   \r\n      <div>{seconds}s </div>\r\n            </div>;\r\n    }\r\n  };\r\n\r\n\r\nclass LaunchpadDetail extends Component {\r\n  showLoader()\r\n  {\r\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\r\n    document.getElementById(\"logo_overlay\").style.opacity = 0.05;\r\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\r\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\r\n\r\n\r\n  }\r\n\r\n  hideLoader()\r\n  {\r\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\r\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\r\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\r\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\r\n\r\n\r\n\r\n  }\r\n  \r\n    componentDidMount()\r\n    {\r\n      document.getElementById(\"launchpad_parent\").classList.add(\"active\");\r\n      // this.showLoader();\r\n     this.gettrending();\r\n      \r\n    \r\n      this.refreshData()\r\n      // this.hideLoader();\r\n    }\r\n\r\n    async gettrending(){\r\n      const {saleData} = this.props\r\n      let data = await gettrendingdisplayhook();\r\n      console.log(\"dataa trending\" , data?.data?.data);\r\n      if(data?.data?.data?.length > 0)\r\n      this.setState({trending : data?.data?.data}) \r\n      let finddata = data?.data?.data?.find((e)=> e?.saleaddress == window.location.pathname.split('/')[2])\r\n      this.setState({singletrending : finddata})\r\n  }\r\n\r\n\r\n \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n        saleAddress: window.location.pathname.split('/')[2],\r\n        saleInfo: {},\r\n        userData: {},\r\n        allocations: [],\r\n         series: [44, 55, 41, 17, 15],      \r\n          options: {\r\n            labels: [\"Total Tokens\", \"Sold Tokens\", \"Unsold Tokens\", \"Liquidity Tokens\"],\r\n            chart: {\r\n              type: 'donut',\r\n            },\r\n            responsive: [\r\n              {\r\n              breakpoint: 480,\r\n              options: {\r\n                chart: {\r\n                  width: 200\r\n                },\r\n                legend: {\r\n                  position: 'bottom'\r\n                }\r\n              },\r\n            },\r\n            {\r\n              breakpoint: 600,\r\n              options: {\r\n                chart: {\r\n                  width: 300\r\n                },\r\n                legend: {\r\n                  position: 'right'\r\n                }\r\n              }\r\n            },\r\n            {\r\n              breakpoint: 1199,\r\n              options: {\r\n                chart: {\r\n                  width: 300\r\n                },\r\n                legend: {\r\n                  position: 'bottom'\r\n                }\r\n              }\r\n            },\r\n            {\r\n              breakpoint: 2000,\r\n              options: {\r\n                chart: {\r\n                  width: 350\r\n                },\r\n                legend: {\r\n                  position: 'right'\r\n                }\r\n              }\r\n            }\r\n          ]\r\n          },\r\n\r\n          options1: {\r\n            labels: [\"Total Tokens\"],\r\n            chart: {\r\n              type: 'donut',\r\n            },\r\n            responsive: [\r\n              {\r\n              breakpoint: 480,\r\n              options: {\r\n                chart: {\r\n                  width: 200\r\n                },\r\n                legend: {\r\n                  position: 'bottom'\r\n                }\r\n              },\r\n            },\r\n            {\r\n              breakpoint: 600,\r\n              options: {\r\n                chart: {\r\n                  width: 300\r\n                },\r\n                legend: {\r\n                  position: 'right'\r\n                }\r\n              }\r\n            },\r\n            {\r\n              breakpoint: 1199,\r\n              options: {\r\n                chart: {\r\n                  width: 300\r\n                },\r\n                legend: {\r\n                  position: 'bottom'\r\n                }\r\n              }\r\n            },\r\n            {\r\n              breakpoint: 2000,\r\n              options: {\r\n                chart: {\r\n                  width: 350\r\n                },\r\n                legend: {\r\n                  position: 'right'\r\n                }\r\n              }\r\n            }\r\n          ]\r\n          },\r\n          iswhitelisted : true,\r\n          whitelistModal : false,\r\n          removewhitelistModal:false,\r\n          changestatueModal:false,\r\n          buyToken: \"\",\r\n          buyTokenDecimal : 0,\r\n          amount: 0,\r\n          claim: 0,\r\n          max: 0,\r\n          isMax: false,\r\n          isWhitelistedDisabled : false,\r\n          chartstatus : false,\r\n          charttokendecimal : \"\",\r\n          trending : [],\r\n          singletrending : {},\r\n          checkdeposittoken : 0,\r\n          checkbalance : 0,\r\n          approvebutton : false,\r\n          \r\n        }\r\n      \r\n    }\r\n\r\n    handlewithdraw = async() => {\r\n      let withdraw = await withdrawBNB();\r\n    }\r\n\r\n    // handlecheckfinalize = async() => {\r\n    //   let amountineth = parseFloat(this.state.saleInfoearnedCap)*parseFloat(this.state.saleInfo?.liquidityPercent);\r\n    //   let tokenrate = parseFloat(this.state.saleInfo?.earnedCap) /parseFloat(this.state.saleInfo?.hardCap)\r\n    //   let total = amountineth*tokenrate\r\n    //   this.setState({checkdeposittoken : total})\r\n    // }\r\n\r\n\r\n     approveFunction = async (accountInfo,tokenAddress,saleAddress) => {\r\n      const approval = await checkIsApproved(accountInfo,tokenAddress,saleAddress);\r\n      console.log(\"approval\",approval);\r\n       this.setState({ approvebutton: approval}) \r\n    \r\n   \r\n}\r\n\r\n\r\nasync approvetoken(){\r\n  await approveContractbuy(localStorage.getItem(\"accountInfo\"),this.state.saleInfo.useWithToken,this.state.saleAddress);\r\n  this.setState({approvebutton : true})\r\n}\r\n\r\n\r\n    async loadData(){\r\n     \r\n    \r\n     \r\n      this.showLoader();\r\n      const saleDetail = await getSaleInfoCard(this.state.saleAddress);\r\n      \r\n      this.setState({ saleInfo: saleDetail });\r\n      if(localStorage.getItem(\"accountInfo\")){\r\n        const user = await GetSalePerAccount(localStorage.getItem(\"accountInfo\"),this.state.saleAddress);\r\n        this.setState({userData: user});\r\n       \r\n        if(saleDetail.isClaimable){\r\n          const allocated = await getAllocationInfo(user.actualBalance,user.userClaimbale,saleDetail.vestingInterval,saleDetail.vestingPercent,user.initialClaim);\r\n          this.setState({ allocations: allocated });\r\n          \r\n        }\r\n        if(!saleDetail?.buytype){\r\n          this.approveFunction(localStorage.getItem(\"accountInfo\"),saleDetail?.useWithToken,saleDetail?.saleAddress)\r\n        }\r\n        \r\n      }\r\n      this.hideLoader();\r\n      \r\n    }\r\n    \r\n    async refreshData(){\r\n      this.showLoader();\r\n      \r\n      const saleDetail = await getSaleInfoCard(this.state.saleAddress);\r\n\r\n      const balance = await checkbalnceTokens(saleDetail?.tokenAddress , this.state.saleAddress);\r\n      console.log(\" >>>>\",balance / 10 ** parseInt(saleDetail?.decimals));\r\n      this.setState({checkbalance : balance / 10 ** 18})\r\n      console.log(\"saleDetail\" , saleDetail);\r\n      const token = await UseTokenInfo(saleDetail?.tokenAddress);\r\n      let decimal ;\r\n      console.log(\"tokentokentoken\" , token);\r\n      this.setState({charttokendecimal : 18})\r\n      // if(token == \"0x0000000000000000000000000000000000000000\"){\r\n      //   this.setState({charttokendecimal : 18})\r\n      //   decimal = 18;\r\n      // }\r\n      // else{\r\n      //   this.setState({charttokendecimal : token.decimals})\r\n      //   decimal = token.decimals\r\n      // }\r\n\r\n      let liqtoken = await Getliquiditytokenamount(this.state.saleAddress);\r\n      console.log(\"liqtoken\" , liqtoken);\r\n      \r\n      this.setState({\"liqtoken\" : liqtoken/10**18})\r\n      let unsoldtoken = await Getunsoldtoken(this.state.saleAddress);\r\n      console.log(\"liqtoken\" , liqtoken);\r\n      this.setState({unsoldtoken : unsoldtoken/10**18});\r\n\r\n     \r\n      this.setState({ saleInfo: saleDetail });\r\n      this.setState({\"chartstatus\" : true});\r\n      this.GetBuytokeninfo(saleDetail?.useWithToken)\r\n      if(localStorage.getItem(\"accountInfo\")){\r\n        const user = await GetSalePerAccount(localStorage.getItem(\"accountInfo\"),this.state.saleAddress);\r\n       \r\n       this.setState({userData: user});\r\n       if(saleDetail.isClaimable){\r\n        const allocated = await getAllocationInfo(user.actualBalance,saleDetail.vestingInterval,saleDetail.vestingPercent,user.initialClaim);\r\n       this.setState({ allocations: allocated });\r\n       }\r\n\r\n       if(!saleDetail?.buytype){\r\n        this.approveFunction(localStorage.getItem(\"accountInfo\"),saleDetail?.useWithToken,saleDetail?.saleAddress)\r\n      }\r\n      if(!saleDetail?.LaunchpadType){\r\n      this.handlecheckfinalize()\r\n      }\r\n       \r\n      }\r\n      this.hideLoader();\r\n    }\r\n\r\n\r\n  async  GetBuytokeninfo (value){\r\n     \r\n  if(value === \"0x0000000000000000000000000000000000000000\"){\r\n  \r\n     this.setState( { buyToken: \"BNB\"});\r\n     this.setState({buyTokenDecimal : 18})\r\n  }else{\r\n \r\n      const token = await UseTokenInfo(this.state.saleInfo && this.state.saleInfo?.useWithToken);\r\n      this.setState({ buyToken: token?.symbol });\r\n      this.setState({buyTokenDecimal : Number(token?.decimals)})\r\n      \r\n  }\r\n  }\r\n\r\n async max(){\r\n    this.setState({ max: this.state.saleInfo && (parseInt(this.state.saleInfo?.maxEthLimit)/10** this.state.buyTokenDecimal), isMax: true })\r\n    this.setState({amount : this.state.saleInfo && (parseInt(this.state.saleInfo?.maxEthLimit)/10** this.state.buyTokenDecimal)})\r\n    \r\n  }\r\n   \r\n  \r\n  async calculateToken(value){\r\n   \r\n    const tokenValue = await calculateBuy(this.state.saleAddress,value);\r\n    this.setState({ claim: (tokenValue/10**this.state.saleInfo?.decimals) })\r\n   \r\n}\r\n\r\n\r\nasync buy(){\r\n  await BuyToken(this.state.saleAddress,this.state.amount,this.state.isMax,this.state.max,getAccount(),this.state.buyTokenDecimal , this.state.buyToken);\r\n  await this.refreshData()\r\n  // this.reset();\r\n}\r\n\r\n\r\nasync Claim(){\r\n  await claimToken(this.state.saleAddress,getAccount());\r\n  await this.refreshData()\r\n  \r\n}\r\n\r\n\r\nasync stopSaleEvent(){\r\n  await updateStopEvent(this.state.saleAddress,getAccount());\r\n  await this.refreshData()\r\n \r\n}\r\n\r\n\r\n\r\nasync withdrawToken(){\r\n  await getUnsold(this.state.saleAddress,getAccount());\r\n  await this.refreshData()\r\n ;\r\n}\r\n\r\nasync BNBwithdraw(){\r\n  await withdrawBNB(this.state.saleAddress,getAccount());\r\n  await this.refreshData()\r\n  \r\n}\r\n\r\nasync Finalisesale(){\r\n  await Finalise(this.state.saleAddress,getAccount());\r\n  await this.refreshData()\r\n  \r\n}\r\n\r\nasync Handlewhitelist(value){\r\n  await SetWhitelisted(this.state.saleAddress,value,getAccount());\r\n  await this.refreshData()\r\n}\r\n\r\n\r\nhandlecheckfinalize = async() => {\r\n  let tokenAmount = 0;\r\n  let amountineth = parseFloat(this.state.saleInfo?.earnedCap / 10 ** 18)*parseFloat(this.state.saleInfo?.liquidityPercent) / 100;\r\n  var pricePerToken = parseFloat((this.state.saleInfo?.earnedCap/ 10 ** 18) * 10 ** 8) / parseFloat(this.state.saleInfo?.hardCap / 10 ** 18) ; // pricePerToken\r\n  var valuePerBNB = 1 * 10 ** 8 / pricePerToken ; // valuePerBNB\r\n  \r\n      tokenAmount = valuePerBNB;\r\n     \r\n\r\n  //  tokenAmount = parseFloat(this.state.saleInfo?.earnedCap / 10 ** 18) /parseFloat(this.state.saleInfo?.hardCap / 10 ** 18);\r\n  if(this.state.saleInfo?.decimals != \"18\"){\r\n    var price = (tokenAmount * 1) / 10 ** (18 - parseInt(this.state.saleInfo?.decimals) + 0) ;\r\n    tokenAmount = price;\r\n  }\r\n  \r\n  let total = amountineth*tokenAmount;\r\n  this.setState({checkdeposittoken : total})\r\n \r\n}\r\n\r\n\r\n    render() {\r\n      const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n      \r\n\r\n      \r\n      \r\n      const { saleInfo ,userData, whitelistModal,removewhitelistModal,changestatueModal, iswhitelisted} = this.state\r\n\treturn (\r\n    <div id=\"loader_main\">\r\n    <div id=\"loader_div\">\r\n    <span className=\"spin_round\">\r\n    </span>\r\n    <img src={favicon} className=\"logo_load\" />\r\n  </div>\r\n        <div className='logo_overlay' id=\"logo_overlay\">\r\n\r\n           <Header/>\r\n          \r\n           <div className=\"whole_sec pb-5\">\r\n           <div className='flex_side_right'>\r\n            <Sidebar />\r\n           {/* ongoing_sec */}\r\n           <div className='right_side_sec'>\r\n           {/* <div className=\"text-white topBar d-flex justify-content-between\">\r\n                  \r\n                  <small>Trending</small>\r\n                <small>\r\n                  #1&nbsp;<span>Husy</span>\r\n                </small>\r\n                <small>\r\n                  #2&nbsp;<span>ORL</span>\r\n                </small>\r\n                <small>\r\n                  #3&nbsp;<span>UWC</span>\r\n                </small>\r\n                <small>\r\n                  #4&nbsp;<span>777</span>\r\n                </small>\r\n                <small>\r\n                  #5&nbsp;<span>IDXS</span>\r\n                </small>\r\n                <small>\r\n                  #6&nbsp;<span>COUGNU</span>\r\n                </small>\r\n                <small>\r\n                  #7&nbsp;<span>CRICLE</span>\r\n                </small>\r\n                <small>\r\n                  #8&nbsp;<span>KASA</span>\r\n                </small>\r\n                <small>\r\n                  #9&nbsp;<span>FIFAPP</span>\r\n                </small>\r\n                <small>\r\n                  #10&nbsp;<span>SOG</span>\r\n                </small>\r\n                <small>\r\n                  #11&nbsp;<span>COOSHA</span>\r\n                </small>\r\n                <small>\r\n                  #12&nbsp;<span>Honey</span>\r\n                </small>\r\n                \r\n                \r\n              </div> */}\r\n              {/* <Trendingslider/> */}\r\n              <div className=\"right_side_spacing\">\r\n        <Container className='px-1'>\r\n        <div className='row mt-5'>\r\n           <div className='col-12 col-md-6 col-lg-6 mb-4'>\r\n                 <div className='card_bg card h-100'>\r\n            <div className='card-body'>\r\n            {/* <span class=\"badge badge-kyc-rect mt-0 mb-2 badge_trend_detail\"><span class=\"blk_txt\">Trending</span></span> */}\r\n            {this.state.singletrending && <span class=\"badge badge-kyc-rect mt-0 mb-2 badge_trend_detail\"><span class=\"blk_txt\">#OnTop{this.state.singletrending?.position}</span></span>}\r\n              <div className='row align-items-center pb-4 row_left_res'>\r\n                <div className='col-12 col-sm-7 col-md-12 col-xl-7 mb-3 mb-md-0'>\r\n                <div className='d-flex align-items-center'>\r\n                    <div className='d-flex align-items-center'>\r\n                    <div className='profimg'>\r\n                    \r\n                    <img src={saleInfo && saleInfo.logo} alt={saleInfo && saleInfo.symbol} className='img_ind_circle'/>\r\n                       {/* <img src=\"https://bscscan.com/images/svg/brands/bnb.svg?v=1.3\" alt=\"image\" className='img_ind_circle'/> */}\r\n                   </div>\r\n                  \r\n                   </div>\r\n                   <div>\r\n                { saleInfo?.owner == localStorage.getItem(\"accountInfo\") ?    \r\n                   <Link to={`/launchpadedit/${this.state.saleAddress}`}  className='btn_social_new btn_social_new_link ml-2'>\r\n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                        </Link> : <></>}\r\n\r\n                        <button className='btn_social_new ml-2'>\r\n                        <i class=\"fa fa-globe\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                   </div>\r\n              \r\n           \r\n                </div>\r\n      \r\n                  \r\n                </div>\r\n                <div className='col-12 col-sm-5 col-md-12 col-xl-5 mb-3 mb-md-0'>\r\n               \r\n                    \r\n                   \r\n                    <p className='text-right'>\r\n                    {/* <button className='btn_social_new mr-2'>\r\n                        <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\r\n                        </button> */}\r\n                        {saleInfo && isSaleLive(saleInfo.startTime,saleInfo.endTime,saleInfo.isPresaleOpen)  ?\r\n                    <span className=\"badge badge-green-rect mt-0\">\r\n                        <span className='blk_txt'>Live</span>\r\n                        </span> : ( isUpcoming(saleInfo.startTime) ? \r\n                      <span className=\"badge badge-green-rect mt-0\">\r\n                      <span className='blk_txt'>Upcoming</span>\r\n                      </span>:\r\n                       <span className=\"badge badge-green-rect mt-0\">\r\n                       <span className='blk_txt'>Closed</span>\r\n                       </span>)\r\n    }\r\n                  \r\n                    </p>\r\n \r\n                    </div>\r\n             \r\n              </div>\r\n         \r\n\r\n\r\n            <div>\r\n            {/* <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'> */}\r\n            {/* <span className='desc_grey_txt'>Private Sale Address :</span> */}\r\n            {/* <span><a href={`https://testnet.bscscan.com/address/${saleInfo && saleInfo?.tokenAddress}`} target='_blank'className='desc_grey_txt font_12'>{`${( saleInfo && saleInfo?.tokenAddress).substring(0, 5)}...${(saleInfo && saleInfo?.tokenAddress).substring(38,42)}`}</a></span> */}\r\n            {/* <span><a href={`https://testnet.bscscan.com/address/${saleInfo && saleInfo.tokenAddress}`} target='_blank'className='desc_grey_txt font_12'>{saleInfo && saleInfo?.tokenAddress.substring(0,5)}</a></span> */}\r\n\r\n            {/* </p>     */}\r\n            {saleInfo?.LaunchpadType ?\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>1 {this.state.buyToken} :</span>\r\n            <span className='desc_grey_txt font_12'>{saleInfo && saleInfo.presaleRate} {saleInfo && saleInfo.symbol}\r\n            </span>\r\n            </p> :<></>}\r\n          \r\n{console.log(\"harcap\",saleInfo?.hardCap)}\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Softcap :</span>\r\n            <span className='desc_grey_txt font_12'>{saleInfo && (parseInt(saleInfo.softCap)/10**this.state.buyTokenDecimal).toFixed(2)} {this.state.buyToken}\r\n            </span>\r\n            </p> \r\n            {saleInfo?.LaunchpadType ?\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Hardcap :</span>\r\n            <span className='desc_grey_txt font_12'>{saleInfo && (parseInt(saleInfo.hardCap)/10**this.state.buyTokenDecimal).toFixed(2)} {this.state.buyToken}\r\n            </span>\r\n            </p> : <></>}         \r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Start Time :</span>\r\n            <span className='desc_grey_txt font_12'>{saleInfo && new Date(saleInfo.startTime*1000).toLocaleDateString()+\"  \"\r\n             +new Date(saleInfo.startTime*1000).getHours()+\":\"+new Date(saleInfo.startTime*1000).getMinutes()+\":\"\r\n             +new Date(saleInfo.startTime*1000).getSeconds()+\"(GMT)\"  }\r\n            </span>\r\n            </p>   \r\n            {/* {this.state.startDate ? new Date(saleInfo.endTime*1000).toLocaleDateString()+\"  \"\r\n             +new Date(saleInfo.endTime*1000).getHours()+\":\"+new Date(saleInfo.endTime*1000).getMinutes()+\":\"\r\n             +new Date(saleInfo.endTime*1000).getSeconds()+\"(GMT)\"  : \"\" } */}\r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>End Time :</span>\r\n            <span className='desc_grey_txt font_12'>{saleInfo && new Date(saleInfo.endTime*1000).toLocaleDateString()+\"  \"\r\n             +new Date(saleInfo.endTime*1000).getHours()+\":\"+new Date(saleInfo.endTime*1000).getMinutes()+\":\"\r\n             +new Date(saleInfo.endTime*1000).getSeconds()+\"(GMT)\" }\r\n            </span>\r\n            </p>          \r\n\r\n\r\n\r\n            {/* <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>First Release for Project :</span>\r\n            <span className='desc_grey_txt font_12'>30%\r\n            </span>\r\n            </p>  \r\n        */}\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Vesting Claim</span>\r\n            <span className='desc_grey_txt font_12'> {saleInfo && saleInfo.isVested ? 'Enabled' : 'Disabled'}\r\n            </span>\r\n            </p>\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Pancake Listing</span>\r\n            <span className='desc_grey_txt font_12'> {saleInfo && saleInfo.isPancake ? 'Enabled' : 'Disabled'}\r\n            </span>\r\n            </p>  \r\n            { saleInfo.isPancake ? \r\n            <>\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Pancake Rate</span>\r\n            <span className='desc_grey_txt font_12'> {saleInfo && saleInfo?.pancakeRate}\r\n            </span>\r\n</p>\r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Pancake Rate</span>\r\n            <span className='desc_grey_txt font_12'>  {saleInfo && (saleInfo?.lpUnlockon*1000)/(1000*60*60*24)} Days\r\n            </span>\r\n\r\n           \r\n            </p> \r\n            </>  : \r\n            <></>}\r\n            {saleInfo && saleInfo.isVested ?\r\n             <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Vesting for Project :</span>\r\n            <span className='desc_grey_txt font_12'>{saleInfo && saleInfo.vestingPercent/100} % each {saleInfo && saleInfo.vestingInterval/ONEDAYINSECONDS} Day(s)\r\n            </span>\r\n            </p> :<></>} \r\n\r\n     \r\n\r\n       \r\n                        </div>\r\n                      \r\n             </div>\r\n             </div>\r\n            </div>\r\n\r\n            <div className='col-12 col-md-6 col-lg-6 mb-4'>\r\n            <div className='card_bg card h-100'>\r\n            <div className='card-body'>\r\n            <div className='card_footer_form'>\r\n                                <div className='d-flex align-items-center justify-content-center'>\r\n                                <p className='mb-0 pl-3'>Make sure the website is https://cryptolaunchpad.finance/</p>\r\n                                </div>\r\n\r\n                            </div>  \r\n                            {  saleInfo && isUpcoming(saleInfo.startTime) ?\r\n                            <>\r\n                            <p className='text-center sale_deta_name mt-3'>Sale Starts In</p>\r\n                            <div className='countdown_new text-center'>\r\n                            {console.log(\"Salediffernce(saleInfo.endTime)\",UpcomingDiffernce(saleInfo.startTime))}\r\n                            <Countdown date={Date.now() +  (UpcomingDiffernce(saleInfo.startTime))}  renderer={renderer} className=\"countdown_grey\" />\r\n                            </div>\r\n                            </> : \r\n\r\n(saleInfo && isSaleLive(saleInfo.startTime,saleInfo.endTime,saleInfo.isPresaleOpen)  ?  \r\n<>\r\n<p className='text-center sale_deta_name mt-3'>Sale Ends In</p>\r\n<div className='countdown_new text-center'>\r\n{console.log(\"Salediffernce(saleInfo.endTime)\",Salediffernce(saleInfo.endTime))}\r\n<Countdown date={Date.now() +  Salediffernce(saleInfo?.endTime)}  renderer={renderer} className=\"countdown_grey\" />\r\n</div>\r\n</>:\r\n<>\r\n<p className='text-center sale_deta_name mt-3'>Sale Ends In</p>\r\n<div className='countdown_new text-center'>\r\n<p className='text-center sale_deta_name mt-3'>Not Live</p>\r\n</div>\r\n</>)}\r\n                      \r\n{console.log(\"parseInt(parseInt(saleInfo?.earnedCap)/parseInt(saleInfo?.hardCap) * 100)\" , parseInt(parseInt(saleInfo?.earnedCap)/parseInt(saleInfo?.softCap) * 100))}\r\n{saleInfo?.LaunchpadType ?\r\n<>\r\n                          <ProgressBar now={saleInfo && parseInt(parseInt(saleInfo?.earnedCap)/parseInt(saleInfo?.softCap) * 100)} className='yellow_bar mt-3'/>\r\n            <p className='white_txt_sm d-flex justify-content-between mt-1'>\r\n               <span className='desc_grey_txt'>{saleInfo && parseInt(parseInt(saleInfo?.earnedCap)/parseInt(saleInfo?.softCap) * 100)} % </span>\r\n               <span className='desc_grey_txt'>{saleInfo && ((saleInfo?.earnedCap)/10**this.state.buyTokenDecimal).toFixed(3)}/{(parseInt(saleInfo.softCap)/10**this.state.buyTokenDecimal).toFixed(2)} {this.state.buyToken}</span>\r\n                </p>             <p className='input_desc_sm'>Amount (Min: {saleInfo && saleInfo?.minEthLimit / 10 ** this.state.buyTokenDecimal} & Max: {saleInfo && saleInfo?.maxEthLimit / 10 ** this.state.buyTokenDecimal}  {this.state.buyToken})</p>\r\n              <p className='input_desc_sm'>You Will Get : {this.state.claim} {this.state.saleInfo?.name}</p>\r\n              </>\r\n   \r\n : <>\r\n <ProgressBar now={saleInfo && parseInt(parseInt(saleInfo?.earnedCap)/parseInt(saleInfo?.softCap) * 100)} className='yellow_bar mt-3'/>\r\n<p className='white_txt_sm d-flex justify-content-between mt-1'>\r\n<span className='desc_grey_txt'>{saleInfo && parseInt(parseInt(saleInfo?.earnedCap)/parseInt(saleInfo?.softCap) * 100)} % </span>\r\n<span className='desc_grey_txt'>{saleInfo && ((saleInfo?.earnedCap)/10**this.state.buyTokenDecimal).toFixed(3)}/{(parseInt(saleInfo.softCap)/10**this.state.buyTokenDecimal).toFixed(2)} {this.state.buyToken}</span>\r\n</p>             <p className='input_desc_sm'>Amount (Min: {saleInfo && saleInfo?.minEthLimit / 10 ** this.state.buyTokenDecimal} & Max: {saleInfo && saleInfo?.maxEthLimit / 10 ** this.state.buyTokenDecimal}  {this.state.buyToken})</p>\r\n{/* <p className='input_desc_sm'>You Will Get : {this.state.claim} {this.state.saleInfo?.name}</p> */}\r\n</>} \r\n               \r\n\r\n                <div className=\"inputs input-groups date_inoput_grps\">\r\n                        <InputGroup className=\"datepicker_input\">\r\n                        <FormControl id=\"amountmax\" placeholder=\"0.0\"\r\n                        value={this.state.amount}\r\n                        onChange={(e)=> { this.setState({ amount: e.target.value });this.calculateToken(e.target.value);}}\r\n                        \r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <InputGroup.Append className='cur_pointer'>\r\n                                <button onClick={async()=> {await this.max();await this.calculateToken(this.state.amount)}} variant=\"outline-secondary\" className=\"trans_cal_btn\">\r\n                                Max\r\n                                </button>\r\n                            </InputGroup.Append>\r\n                    </div>\r\n\r\n                    {saleInfo.buytype ?\r\n                   <> \r\n                    { saleInfo && isSaleLive(saleInfo.startTime,saleInfo.endTime,saleInfo.isPresaleOpen) || isUpcoming(saleInfo.startTime,saleInfo.endTime)? \r\n                      <button onClick={this.buy.bind(this)}disabled={ saleInfo && saleInfo.isWhitelisted ? userData && !(userData.userWhitelistedAmount > 0) : false } className=\"get-started-btn\">{saleInfo && saleInfo.isWhitelisted ? (userData && !(userData.userWhitelistedAmount > 0) ? \"Not Whitelisted\" : \"Buy\"):\"Buy\"} with {this.state.buyToken} </button>:\r\n                      // (isUpcoming(saleInfo.startTime,saleInfo.endTime) ? <button disabled={true} className=\"get-started-btn mr-2\" > Upcoming </button> :\r\n                      ((!isSaleLive(saleInfo.startTime,saleInfo.endTime) ?<button disabled={true} className=\"get-started-btn mr-2\" > Sale InActive </button>:<button onClick={this.buy.bind(this)} className=\"get-started-btn\" > Buy </button>))\r\n                      }\r\n                      </> : \r\n                      \r\n\r\n\r\n                      <>\r\n                      {!this.state.approvebutton ?\r\n                        <button className=\"get-started-btn\" onClick={()=>{this.approvetoken()}}>\r\n                           Approve\r\n                        </button>  : \r\n                        <>\r\n                        { saleInfo && isSaleLive(saleInfo.startTime,saleInfo.endTime,saleInfo.isPresaleOpen) || isUpcoming(saleInfo.startTime,saleInfo.endTime)? \r\n                          <button onClick={this.buy.bind(this)}disabled={ saleInfo && saleInfo.isWhitelisted ? userData && !(userData.userWhitelistedAmount > 0) : false } className=\"get-started-btn\">{saleInfo && saleInfo.isWhitelisted ? (userData && !(userData.userWhitelistedAmount > 0) ? \"Not Whitelisted\" : \"Buy\"):\"Buy\"} with {this.state.buyToken} </button>:\r\n                          // (isUpcoming(saleInfo.startTime,saleInfo.endTime) ? <button disabled={true} className=\"get-started-btn mr-2\" > Upcoming </button> :\r\n                          ((!isSaleLive(saleInfo.startTime,saleInfo.endTime) ?<button disabled={true} className=\"get-started-btn mr-2\" > Sale InActive </button>:<button onClick={this.buy.bind(this)} className=\"get-started-btn\" > Buy </button>))\r\n                          }\r\n                          </>\r\n                        }</>}\r\n                   \r\n\r\n\r\n                    {saleInfo && saleInfo.isVested ?\r\n                    <button  className=\"get-started-btn mt-3\" disabled = {!this.state.saleInfo?.isClaimable}>Vested  {this.state.saleInfo?.symbol} </button>:\r\n                    (saleInfo && saleInfo.isClaimable ? \r\n             \r\n                    <button  onClick={() => this.Claim()} disabled = {!this.state.saleInfo?.isClaimable} className=\"get-started-btn mt-3\"> Claim  {this.state.saleInfo?.symbol}  </button> :\r\n                    <button onClick={() => this.Claim()} disabled = {!this.state.saleInfo?.isClaimable} className=\"get-started-btn mt-3\"> Claim  {this.state.saleInfo?.symbol}  </button>)}\r\n                </div>\r\n                </div>\r\n                </div>\r\n        </div>\r\n\r\n                <div className='row'>\r\n                <div className='col-12 col-md-6 col-lg-6 mb-4'>\r\n                <div className='card_bg card h-100'>\r\n            <div className='card-body'>\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Token Address :</span>\r\n            <span><a href={`https://testnet.bscscan.com/address/${saleInfo && saleInfo.tokenAddress}`} target='_blank'className='desc_grey_txt font_12'>{saleInfo && saleInfo?.tokenAddress}</a></span>\r\n            </p> \r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Access Type:</span>\r\n            {saleInfo && saleInfo.isWhitelisted ?\r\n            <span className='desc_grey_txt font_12'>Private</span> :\r\n           \r\n           \r\n             <span className='desc_grey_txt font_12'>Public</span>}\r\n             </p>\r\n\r\n        \r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Status :</span>\r\n  {saleInfo && isSaleLive(saleInfo.startTime,saleInfo.endTime,saleInfo.isPresaleOpen)  ?\r\n            <span className='desc_grey_txt font_12'>Live</span> : \r\n            ( isUpcoming(saleInfo.startTime) ? \r\n            <span className='desc_grey_txt font_12'>Upcoming</span> :\r\n            <span className='desc_grey_txt font_12'>Closed</span> )}\r\n            </p> \r\n  \r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Minimum Buy :</span>\r\n            <span className='desc_grey_txt font_12'>{saleInfo && (parseInt(saleInfo.minEthLimit)/10**this.state.buyTokenDecimal).toFixed(3)}  {this.state.buyToken}</span>\r\n            </p> \r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Maximum Buy :</span>\r\n            <span className='desc_grey_txt font_12'>{saleInfo && (parseInt(saleInfo.maxEthLimit)/10**this.state.buyTokenDecimal).toFixed(3)}  {this.state.buyToken}</span>\r\n            </p> \r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>You Purchased :</span>\r\n            {console.log(\"userData.userClaimbale\",userData?.userClaimbale)}\r\n            <span className='desc_grey_txt font_12'> {userData && (parseInt(userData?.userClaimbale)/10**parseInt(saleInfo.decimals)).toFixed(3)} {saleInfo && saleInfo.symbol}</span>\r\n            </p> \r\n\r\n            {saleInfo?.LaunchpadType &&  <><p className='text-white mt-4'>Token Metrics</p>\r\n                <hr className='hr_green' />\r\n                {console.log(\"liqtoken\" , ((saleInfo?.hardCap/10**this.state.charttokendecimal) * saleInfo?.presaleRate) , \r\n                  ((saleInfo?.hardCap/10**this.state.charttokendecimal) * saleInfo?.presaleRate)-(this.state.unsoldtoken)\r\n                )}\r\n               {this.state.chartstatus && saleInfo?.LaunchpadType  && <Chart options={this.state.options} \r\n                   series={[((saleInfo?.hardCap/10**this.state.charttokendecimal) * saleInfo?.presaleRate) , \r\n                   ((saleInfo?.hardCap/10**this.state.charttokendecimal) * saleInfo?.presaleRate)-(this.state.unsoldtoken) , this.state.unsoldtoken , this.state.liqtoken]}\r\n                className=\"chart_donut_res\" type=\"donut\" />}</>}\r\n{console.log(\"(saleInfo?.hardCap/10**this.state.charttokendecimal) * saleInfo?.presaleRate\" , (saleInfo?.hardCap/10**this.state.charttokendecimal) * saleInfo?.presaleRate)}\r\n{/* {!saleInfo?.LaunchpadType  && <Chart options={this.state.options1} \r\n                   series={[(saleInfo?.hardCap/10**this.state.charttokendecimal) * saleInfo?.presaleRate\r\n                  ]}\r\n                className=\"chart_donut_res\" type=\"donut\" />} */}\r\n\r\n\r\n                </div>\r\n                </div>\r\n</div>\r\n<div className={saleInfo?.owner == getAccount()?'col-12 col-md-6 col-lg-6 mb-4': \"d-none\"}>\r\n                <div className='card_bg card h-100'>\r\n            <div className='card-body'>\r\n                <p className='text-white'>Owner Zone</p>\r\n                <hr className='hr_green' />\r\n                <div className='col-12 col-md-12 mb-3 px-0'>\r\n                        <p className='input_desc_sm'>Sale Type</p>\r\n                      \r\n                        <div className=\"custom-control custom-radio mb-2\">\r\n                    <input type=\"checkbox\"  checked={saleInfo && saleInfo?.isWhitelisted ? false : true} id=\"customRadio1\" name=\"customRadio\" className=\"custom-control-input\" />\r\n                    <label className=\"custom-control-label\" for=\"customRadio1\">Public</label>\r\n                    </div>   \r\n\r\n                    <div className=\"custom-control custom-radio mb-2\">\r\n                    <input type=\"checkbox\"  checked={saleInfo && saleInfo?.isWhitelisted ? true : false}id=\"customRadio2\" name=\"customRadio\" className=\"custom-control-input\" />\r\n                    <label className=\"custom-control-label\" for=\"customRadio2\">Whitelist</label>\r\n                    </div>  \r\n\r\n                    {/* <div className=\"custom-control custom-radio\">\r\n                    <input type=\"radio\" id=\"customRadio3\" name=\"customRadio\" className=\"custom-control-input\" />\r\n                    <label className=\"custom-control-label\" for=\"customRadio3\">Public Anti-Bot</label>\r\n                    </div>                 */}\r\n                        </div>\r\n\r\n                       \r\n                         <div className='whitelist_div'>\r\n                        {/* <button className=\"get-started-btn w-100 mb-2\" onClick={() => this.setState({ whitelistModal: true })}>\r\n                          Add users to whitelist\r\n                        </button>\r\n                        <button className=\"get-started-btn w-100 mb-2\" onClick={() => this.setState({ removewhitelistModal: true })}>\r\n                          Remove users from whitelist\r\n                        </button> */}\r\n                        {/* <button className=\"get-started-btn w-100 mb-2\" onClick={() => this.setState({ changestatueModal: true })}>\r\n                          Setting time to public\r\n                        </button> */}\r\n                       \r\n                        {saleInfo && saleInfo?.isWhitelisted ? \r\n                        <button onClick={() => this.Handlewhitelist(false)} className=\"get-started-btn w-100 mb-2\">\r\n                          Disable whitelist\r\n                        </button> :\r\n                        <button onClick={() => this.Handlewhitelist(true)} className=\"get-started-btn w-100 mb-2\">\r\n                        Enable whitelist\r\n                      </button>}\r\n                         </div>\r\n                       \r\n\r\n                        <div className='col-12 col-md-12 mb-3 px-0'>\r\n                        <p className='input_desc_sm'>Pool Actions</p>\r\n                        <button onClick={()=> this.stopSaleEvent()}className=\"get-started-btn w-100 mb-2\"\r\n                          // disabled = {!isSaleLive(saleInfo.startTime,saleInfo.endTime,saleInfo.isPresaleOpen)}\r\n                          // disabled = {!saleInfo.isPresaleOpen}\r\n                         >\r\n                          Stop Sale\r\n                        </button>\r\n                        {saleInfo && saleInfo.LaunchpadType ? <button onClick={() =>this.Finalisesale()}className=\"get-started-btn w-100 mb-2\" >\r\n                           Finalize\r\n                        </button> : \r\n                       \r\n                        <button onClick={() =>this.Finalisesale()}className=\"get-started-btn w-100 mb-2\" disabled = { this.state.checkbalance  < this.state.checkdeposittoken  }>\r\n                        Finalize\r\n                     </button>\r\n                    \r\n                        }\r\n                        {console.log(\"this.state.checkdeposittoken\",this.state.checkdeposittoken ,this.state.checkbalance)}\r\n\r\n{ this.state.checkbalance  < this.state.checkdeposittoken   ?\r\n                         <span className='bottom_text'>Please deposit this much of token manually through metamask  {(this.state.checkdeposittoken) } {saleInfo.symbol}</span> : <></>}\r\n                        <button onClick={()=> this.withdrawToken()} className=\"get-started-btn w-100 mb-2\" >\r\n                         Get Unsold {this.state.saleInfo?.symbol}\r\n                        </button>\r\n                        <button onClick={() => this.BNBwithdraw()} className=\"get-started-btn w-100 mb-2\">\r\n                          Withdraw  {this.state.buyToken}\r\n                        </button> \r\n                       \r\n                       \r\n                        </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        \r\n\r\n                \r\n               \r\n\r\n        </Container>\r\n\r\n            <Container className='pb-5 px-0 mt-4'>\r\n                 \r\n                 <center>\r\n                   <small className=\"mt-3 bottom_text\">\r\n                     Disclaimer: The information provided shall not in any way\r\n                     constitute a recomendation as to whether you should invest\r\n                     in any product discussed. We accept no liability for any\r\n                     loss occasioned to any person acting or refraining from\r\n                     action as a result of any material provided or published.\r\n                   </small>\r\n                 </center>\r\n               </Container>\r\n               </div>\r\n            </div>\r\n           </div>\r\n           </div>\r\n   {whitelistModal && <WhitelistModal onDismiss={() => this.setState({ whitelistModal: false })} /> }\r\n           {removewhitelistModal && <RemoveWhitelistmodal onDismiss={() => this.setState({ removewhitelistModal: false })} /> }\r\n           {changestatueModal && <ChangeStatusmodal onDismiss={() => this.setState({ changestatueModal: false })} /> }\r\n        </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LaunchpadDetail","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Projects/Wallethome.js",["997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\n\nimport Header from '../Header';\nimport Sidebar from '../Sidebar';\nimport Trendingslider from '../trendingslider';\n\nimport Walletmodal from \"../Walletmodal\";\n\nimport toast, { Toaster } from 'react-hot-toast';\nimport { getAccount, Userdollar } from '../../hooks/useAccount'\n\n\n\n\n\nimport {  Container, FormControl, InputGroup, Dropdown, Nav, Form, Tab, Row, Col } from 'react-bootstrap';\nimport '../../css/styles.css';\n\nimport favicon from \"../../images/favicon.png\"\nimport proof from \"../../images/proof.webp\"\nimport loader from \"../../images/loader.gif\"\nimport { Link } from 'react-router-dom';\nimport { UseProvider } from '../../hooks/useWeb3';\nimport { Getbalance } from '../../hooks/useContract';\nimport { getuserdatahook } from '../../hooks/usebackend';\nimport { getSaleCardsLimit, getsaledatalimit } from '../../hooks/useProjects';\nimport { iconTheme, position, style } from '../../hooks/useToast';\n\nclass Wallethome extends Component {\n  showLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.add(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 0.05;\n    document.getElementById(\"loader_div\").classList.remove(\"d-none\");\n    document.getElementById(\"loader_div\").classList.add(\"d-block\");\n  }\n\n  hideLoader()\n  {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"overflow_hidden\");\n    document.getElementById(\"logo_overlay\").style.opacity = 1;\n    document.getElementById(\"loader_div\").classList.remove(\"d-block\");\n    document.getElementById(\"loader_div\").classList.add(\"d-none\");\n  }\n  \n    componentDidMount()\n    {\n      var account = getAccount();\n      if(!account){\n        // console.log(\"sessionStorage.getItem\" , kyc)\n        this.props.history.push(\"/\");\n      }\n      // this.showLoader();\n      this.hideLoader();\n      this.getbalance();\n      this.getuserdata();\n      \n      \n    //    this.setState({ accountInfo: getAccount() });\n    }\n\n    copyText(a, b){\n      toast.success(\"Address Copied\", {\n          position: position.position,\n          style: style,\n          iconTheme: iconTheme,\n      }\n      )\n\n  }\n\n  copyUrl(a, b){\n    toast.success(\"Profile Url Copied!\", {\n        position: position.position,\n        style: style,\n        iconTheme: iconTheme,\n    }\n    )\n\n}\n\n    // componentDidUpdate(){\n    //   this.makeTimercopyaddress();\n    //   this.makeTimercopyurl();\n    // }\n\n    makeTimercopyaddress(){\n      setInterval(() => {\n          this.setState({copyaddress: \"Copy\"})\n      }, 5000)\n    }\n    makeTimercopyurl(){\n      setInterval(() => {\n          this.setState({copyurl: \"Copy\"})\n      }, 5000)\n    }\n\n    getbalance = async()=>{\n      const balance = await Getbalance();\n      this.setState({\"balance\" : balance})\n    }\n\n    getuserdata = async()=>{\n      let userdata = await getuserdatahook(this.state.accountInfo.toLowerCase());\n      console.log(\"userdata\" , userdata.data.data);\n      this.setState({investedpools : userdata.data.data.investedpools.reverse()})\n      this.setState({wishlist : userdata.data.data.wishlist.reverse()})\n      this.setState({viewlist : userdata.data.data.viewlist.reverse()})\n      this.setState({investedamount : userdata.data.data.investedamount})\n      let dollar = await Userdollar(userdata.data.data.investedamount);\n      this.setState({dollar : dollar});\n      this.handleactivities();\n    }\n\n    logOut = async () =>{\n      this.setState({accountInfo : \"\"})\n      localStorage.removeItem(\"accountInfo\")\n      if(localStorage.getItem(\"walletconnect\")!=null)\n   {\n      const provider = await UseProvider();\n      await provider.disconnect()\n   }\n    //  this.setState({accountModal: false})\n    this.props.history.push(\"/\");\n      window.location.reload()\n      console.log(\"logout\")\n  }\n\n  handleactivities = async() =>{\n    this.setState({ totalsales : []});\n    this.loadData(this.state.investedpools);\n  }\n\n  handlefav = async() =>{\n    this.setState({ totalsales : []});\n     this.loadData(this.state.wishlist);\n    \n  }\n\n  handleview = async() =>{\n    console.log(\"recently view\");\n    this.setState({ totalsales : []});\n    \n     this.loadData(this.state.viewlist);\n  }\n\n    constructor(props) {\n        super(props);\n        this.state = {          \n            walletModal: false,\n            accountInfo: getAccount()? getAccount() : \"\",\n            logined:true,\n            balance : \"\",\n            showTooltip:false,\n            showTooltipOne:false,\n            copyaddress : \"Copy\",\n            copyurl : \"Copy\",\n\n            wishlist : [],\n            viewlist : [],\n            investedpools : [],\n            investedamount :\"\",\n            interval : 0,\n            loadinterval : 3,\n            totalsales : [],\n            loading : false,\n            dollar : 0\n        };\n    }\n    sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\n    async loadData(Proxydata){\n      this.showLoader();\n      // const Proxydata = await getTotalSalesInfo();\n      // this.setState({ proxy : Proxydata })\n      if(Proxydata.length>0){\n        const newly = await getsaledatalimit(Proxydata,0 , this.state.loadinterval);\n        await this.sleep(1000)\n        console.log(\"newly\" , newly);\n        // const total = this.state.totalsales.concat(newly);\n        // console.log(\"total\" , total);\n        this.setState({ totalsales: newly }); \n        this.setState({interval :   this.state.loadinterval})\n      }\n      else{\n        this.setState({ totalsales: [] });\n      }\n        \n     \n      this.hideLoader();\n  }\n\n  async viewmore(Proxydata){\n    this.setState({loading : true});\n    if(Proxydata.length>0){\n      const newly = await getsaledatalimit(Proxydata,this.state.interval, this.state.interval+this.state.loadinterval);\n      await this.sleep(1000)\n      console.log(\"newly\" , newly);\n      const total = this.state.totalsales.concat(newly);\n      console.log(\"total\" , total);\n      this.setState({ totalsales: total }); \n      this.setState({interval :   this.state.interval + this.state.loadinterval})\n      this.setState({loading : false});\n    }\n    else{\n      this.setState({ totalsales: [] });\n      this.setState({loading : false});\n    }\n  }\n \n    render() {\n\n\n      \n      \n\treturn (\n    <div id=\"loader_main\">\n    <div id=\"loader_div\">\n    <span className=\"spin_round\">\n\n    </span>\n    <img src={favicon} className=\"logo_load\" />\n  </div>\n        <div className='logo_overlay' id=\"logo_overlay\">\n\n           <Header/>\n          \n           <div className=\"whole_sec pb-5\">\n           <div className='flex_side_right'>\n            <Sidebar />\n           {/* ongoing_sec */}\n           <div className='right_side_sec'>\n           {/* <div className=\"text-white topBar d-flex justify-content-between\">\n                  \n                  <small>Trending</small>\n                <small>\n                  #1&nbsp;<span>Husy</span>\n                </small>\n                <small>\n                  #2&nbsp;<span>ORL</span>\n                </small>\n                <small>\n                  #3&nbsp;<span>UWC</span>\n                </small>\n                <small>\n                  #4&nbsp;<span>777</span>\n                </small>\n                <small>\n                  #5&nbsp;<span>IDXS</span>\n                </small>\n                <small>\n                  #6&nbsp;<span>COUGNU</span>\n                </small>\n                <small>\n                  #7&nbsp;<span>CRICLE</span>\n                </small>\n                <small>\n                  #8&nbsp;<span>KASA</span>\n                </small>\n                <small>\n                  #9&nbsp;<span>FIFAPP</span>\n                </small>\n                <small>\n                  #10&nbsp;<span>SOG</span>\n                </small>\n                <small>\n                  #11&nbsp;<span>COOSHA</span>\n                </small>\n                <small>\n                  #12&nbsp;<span>Honey</span>\n                </small>\n                \n                \n              </div> */}\n              {/* <Trendingslider/> */}\n              <div className=\"right_side_spacing\">\n                <div className='container'>\n              <div className='row mt-5'>\n           <div className='col-12 mx-auto px-0'>\n           <div className=\"tab_img\">\n                 <div className='card_bg card'>\n            <div className='card-body'>\n                <p className='wallet_address_text'>Connected as \n                    <span>{localStorage.getItem(\"accountInfo\")}</span>\n                    <CopyToClipboard text={`${localStorage.getItem(\"accountInfo\")}`} onCopy={() => this.copyText('invite link', `${localStorage.getItem(\"accountInfo\")}`)}>\n                        <button variant='link' className='fa fa-copy' style={{backgroundColor:\"transparent\", border:0}}></button>\n                  </CopyToClipboard>\n                  \n                    {/* <span onClick={() =>  {\n                        navigator.clipboard.writeText(localStorage.getItem(\"accountInfo\"))\n                        this.setState({\"copyaddress\" : \"Copied\"})\n                        this.makeTimercopyaddress()\n                      }}>\n                        <div className='tooltip_parent'>\n                        <i className={this.state.copyaddress == \"Copy\"?'fa fa-copy' : \"fa fa-check\"}  \n                         onMouseOver={()=>{this.setState({showTooltip:true})}}\n                        onMouseLeave={()=>{this.setState({showTooltip:false})}}\n                        // onClick={()=>{this.setState({showTooltip:!this.state.showTooltip})}}\n                        />\n\n                        {this.state.showTooltip?\n                      <span className='tooltip_custom' id=\"dummy_tooltip  \">\n                      {this.state.copyaddress}\n                    </span>:\n                    \"\"\n                    }\n                        </div>\n                    </span> */}\n                    </p>   \n                <p className='text_green'>{this.state.balance? this.state.balance+ \" BNB\" : \"\" }</p>  \n                <div className=\"inputs input-groups\">\n                <InputGroup className=\"input_grp_profile_url\">\n                <div class=\"input-group-prepend\">\n    <span class=\"input-group-text\" id=\"basic-addon1\">Profile URL</span>\n  </div>\n                            {this.state.accountInfo &&<FormControl  id=\"profile_url\" placeholder=\"https://www.demo.com/user-achievement/u33CedE\"\n                                aria-describedby=\"basic-addon2\"\n                                value={window.location.origin +\"/achievement/\"+this.state.accountInfo.toString().toLowerCase()}\n                            />}\n\n<CopyToClipboard text={`${window.location.origin +\"/achievement/\"+this.state.accountInfo.toString().toLowerCase()}`} onCopy={() => this.copyUrl('invite link', `${window.location.origin +\"/achievement/\"+this.state.accountInfo.toString().toLowerCase()}`)}>\n                        <button variant='link' className='fa fa-copy' style={{backgroundColor:\"transparent\", border:0, color:\"#848484\"}}></button>\n                  </CopyToClipboard>\n                             {/* <span onClick={() =>  {\n                        navigator.clipboard.writeText(window.location.origin +\"/achievement/\"+this.state.accountInfo.toString().toLowerCase())\n                        this.setState({\"copyurl\" : \"Copied\"});\n                        this.makeTimercopyurl()\n                      }}>\n                            <div class=\"input-group-append\">\n                           \n                            <div className='tooltip_parent'>\n                        <i className={this.state.copyurl == \"Copy\"?'fa fa-copy' : \"fa fa-check\"}\n                         onMouseOver={()=>{this.setState({showTooltipOne:true})}}\n                        onMouseLeave={()=>{this.setState({showTooltipOne:false})}}\n                        // onClick={()=>{this.setState({showTooltipOne:!this.state.showTooltipOne})}}\n                        />\n\n                        {this.state.showTooltipOne?\n                      <span className='tooltip_custom' id=\"dummy_tooltip  \">\n                      {this.state.copyurl}\n                    </span>:\n                    \"\"\n                    }\n                        </div>\n                        \n  </div>\n  </span> */}\n  {/* <div class=\"input-group-append\">\n<i className='fa fa-refresh' />\n  </div>\n  <div class=\"input-group-append\">\n<i className='fa fa-close' />\n  </div> */}\n                          \n                        </InputGroup>\n                    </div>\n                <hr className='hr_green' />\n                <button className=\"get-started-btn\" onClick={this.logOut}>\n                           Logout\n                    </button>\n             </div>\n             </div>\n            </div>\n            </div>\n        \n\n                \n               \n        </div>\n        </div>\n\n        <div>\n        <div className=\"inner_bg mt-5 pb-5\">\n            <div className=\"container px-1\">\n            <Tab.Container  defaultActiveKey=\"first\">\n  <Row className=\"container-fluid w-100 mx-0 px-0\">\n    <Col lg={12} className=\"px-0\">\n      <Nav variant=\"pills\" className=\"nav_green\">\n        <Nav.Item>\n          <Nav.Link eventKey=\"first\" id=\"first\">\n          <p className='mb-0' onClick={()=>this.handleactivities()}>Activities</p>\n\n          </Nav.Link>\n         </Nav.Item>\n         \n        <Nav.Item>\n          <Nav.Link eventKey=\"second\" id=\"second\">\n          <p className='mb-0' onClick={()=>this.handlefav()}>Favorited</p>\n   \n          </Nav.Link>\n                               \n        </Nav.Item>\n        \n        <Nav.Item>\n          <Nav.Link eventKey=\"third\" id=\"third\">\n          <p className='mb-0' onClick={()=>this.handleview()}>Recently Viewed</p>\n   \n          </Nav.Link>\n        \n        </Nav.Item>\n        \n      </Nav>\n    </Col>\n    <hr class=\"hr_yellow mt-0 mt-5 mb-3\" />\n\n    <Col lg={12} className=\"img_center_lg px-0\">\n    <div className='container container_custom px-0'>\n      <Tab.Content>\n        <Tab.Pane eventKey=\"first\">\n            {this.state.logined?\n            <div>\n                   <div className='card_bg card mt-4'>\n            <div className='card-body'>\n                <div className='row row_invested_sec'>\n                    <div className='col-12 col-md-4 text-center'>\n                        <p className='pool_detail_title'>Total Pool Invested</p>                        \n                        <p className='text_green font_18 mb-0'>{this?.state?.investedpools?.length}</p>\n\n                    </div>\n                    <div className='col-12 col-md-4 text-center'>\n                        <p className='pool_detail_title'>Total BNB Invested</p>                        \n                        <p className='text_green font_18 mb-0'>{this?.state?.investedamount}</p>\n\n                    </div>\n                    <div className='col-12 col-md-4 text-center'>\n                        <p className='pool_detail_title'>Total Invested</p>                        \n                        <p className='text_green font_18 mb-0'>{this?.state?.investedamount}</p>\n\n                    </div>\n                </div>\n                </div>\n                </div>\n                <div class=\"table-responsive table_repso_with_dropdwon mt-3\">\n  <table className=\"table\">\n    <tr>\n    <th>\n        <p>Name</p>\n                    </th>\n      <th>\n      <p>Sale type</p>\n      </th>\n                    <th>\n                    <p>Sale Address</p>\n                    </th>\n                  \n                  \n                    {/* <th>\n                        <InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"Type\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                       <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      >\n                        <Dropdown className='filter_dropdown'>\n                        <Dropdown.Toggle id=\"dropdown-basic\" className='table_filter_icon'>\n                        <i class=\"fas fa-filter\"></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className='table_dropdown_menu'>\n        <Dropdown.Item href=\"#/action-1\"><div className=\"custom-control custom-checkbox\">\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck13\" />\n  <label className=\"custom-control-label\" for=\"customCheck13\">Claimed</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"#/action-2\"><div className=\"custom-control custom-checkbox\">\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck14\" />\n  <label className=\"custom-control-label\" for=\"customCheck14\">Contributed</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"#/action-3\"><div className=\"custom-control custom-checkbox\">\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck15\" />\n  <label className=\"custom-control-label\" for=\"customCheck15\">Emergency Withdrawn</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"#/action-3\"><div className=\"custom-control custom-checkbox\">\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck16\" />\n  <label className=\"custom-control-label\" for=\"customCheck16\">Withdrawn</label>\n</div></Dropdown.Item>\n<Dropdown.Divider />\n<Dropdown.Item href=\"#/action-3\">\n  <div className='dropdown_buttons d-flex justify-content-between'>\n  <button className=\"get-started-btn mr-2\">Reset</button>\n  <button className=\"get-started-btn\">OK</button>\n  </div>\n</Dropdown.Item>\n      </Dropdown.Menu>\n                        </Dropdown>\n                      </InputGroup.Text>\n                    </InputGroup>\n                    </th> */}\n                    <th>\n                    <p>Action</p>\n                    </th>\n                  \n                  \n                 \n    </tr>  \n   {this.state.totalsales.map((data , i)=><>\n    <tr>\n      <td><span className=\"d-flex align-items-center\">\n      <div className=\"relative_token_div  mr-2\">\n        <img className=\"token_image_sm \" src={favicon} />\n        </div> {data.name}\n        </span></td>\n        <td>{data?.isWhitelisted ? \"Whitelist sale\" : \"public sale\"}</td>       \n        <td>{data.saleAddress}</td>\n        {/* <td>Claimed</td>        */}\n       \n        {/* <td>0x025c2166741685bc6577ujtiio768ghrtyC9</td> */}\n        <td><a className=\"link_text\" href={data?.isWhitelisted ?`/privatesaledetail/${data.saleAddress}` : `/launchpaddetail/${data.saleAddress}`}>View</a></td>\n    </tr></>)}\n    \n\n    {/* <tr>\n      <td><span className=\"d-flex align-items-center\">\n      <div className=\"relative_token_div  mr-2\">\n        <img className=\"token_image_sm \" src={favicon} />\n        </div> 5IREToken\n        </span></td>\n        <td>03:05:42:01</td>       \n        <td>$580</td>\n        <td>Withdrawn</td>       \n       \n        <td>0x025c2166741685bc6577ujtiio768ghrtyC9</td>\n    </tr>\n    <tr>\n      <td><span className=\"d-flex align-items-center\">\n      <div className=\"relative_token_div  mr-2\">\n        <img className=\"token_image_sm \" src={favicon} />\n        </div> 5IREToken\n        </span></td>\n        <td>03:05:42:01</td>       \n        <td>$580</td>\n        <td>Contributed</td>       \n       \n        <td>0x025c2166741685bc6577ujtiio768ghrtyC9</td>\n    </tr> */}\n  </table>\n</div>\n<div className='text-center mt-3'>\n  {this.state.totalsales.length < this.state.investedpools.length ?\n  <button className=\"get-started-btn\" id=\"load_more_btn_1\"\n  onClick={()=>this.viewmore(this.state.investedpools)}\n  >{this.state.loading ? \"Loading...\" : \"View More\"}</button>\n  : <></>\n}\n\n</div>\n            </div>\n            :\n            <div className='text-center'>\n            <p className='text-white'>We are protecting your activity. You need to sign to see it.</p>\n            <button className=\"get-started-btn\">\n            Sign in\n            </button>\n            </div>\n            }\n       \n        </Tab.Pane>\n        <Tab.Pane eventKey=\"second\">\n               \n        {this.state.logined?\n            <div>\n                   <div className='card_bg card mt-4'>\n            <div className='card-body'>\n            <div className='row row_invested_sec'>\n                    <div className='col-12 col-md-4 text-center'>\n                        <p className='pool_detail_title'>Total Pool Invested</p>                        \n                        <p className='text_green font_18 mb-0'>{this?.state?.investedpools?.length}</p>\n\n                    </div>\n                    <div className='col-12 col-md-4 text-center'>\n                        <p className='pool_detail_title'>Total BNB Invested</p>                        \n                        <p className='text_green font_18 mb-0'>{this?.state?.investedamount}</p>\n\n                    </div>\n                    <div className='col-12 col-md-4 text-center'>\n                        <p className='pool_detail_title'>Total Invested</p>                        \n                        <p className='text_green font_18 mb-0'>{this?.state?.investedamount}</p>\n\n                    </div>\n                </div>\n                </div>\n                </div>\n                <div class=\"table-responsive table_repso_with_dropdwon mt-3\">\n  <table className=\"table\">\n    <tr>\n    <th>\n        <p>Name</p>\n                    </th>\n      <th>\n      <p>Saletype</p>\n      </th>\n                    <th>\n                    <p>Sale Address</p>\n                    </th>\n\n                    <th>\n                    <p>Action</p>\n                    </th>\n                  \n                  \n                    {/* <th>\n                        <InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"Type\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                       <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      >\n                        <Dropdown className='filter_dropdown'>\n                        <Dropdown.Toggle id=\"dropdown-basic\" className='table_filter_icon'>\n                        <i class=\"fas fa-filter\"></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className='table_dropdown_menu'>\n        <Dropdown.Item href=\"#/action-1\"><div className=\"custom-control custom-checkbox\">\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck13\" />\n  <label className=\"custom-control-label\" for=\"customCheck13\">Claimed</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"#/action-2\"><div className=\"custom-control custom-checkbox\">\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck14\" />\n  <label className=\"custom-control-label\" for=\"customCheck14\">Contributed</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"#/action-3\"><div className=\"custom-control custom-checkbox\">\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck15\" />\n  <label className=\"custom-control-label\" for=\"customCheck15\">Emergency Withdrawn</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"#/action-3\"><div className=\"custom-control custom-checkbox\">\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck16\" />\n  <label className=\"custom-control-label\" for=\"customCheck16\">Withdrawn</label>\n</div></Dropdown.Item>\n<Dropdown.Divider />\n<Dropdown.Item href=\"#/action-3\">\n  <div className='dropdown_buttons d-flex justify-content-between'>\n  <button className=\"get-started-btn mr-2\">Reset</button>\n  <button className=\"get-started-btn\">OK</button>\n  </div>\n</Dropdown.Item>\n      </Dropdown.Menu>\n                        </Dropdown>\n                      </InputGroup.Text>\n                    </InputGroup>\n                    </th>\n                    <th>\n                    <p>Transaction</p>\n                    </th> */}\n                  \n                  \n                 \n    </tr>  \n    {console.log(\"total sales\" , this.state.totalsales)}\n   {this.state.totalsales && this.state.totalsales.map((data , i)=><>\n    <tr>\n      <td><span className=\"d-flex align-items-center\">\n      <div className=\"relative_token_div  mr-2\">\n        <img className=\"token_image_sm \" src={favicon} />\n        </div> {data?.name}\n        </span></td>\n        <td>{data?.isWhitelisted ? \"Whitelist sale\" : \"public sale\"}</td>       \n        {/* <td>$580</td>\n        <td>Claimed</td>        */}\n       \n        <td>{data.saleAddress}</td>\n        <td><a className=\"link_text\" href={data?.isWhitelisted ?`/privatesaledetail/${data.saleAddress}` : `/launchpaddetail/${data.saleAddress}`}>View</a></td>\n    </tr>\n   </>)}\n    \n\n    {/* <tr>\n      <td><span className=\"d-flex align-items-center\">\n      <div className=\"relative_token_div  mr-2\">\n        <img className=\"token_image_sm \" src={favicon} />\n        </div> 5IREToken\n        </span></td>\n        <td>03:05:42:01</td>       \n        <td>$580</td>\n        <td>Withdrawn</td>       \n       \n        <td>0x025c2166741685bc6577ujtiio768ghrtyC9</td>\n    </tr>\n    <tr>\n      <td><span className=\"d-flex align-items-center\">\n      <div className=\"relative_token_div  mr-2\">\n        <img className=\"token_image_sm \" src={favicon} />\n        </div> 5IREToken\n        </span></td>\n        <td>03:05:42:01</td>       \n        <td>$580</td>\n        <td>Contributed</td>       \n       \n        <td>0x025c2166741685bc6577ujtiio768ghrtyC9</td>\n    </tr> */}\n  </table>\n</div>\n<div className='text-center mt-3'>\n{this.state.totalsales.length < this.state.wishlist.length ?\n  <button className=\"get-started-btn\" id=\"load_more_btn_1\"\n  onClick={()=>this.viewmore(this.state.wishlist)}\n  >{this.state.loading ? \"Loading...\" : \"View More\"}</button>\n  : <></>\n}\n\n</div>\n            </div>\n            :\n            <div className='text-center'>\n            <p className='text-white'>We are protecting your activity. You need to sign to see it.</p>\n            <button className=\"get-started-btn\">\n            Sign in\n            </button>\n            </div>\n            }     \n        </Tab.Pane>\n        <Tab.Pane eventKey=\"third\">\n        {this.state.logined?\n            <div>\n                   <div className='card_bg card mt-4'>\n            <div className='card-body'>\n            <div className='row row_invested_sec'>\n                    <div className='col-12 col-md-4 text-center'>\n                        <p className='pool_detail_title'>Total Pool Invested</p>                        \n                        <p className='text_green font_18 mb-0'>{this?.state?.investedpools?.length}</p>\n\n                    </div>\n                    <div className='col-12 col-md-4 text-center'>\n                        <p className='pool_detail_title'>Total BNB Invested</p>                        \n                        <p className='text_green font_18 mb-0'>{this?.state?.investedamount}</p>\n\n                    </div>\n                    <div className='col-12 col-md-4 text-center'>\n                        <p className='pool_detail_title'>Total Invested</p>                        \n                        <p className='text_green font_18 mb-0'>{this?.state?.investedamount}</p>\n\n                    </div>\n                </div>\n                </div>\n                </div>\n                <div class=\"table-responsive table_repso_with_dropdwon mt-3\">\n  <table className=\"table\">\n    <tr>\n    <th>\n        <p>Name</p>\n                    </th>\n      <th>\n      <p>Date</p>\n      </th>\n                    <th>\n                    <p>Amount</p>\n                    </th>\n                  \n                  \n                    {/* <th> */}\n                        {/* <InputGroup className=\"mb-3 input_group\">\n                      <Form.Control\n                        value=\"Type\"\n                        aria-label=\"Recipient's username\"\n                        aria-describedby=\"basic-addon2\"\n                      />\n                       <InputGroup.Text\n                        id=\"basic-addon2\"\n                        className=\"input_group input_group_filteralign\"\n                      > */}\n                        {/* <Dropdown className='filter_dropdown'>\n                        <Dropdown.Toggle id=\"dropdown-basic\" className='table_filter_icon'>\n                        <i class=\"fas fa-filter\"></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className='table_dropdown_menu'>\n        <Dropdown.Item href=\"#/action-1\"><div className=\"custom-control custom-checkbox\">\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck13\" />\n  <label className=\"custom-control-label\" for=\"customCheck13\">Claimed</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"#/action-2\"><div className=\"custom-control custom-checkbox\">\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck14\" />\n  <label className=\"custom-control-label\" for=\"customCheck14\">Contributed</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"#/action-3\"><div className=\"custom-control custom-checkbox\">\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck15\" />\n  <label className=\"custom-control-label\" for=\"customCheck15\">Emergency Withdrawn</label>\n</div></Dropdown.Item>\n        <Dropdown.Item href=\"#/action-3\"><div className=\"custom-control custom-checkbox\">\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck16\" />\n  <label className=\"custom-control-label\" for=\"customCheck16\">Withdrawn</label>\n</div></Dropdown.Item>\n<Dropdown.Divider />\n<Dropdown.Item href=\"#/action-3\">\n  <div className='dropdown_buttons d-flex justify-content-between'>\n  <button className=\"get-started-btn mr-2\">Reset</button>\n  <button className=\"get-started-btn\">OK</button>\n  </div>\n</Dropdown.Item>\n      </Dropdown.Menu>\n                        </Dropdown> */}\n                      {/* </InputGroup.Text>\n                    </InputGroup> */}\n                    {/* </th> */}\n                    {/* <th>\n                    <p>Transaction</p>\n                    </th> */}\n                  \n                  \n                 \n    </tr>  \n   \n    {this.state.totalsales.map((data , i)=><>\n    <tr>\n      <td><span className=\"d-flex align-items-center\">\n      <div className=\"relative_token_div  mr-2\">\n        <img className=\"token_image_sm \" src={favicon} />\n        </div> {data?.name}\n        </span></td>\n        <td>{data?.isWhitelisted ? \"Whitelist sale\" : \"public sale\"}</td>       \n        {/* <td>$580</td>\n        <td>Claimed</td>        */}\n       \n        <td>{data.saleAddress}</td>\n        <td><a className=\"link_text\" href={data?.isWhitelisted ?`/privatesaledetail/${data.saleAddress}` : `/launchpaddetail/${data.saleAddress}`}>View</a></td>\n    </tr>\n   </>)}\n  </table>\n</div>\n<div className='text-center mt-3'>\n{this.state.totalsales.length < this.state.viewlist.length ?\n  <button className=\"get-started-btn\" id=\"load_more_btn_1\"\n  onClick={()=>this.viewmore(this.state.viewlist)}\n  >{this.state.loading ? \"Loading...\" : \"View More\"}</button>\n  : <></>\n}\n</div>\n            </div>\n            :\n            <div className='text-center'>\n            <p className='text-white'>We are protecting your activity. You need to sign to see it.</p>\n            <button className=\"get-started-btn\">\n            Sign in\n            </button>\n            </div>\n            }\n        </Tab.Pane> \n       \n      </Tab.Content>\n      </div>\n    </Col>\n  </Row>\n</Tab.Container>\n\n              \n                </div>\n            </div>\n        </div>\n\n            <Container className='pb-5 px-0 mt-4'>\n                 \n                 <center>\n                   <small className=\"mt-3 bottom_text\">\n                     Disclaimer: The information provided shall not in any way\n                     constitute a recomendation as to whether you should invest\n                     in any product discussed. We accept no liability for any\n                     loss occasioned to any person acting or refraining from\n                     action as a result of any material provided or published.\n                   </small>\n                 </center>\n               </Container>\n            </div>\n           </div>\n           </div>\n           </div>\n\n            {/* <Footer /> */}\n        </div>\n        </div>\n        )\n    }\n}\n\nexport default Wallethome","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Sidebar.js",["1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport { Card, Accordion, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport Walletmodal from \"./Walletmodal\";\nimport Settingsmodal from \"./Settingsmodal\";\n\n// import 'font-awesome/css/font-awesome.min.css';\n\nimport { getAccount, getChainId, setChainId } from '../hooks/useAccount'\n\n\nimport { getProxyOwner } from '../hooks/useContract';\nimport { UseProvider} from '../hooks/useWeb3'\n\n\nimport homeicon from \"../images/home.svg\"\nimport coinsicon from \"../images/coins.svg\"\nimport exchangeicon from \"../images/exchange.svg\"\nimport kycicon from \"../images/kyc.svg\"\nimport launchpadicon from \"../images/launchpad.svg\"\nimport lockedicon from \"../images/locked.svg\"\nimport privateicon from \"../images/private.svg\"\nimport docsicon from \"../images/docs.svg\"\nimport twittericon from \"../images/twitter.svg\"\nimport telegramicon from \"../images/telegram.svg\"\n\nimport fbicon from \"../images/fb.svg\"\n\n\n\n\n\nimport { NavLink } from \"react-router-dom\";\nimport { getsettinghook } from '../hooks/usebackend';\n\nclass Sidebar extends Component \n{\n    darkTheme()\n    {\n        document.body.classList.remove('light_theme'); \n        document.body.classList.add('dark_theme'); \n        document.getElementById(\"sun_icon\").classList.remove('active'); \n        document.getElementById(\"moon_icon\").classList.add('active'); \n        // document.getElementById(\"sun_icon_mob\").classList.remove('active'); \n        // document.getElementById(\"moon_icon_mob\").classList.add('active'); \n        localStorage.setItem(\"theme\",'dark_theme');\n\n       \n    }\n    lightTheme()\n    {\n        document.body.classList.remove('dark_theme'); \n        document.body.classList.add('light_theme'); \n        document.getElementById(\"moon_icon\").classList.remove('active'); \n        document.getElementById(\"sun_icon\").classList.add('active');\n        // document.getElementById(\"moon_icon_mob\").classList.remove('active'); \n        // document.getElementById(\"sun_icon_mob\").classList.add('active');\n        localStorage.setItem(\"theme\",'light_theme');\n\n        \n    }\n    \n   \n    // darkThemeMobile()\n    // {\n    //     document.body.classList.remove('light_theme'); \n    //     document.body.classList.add('dark_theme'); \n       \n    //     document.getElementById(\"sun_icon_mob\").classList.remove('active'); \n    //     document.getElementById(\"moon_icon_mob\").classList.add('active'); \n    //     localStorage.setItem(\"theme\",'dark_theme');\n\n       \n    // }\n    // lightThemeMobile()\n    // {\n    //     document.body.classList.remove('dark_theme'); \n    //     document.body.classList.add('light_theme'); \n      \n    //     document.getElementById(\"moon_icon_mob\").classList.remove('active'); \n    //     document.getElementById(\"sun_icon_mob\").classList.add('active');\n    //     localStorage.setItem(\"theme\",'light_theme');\n\n        \n    // }\n\n  \n   \n\n\n    // showMobile()\n    // {\n      \n    //     document.getElementById(\"mobile_nav_item\").classList.toggle(\"left_stye\");\n    //     document.getElementById(\"mobileLayer\").classList.toggle('active');\n    //     document.getElementById(\"burger\").classList.toggle('clicked');  \n    //     document.getElementById(\"burger\").classList.toggle(\"burger_stye\")   \n        \n    // }\n\n    \n\n    \n   \n   \n    \n   constructor(props)\n   {\n       super(props);\n       this.state = {location:false,\n        walletModal: false,\n        accountInfo: \"\",\n        walletConnect: \"\",\n        proxyOwner: \"\",\n        currentChain: 0,\n        settingsModal : false,\n        sidebarShrink:false,\n        setActive:0,\n        setting : [],\n        telegram : {},\n        facebook : {},\n        twitter : {}\n    }\n   }\n\n   setSidebarWidth()\n   {\n       this.setState({ sidebarShrink: !this.state.sidebarShrink });\n       if(this.state.sidebarShrink)\n       {\n        document.body.classList.remove('sidebar_shr');\n       }\n       else\n       {\n        document.body.classList.add('sidebar_shr');\n\n       }\n   }\n  \n  componentDidMount()\n   { \n    // if(!(localStorage.getItem(\"theme\") == \"dark_theme\"))\n    // {\n    //     document.body.classList.remove('dark_theme'); \n    //     document.body.classList.add('light_theme'); \n    //     document.getElementById(\"moon_icon\").classList.remove('active'); \n    //     document.getElementById(\"sun_icon\").classList.add('active');\n    //     document.getElementById(\"moon_icon_mob\").classList.remove('active'); \n    //     document.getElementById(\"sun_icon_mob\").classList.add('active');\n    //     localStorage.setItem(\"theme\",'light_theme');\n    // }\n    // else\n    // {\n    //     document.body.classList.remove('light_theme'); \n    //     document.body.classList.add('dark_theme'); \n    //     document.getElementById(\"sun_icon\").classList.remove('active'); \n    //     document.getElementById(\"moon_icon\").classList.add('active'); \n    //     document.getElementById(\"sun_icon_mob\").classList.remove('active'); \n    //     document.getElementById(\"moon_icon_mob\").classList.add('active');\n    //     localStorage.setItem(\"theme\",'dark_theme');  \n    // }\n    this.setState({ accountInfo: getAccount() });\n    this.setState( { currentChain: getChainId() });\n    this.getOwner();\n    this.getsetting();\n   }\n\n   async getsetting(){\n    let data = await getsettinghook();\n    console.log(\"data setting\" , data.data.data);\n    this.setState({setting : data?.data?.data})\n    data.data.data.map((val , i)=>{\n        if(val.settingname == \"Facebook\" || val.settingname == \"facebook\" || val.settingname == \"FaceBook\" ){\n            this.setState({facebook : val});\n        }\n        if(val.settingname == \"Twitter\" || val.settingname == \"twitter\"){\n            this.setState({twitter : val});\n        }\n        if(val.settingname == \"Telegram\" || val.settingname == \"telegram\"){\n            this.setState({telegram : val});\n        }\n        \n    })\n   }\n\n   onDismiss(){\n       this.setState({ walletModal: false });\n   }\n\n   getOwner = async() =>{\n       const owner = await getProxyOwner();\n       this.setState({ proxyOwner: owner });\n       \n   }\n\n    logOut = async () =>{\n        this.setState({accountInfo : \"\"})\n        localStorage.removeItem(\"accountInfo\")\n        if(localStorage.getItem(\"walletconnect\")!=null)\n     {\n        const provider = await UseProvider();\n        await provider.disconnect()\n     }\n      //  this.setState({accountModal: false})\n        window.location.reload()\n        console.log(\"logout\")\n    }\n  \n\n    render() {\n    const {location} = this.props;\n    const {walletModal,accountInfo, settingsModal,sidebarShrink,setActive } = this.state\n\n\n\n\t\treturn (\n\n\n           <div id=\"sidebar\" className={sidebarShrink?\"side_shrink\":\"\"}>\n             <button className=\"get-started-btn rounded_btn_wal shrink_side_btn\" onClick={() => this.setSidebarWidth()}>\n             <i class=\"fa fa-chevron-right\" aria-hidden=\"true\"></i>    \n            </button>\n            <ul className='sidebar_ul'>\n            <NavLink to=\"/home\" className=\"parent_1_grad\">\n                <li className='lis_paren_side li_bot_less'>\n               \n                <img src={homeicon} className=\"icon_sidebar\" />\n                <span>\n                    Home\n                </span>\n               \n                </li>\n                </NavLink>\n                <li className='px-0 py-0 li_bot_less'>\n                <Accordion>\n                <Card>\n                <Card.Header className='lis_paren_side_accordion px-0 py-2'>\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\" className='w-100 pl-0'>\n                <div className='d-flex align-items-center justify-content-between pl-0'>\n                <div className='icon_text_div pl-2' id=\"launchpad_parent\">\n                <img src={launchpadicon} className=\"icon_sidebar\" />\n                <span>\n                Launchpad\n                </span>\n                </div>\n                <button className='btn_white_outline_round'>\n                <i class=\"fa fa fa-angle-down\" aria-hidden=\"true\"></i>\n                </button>\n                </div>\n\n                </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                <Card.Body className='py-0 inner_card_body_acc'>\n                <ul className='sidebar_inner_ul pl-3'>\n                <NavLink to=\"/create\" onClick={()=>{this.setState({ setActive: 1 })}}>\n                <li className='li_bot_less'>                \n                Create Launchpad              \n                </li>\n                </NavLink>\n                <NavLink to=\"/createfairlaunch\">\n                <li className='li_bot_less'>\n\n                Create Fair Launch\n\n                </li>\n                </NavLink>\n                <NavLink to=\"/launchpadlist\">\n                <li className='li_bot_less'>\n\n                Launchpad List\n\n                </li>\n                </NavLink>\n                <NavLink to=\"/createtoken\">\n                <li className='li_bot_less'>\n\n                Token Creation\n\n                </li>\n                </NavLink>\n                </ul>\n                </Card.Body>\n                </Accordion.Collapse>\n                </Card>\n                <Card>\n                <Card.Header className='lis_paren_side_accordion px-0 py-2'>\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\" className='w-100 pl-0'>\n                <div className='d-flex align-items-center justify-content-between pl-0'>\n                <div className='icon_text_div pl-2' id=\"privatesale_parent\">\n                <img src={privateicon} className=\"icon_sidebar\" />\n                <span>\n                Private Sale\n                </span>\n                </div>\n                <button className='btn_white_outline_round'>\n                <i class=\"fa fa fa-angle-down\" aria-hidden=\"true\"></i>\n                </button>\n                </div>\n\n                </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"1\">\n                <Card.Body className='py-0 inner_card_body_acc'>\n                <ul className='sidebar_inner_ul pl-3'>\n                <NavLink to=\"/createprivatesale\">\n                <li className='li_bot_less'>                \n                Create Private Sale              \n                </li>\n                </NavLink>\n                <NavLink to=\"/privatesalelist\">\n                <li className='li_bot_less'>\n\n                Private Sale List\n\n                </li>\n                </NavLink>               \n               \n                </ul>\n                </Card.Body>\n                </Accordion.Collapse>\n                </Card>\n                <Card>\n                <Card.Header className='lis_paren_side_accordion px-0 py-2'>\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\" className='w-100 pl-0'>\n                <div className='d-flex align-items-center justify-content-between pl-0'>\n                <div className='icon_text_div pl-2' id=\"lock_parent\">\n                <img src={lockedicon} className=\"icon_sidebar\" />\n                <span>\n                In Lock\n                </span>\n                </div>\n                <button className='btn_white_outline_round'>\n                <i class=\"fa fa fa-angle-down\" aria-hidden=\"true\"></i>\n                </button>\n                </div>\n\n                </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"2\">\n                <Card.Body className='py-0 inner_card_body_acc'>\n                <ul className='sidebar_inner_ul pl-3'>\n                <NavLink to=\"/createlock\">\n                <li className='li_bot_less'>                \n                Create Lock     \n                </li>\n                </NavLink>\n                <NavLink to=\"/tokenlock\">\n                <li className='li_bot_less'>                \n                Token Lock     \n                </li>\n                </NavLink>\n                {/* <NavLink to=\"/liquiditylock\">\n                <li className='li_bot_less'>\n\n                Liquidity Lock\n\n                </li>\n                </NavLink>                */}\n               \n                </ul>\n                </Card.Body>\n                </Accordion.Collapse>\n                </Card>\n\n</Accordion>\n                </li>\n                <NavLink to=\"/exchange\" className=\"parent_1_grad\">\n                <li className='lis_paren_side'>\n               \n                <img src={exchangeicon} className=\"icon_sidebar\" />\n                <span>\n                    Exchange\n                </span>\n               \n                </li>\n                </NavLink>\n                <NavLink to=\"/kyc\" className=\"parent_1_grad\">\n                <li className='lis_paren_side'>\n               \n                <img src={kycicon} className=\"icon_sidebar\" />\n                <span>\n                    KYC & Audit\n                </span>\n               \n                </li>\n                </NavLink>\n                <NavLink to=\"/crypto\" className=\"parent_1_grad\">\n                <li className='lis_paren_side'>\n               \n                <img src={coinsicon} className=\"icon_sidebar\" />\n                <span>\n                    Crypto $225.91\n                </span>\n               \n                </li>\n                </NavLink>\n\n                <a href=\"#\" className=\"parent_1_grad\">\n                <li className='lis_paren_side'>\n               \n                <img src={docsicon} className=\"icon_sidebar\" />\n                <span>\n                    Docs\n                </span>\n               \n                </li>\n                </a>\n\n                <a href={this.state.telegram.settingvalue} target=\"_blank\" className=\"parent_1_grad\">\n                <li className='lis_paren_side'>\n               \n                <img src={telegramicon} className=\"icon_sidebar\" />\n                <span>\n                    Telegram\n                </span>\n               \n                </li>\n                </a>\n\n                <a href={this.state.twitter.settingvalue} target=\"_blank\" className=\"parent_1_grad\">\n                <li className='lis_paren_side'>\n               \n                <img src={twittericon} className=\"icon_sidebar\" />\n                <span>\n                    Twitter\n                </span>\n               \n                </li>\n                </a>\n\n                <a href={this.state.facebook.settingvalue} target=\"_blank\" className=\"parent_1_grad\">\n                <li className='lis_paren_side'>\n               \n                <img src={fbicon} className=\"icon_sidebar\" />\n                <span>\n                    Facebook\n                </span>\n               \n                </li>\n                </a>\n            </ul>\n            <div className='footer_theme_div'>\n\n            <i className=\"fa fa-sun-o theme_icon\" aria-hidden=\"true\" id=\"sun_icon\" onClick={()=>this.lightTheme()}></i>\n            <span className='px-1 text_splash'>/</span>\n            <i class=\"fa fa-moon-o theme_icon active\" aria-hidden=\"true\" id=\"moon_icon\" onClick={()=>this.darkTheme()}></i>\n            <span className='pl-2 text_splash mode_taxt'>Mode</span>\n            </div>\n\n           </div>\n        );\n    }\n}\n\n\n\nexport default Sidebar","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Header.js",["1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport { Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport Walletmodal from \"./Walletmodal\";\nimport Settingsmodal from \"./Settingsmodal\";\n\n// import 'font-awesome/css/font-awesome.min.css';\n\nimport { metamaskWallet , walletConnet } from '../hooks/useWallet';\nimport { getAccount, getChainId, setChainId } from '../hooks/useAccount'\n\nimport bsc from \"../images/bsc.png\"\nimport bsctestnet from \"../images/bsctestnet.png\"\nimport { getProxyOwner } from '../hooks/useContract';\nimport { UseProvider} from '../hooks/useWeb3'\nimport { CHAINS } from '../config/env'\n\nimport doc from \"../images/doc.svg\"\nimport deposit from \"../images/deposit.svg\"\n\nimport referral from \"../images/referal.png\"\n\nimport { NavLink } from \"react-router-dom\";\nimport { getkychook } from '../hooks/usebackend';\n\n\n\n\nclass Header extends Component \n{\n    // darkTheme()\n    // {\n    //     document.body.classList.remove('light_theme'); \n    //     document.body.classList.add('dark_theme'); \n    //     document.getElementById(\"sun_icon\").classList.remove('active'); \n    //     document.getElementById(\"moon_icon\").classList.add('active'); \n    //     // document.getElementById(\"sun_icon_mob\").classList.remove('active'); \n    //     // document.getElementById(\"moon_icon_mob\").classList.add('active'); \n    //     localStorage.setItem(\"theme\",'dark_theme');\n\n       \n    // }\n    // lightTheme()\n    // {\n    //     document.body.classList.remove('dark_theme'); \n    //     document.body.classList.add('light_theme'); \n    //     document.getElementById(\"moon_icon\").classList.remove('active'); \n    //     document.getElementById(\"sun_icon\").classList.add('active');\n    //     // document.getElementById(\"moon_icon_mob\").classList.remove('active'); \n    //     // document.getElementById(\"sun_icon_mob\").classList.add('active');\n    //     localStorage.setItem(\"theme\",'light_theme');\n\n        \n    // }\n\n    // darkThemeMobile()\n    // {\n    //     document.body.classList.remove('light_theme'); \n    //     document.body.classList.add('dark_theme'); \n       \n    //     document.getElementById(\"sun_icon_mob\").classList.remove('active'); \n    //     document.getElementById(\"moon_icon_mob\").classList.add('active'); \n    //     localStorage.setItem(\"theme\",'dark_theme');\n\n       \n    // }\n    // lightThemeMobile()\n    // {\n    //     document.body.classList.remove('dark_theme'); \n    //     document.body.classList.add('light_theme'); \n      \n    //     document.getElementById(\"moon_icon_mob\").classList.remove('active'); \n    //     document.getElementById(\"sun_icon_mob\").classList.add('active');\n    //     localStorage.setItem(\"theme\",'light_theme');\n\n        \n    // }\n\n  \n   \n\n\n    showMobile()\n    {\n      \n        //  document.getElementById(\"mobile_nav_item\").classList.toggle('active');\n        document.getElementById(\"mobile_nav_item\").classList.toggle(\"left_stye\");\n        document.getElementById(\"mobileLayer\").classList.toggle('active');\n        document.getElementById(\"burger\").classList.toggle('clicked');  \n        document.getElementById(\"burger\").classList.toggle(\"burger_stye\")   \n        \n    }\n\n   \n\n    \n\n    \n   \n   \n    \n   constructor(props)\n   {\n       super(props);\n       this.state = {location:false,\n        walletModal: false,\n        accountInfo: \"\",\n        walletConnect: \"\",\n        proxyOwner: \"\",\n        currentChain: 0,\n        settingsModal : false,\n    }\n   }\n\n\n\n//    componentDidMount() {\n    // window.addEventListener(\"beforeunload\", function (event) {\n    //     this.localStorage.removeItem(\"accountInfo\");\n    //     this.sessionStorage.removeItem(\"accountInfo\")\n    //  })\n//  }\n\n  \n//    handlegetkyc = async()=>{\n//     // if(isEmpty(this.state.kyc)){\n//       let walletaddress = localStorage.getItem(\"accountInfo\");\n//       if(walletaddress){\n//         let result = await getkychook(walletaddress.toLowerCase());\n//         console.log(\"result\" , result?.data?.data);\n//         if(result?.data?.data?.record?.status == 'Approved'){\n//           sessionStorage.setItem(\"kyc\" , true)\n//       }\n//      else{\n//         sessionStorage.setItem(\"kyc\" , false)\n//      }\n      \n//     //   }\n//     }\n//     else{\n       \n//         this.setState({walletModal : true});\n//       }\n//   }\n  \n  componentDidMount()\n   {\n    localStorage.setItem(\"CHAIN\" , 2)\n    window.addEventListener('scroll', function() {\n        if(window.pageYOffset >100)\n        {\n            document.getElementById(\"header\").classList.add('header-scrolled');\n            \n        }\n        else{\n            document.getElementById(\"header\").classList.remove('header-scrolled');\n\n        }\n    });\n\n\n   \n    // if(!(localStorage.getItem(\"theme\") == \"dark_theme\"))\n    // {\n    //     document.body.classList.remove('dark_theme'); \n    //     document.body.classList.add('light_theme'); \n    //     document.getElementById(\"moon_icon\").classList.remove('active'); \n    //     document.getElementById(\"sun_icon\").classList.add('active');\n    //     document.getElementById(\"moon_icon_mob\").classList.remove('active'); \n    //     document.getElementById(\"sun_icon_mob\").classList.add('active');\n    //     localStorage.setItem(\"theme\",'light_theme');\n    // }\n    // else\n    // {\n    //     document.body.classList.remove('light_theme'); \n    //     document.body.classList.add('dark_theme'); \n    //     document.getElementById(\"sun_icon\").classList.remove('active'); \n    //     document.getElementById(\"moon_icon\").classList.add('active'); \n    //     document.getElementById(\"sun_icon_mob\").classList.remove('active'); \n    //     document.getElementById(\"moon_icon_mob\").classList.add('active');\n    //     localStorage.setItem(\"theme\",'dark_theme');  \n    // }\n    this.setState({ accountInfo: getAccount() });\n    this.setState( { currentChain: getChainId() });\n    this.getOwner();\n\n    // this.handlegetkyc();\n   }\n\n   onDismiss(){\n       this.setState({ walletModal: false });\n   }\n\n   getOwner = async() =>{\n       const owner = await getProxyOwner();\n       this.setState({ proxyOwner: owner });\n       console.log(\"owner : \",owner)\n   }\n\n    logOut = async () =>{\n        this.setState({accountInfo : \"\"})\n        localStorage.removeItem(\"accountInfo\")\n        if(localStorage.getItem(\"walletconnect\")!=null)\n     {\n        const provider = await UseProvider();\n        await provider.disconnect()\n     }\n      //  this.setState({accountModal: false})\n        window.location.reload()\n        console.log(\"logout\")\n    }\n  \n\n    render() {\n    const {location} = this.props;\n    const {walletModal,accountInfo, settingsModal } = this.state\n\n\n\n\t\treturn (\n\n\n           <div>\n\n                          \n<div id=\"mobileLayer\">\n                   <div id=\"header\" className=\"fixed-top-navbar d-none d-md-block\">\n               <div className=\"container-fluid\" id=\"mobileshow\">\n               <header className={`${location}`}>\n                   <div className='d-flex headerleft'>\n                        <NavLink to=\"/\" className='mr-lg-5'><span className='logo_img_sm'/></NavLink>                  \n                      \n                   </div>\n      \n\n<div className='d-block d-lg-block web_menu'>\n<div className=\"d-flex align-items-center justify-content-between py-0 header_flex\">\n\n  \n      \n       <div className='d-flex align-items-center nav_parnt'>\n<div className='nav_parnt_1'>\n\n\n                        {/* <button className=\"get-started-btn mr-2 text-uppercase\" onClick={() => this.setState({ settingsModal: true })}>\n                        { this.state.currentChain && CHAINS[this.state.currentChain].NAME }\n                        </button> */}\n\n\n    \n            \n\n\n       \n</div>\n<div className='nav_parnt_2'>\n    <div className=\"nav-menu\">\n          <ul className=\"pl-0 mb-0\">\n         \n            {(accountInfo == \"\" || localStorage.getItem(\"accountInfo\")== null)?\n            <button className=\"get-started-btn rounded_btn_wal\" onClick={() => this.setState({ walletModal: true })}>\n                        <svg viewBox=\"0 0 24 24\" height=\"24\" width=\"24\" color=\"textSubtle\" xmlns=\"http://www.w3.org/2000/svg\" class=\"sc-bdnxRM xpLe\"><path d=\"M19.43 12.98C19.47 12.66 19.5 12.34 19.5 12C19.5 11.66 19.47 11.34 19.43 11.02L21.54 9.37C21.73 9.22 21.78 8.95 21.66 8.73L19.66 5.27C19.54 5.05 19.27 4.97 19.05 5.05L16.56 6.05C16.04 5.65 15.48 5.32 14.87 5.07L14.49 2.42C14.46 2.18 14.25 2 14 2H9.99996C9.74996 2 9.53996 2.18 9.50996 2.42L9.12996 5.07C8.51996 5.32 7.95996 5.66 7.43996 6.05L4.94996 5.05C4.71996 4.96 4.45996 5.05 4.33996 5.27L2.33996 8.73C2.20996 8.95 2.26996 9.22 2.45996 9.37L4.56996 11.02C4.52996 11.34 4.49996 11.67 4.49996 12C4.49996 12.33 4.52996 12.66 4.56996 12.98L2.45996 14.63C2.26996 14.78 2.21996 15.05 2.33996 15.27L4.33996 18.73C4.45996 18.95 4.72996 19.03 4.94996 18.95L7.43996 17.95C7.95996 18.35 8.51996 18.68 9.12996 18.93L9.50996 21.58C9.53996 21.82 9.74996 22 9.99996 22H14C14.25 22 14.46 21.82 14.49 21.58L14.87 18.93C15.48 18.68 16.04 18.34 16.56 17.95L19.05 18.95C19.28 19.04 19.54 18.95 19.66 18.73L21.66 15.27C21.78 15.05 21.73 14.78 21.54 14.63L19.43 12.98ZM12 15.5C10.07 15.5 8.49996 13.93 8.49996 12C8.49996 10.07 10.07 8.5 12 8.5C13.93 8.5 15.5 10.07 15.5 12C15.5 13.93 13.93 15.5 12 15.5Z\"></path></svg>\n            </button>:\n            <NavLink to=\"/wallet\" className=\"get-started-btn link_wallet_new\">\n            {`${accountInfo.substring(0, 5)}...${accountInfo.substring(38,42)}`}</NavLink>}\n          \n        </ul>\n    </div>\n   \n    </div>\n     \n\n</div>\n   \n    \n\n</div>\n</div>\n\n{/* {walletModal && <Walletmodal connect={\"string\"} onDismiss={()=>this.onDismiss()} /> } */}\n\n\n</header>\n</div>\n</div>\n\n<div id=\"header1\" className=\"fixed-top-navbar d-block d-md-none\">\n               <div className=\"container-fluid  h-100\" id=\"mobileshow1\">\n               <header className=\"h-100\">\n               <Link to=\"/\" className='mr-3 logo_mob_mar'><span className='logo_img_sm'/></Link>\n\n                 \n      \n\n               <div className='d-flex align-items-center'>\n{/* <div className='d-flex'>\n\n\n                        <button className=\"get-started-btn rounded_btn_wal px-0 mr-3\" onClick={() => this.setState({ settingsModal: true })}>\n                        <svg viewBox=\"0 0 24 24\" height=\"24\" width=\"24\" color=\"textSubtle\" xmlns=\"http://www.w3.org/2000/svg\" class=\"sc-bdnxRM xpLe\"><path d=\"M19.43 12.98C19.47 12.66 19.5 12.34 19.5 12C19.5 11.66 19.47 11.34 19.43 11.02L21.54 9.37C21.73 9.22 21.78 8.95 21.66 8.73L19.66 5.27C19.54 5.05 19.27 4.97 19.05 5.05L16.56 6.05C16.04 5.65 15.48 5.32 14.87 5.07L14.49 2.42C14.46 2.18 14.25 2 14 2H9.99996C9.74996 2 9.53996 2.18 9.50996 2.42L9.12996 5.07C8.51996 5.32 7.95996 5.66 7.43996 6.05L4.94996 5.05C4.71996 4.96 4.45996 5.05 4.33996 5.27L2.33996 8.73C2.20996 8.95 2.26996 9.22 2.45996 9.37L4.56996 11.02C4.52996 11.34 4.49996 11.67 4.49996 12C4.49996 12.33 4.52996 12.66 4.56996 12.98L2.45996 14.63C2.26996 14.78 2.21996 15.05 2.33996 15.27L4.33996 18.73C4.45996 18.95 4.72996 19.03 4.94996 18.95L7.43996 17.95C7.95996 18.35 8.51996 18.68 9.12996 18.93L9.50996 21.58C9.53996 21.82 9.74996 22 9.99996 22H14C14.25 22 14.46 21.82 14.49 21.58L14.87 18.93C15.48 18.68 16.04 18.34 16.56 17.95L19.05 18.95C19.28 19.04 19.54 18.95 19.66 18.73L21.66 15.27C21.78 15.05 21.73 14.78 21.54 14.63L19.43 12.98ZM12 15.5C10.07 15.5 8.49996 13.93 8.49996 12C8.49996 10.07 10.07 8.5 12 8.5C13.93 8.5 15.5 10.07 15.5 12C15.5 13.93 13.93 15.5 12 15.5Z\"></path></svg>\n                        </button>\n\n\n       \n</div> */}\n<div className=''>\n    <div className=\"nav-menu\">\n          <ul className=\"pl-0 mb-0\">\n         \n            {(accountInfo == \"\" || localStorage.getItem(\"accountInfo\")== null)?\n            <button className=\"get-started-btn text-uppercase\" onClick={() => this.setState({ walletModal: true })}>\n            BSC Mainnet</button>:\n            <NavLink to=\"/wallet\" className=\"get-started-btn link_wallet_new\">\n            {`${accountInfo.substring(0, 5)}...${accountInfo.substring(38,42)}`}</NavLink>}\n          \n        </ul>\n    </div>\n   \n    </div>\n     \n\n</div>\n\n{walletModal && <Walletmodal connect={\"string\"} onDismiss={()=>this.onDismiss()} /> }\n\n\n</header>\n</div>\n</div>\n\n</div>\n{settingsModal && <Settingsmodal onDismiss={()=> this.setState({ settingsModal: false })} connect={\"string\"} /> }\n\n\n           </div>\n        );\n    }\n}\n\n\n\nexport default Header","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Walletmodal.js",["1064","1065","1066","1067","1068"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport { Modal } from 'react-bootstrap';\n\nimport wall1 from \"../images/metamask_wallet.png\";\nimport wall2 from \"../images/connect_wallet.png\";\nimport wall3 from \"../images/wall3.png\";\n\nimport { MetamaskWallet,WalletConnect } from \"../hooks/useWallet\"\nimport Web3 from 'web3';\n\n\nclass Walletmodal extends Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {          \n            walletModal: true,\n           \n        };\n    }\n\n\n        sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\n   \n    MetaMask = async ()=>{\n        await MetamaskWallet()\n        await this.sleep(1000)\n       this.setState({accountInfo: localStorage.getItem(\"accountInfo\")});\n       console.log(\"Account : \", localStorage.getItem(\"accountInfo\"));\n        if(localStorage.getItem(\"accountInfo\")){\n            this.setState({ walletModal : false})\n            window.location.reload()\n        }\n        \n    }\n\n    enableWallet = async () =>{\n       const provider = await WalletConnect()\n        this.setState({walletConnect: provider})\n        this.setState({accountInfo: localStorage.getItem(\"accountInfo\")});\n        this.setState({ walletModal : false})\n        if(localStorage.getItem(\"accountInfo\")){\n            this.setState({ walletModal : false})\n            window.location.reload()\n        }\n     \n    }\n\n  \n\n\n\n    render() {\n        \n  \n        const {walletModal} = this.state\n\n        \n      return (\n\n        \n\n        <Modal className=\"wallet-modal\" show={walletModal} centered size=\"md\">\n        <Modal.Header className='pt-3 header_odal_head'>\n        <h3 className=\"sec-head \">Connect to a wallet</h3>\n            <button type=\"button\" class=\"close\" onClick={() => this.props.onDismiss()}><span aria-hidden=\"true\">×</span><span class=\"sr-only\">Close</span></button>\n\n        </Modal.Header>\n        <Modal.Body className=\"select-wallet modal_body pt-0 pb-0 px-0\">\n\n        <div className=\"wallet-lists px-2 wallet-lists-new-m\">\n                                <ul className=\"mb-0\">\n                                    <li onClick={this.MetaMask} className=\"liquid_raised mx-3 mx-sm-4 w-100 text-center\">\n                                        <div className=\"img\">\n                                            <img src={wall1} alt=\"img\" />\n                                        </div>\n                                        <div className=\"wal-option\">\n                                            <h3 className=\"side-head-li mb-0 text-center\"> Metamask</h3>\n\n                                        </div>\n                                    </li>\n                                    <li onClick={this.enableWallet} className=\"liquid_raised mx-3 mx-sm-4 w-100 text-center\">\n                                        <div className=\"img\">\n                                            <img src={wall2} alt=\"img\" />\n                                        </div>\n                                        <div className=\"wal-option\">\n                                            <h3 className=\"side-head-li mb-0 text-center\">Wallet Connect</h3>\n                                        </div>\n                                    </li>\n                                 \n                                </ul>\n                                <div className='mod_pad_space'>\n\n                                <p class=\"bottom_text text-center\">Haven’t got a crypto wallet yet?</p>\n                                <div className='text-center'>\n\n                                <button className='get-started-btn'>\n                                    Learn How to Connect</button>\n                                </div>\n\n                                    </div>\n                            </div>\n        </Modal.Body>\n    </Modal>\n\n\n\n      )\n    }\n\n}\n\n\nexport default Walletmodal","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/trendingslider.js",["1069","1070","1071"],"import React, { Component } from \"react\";\n\nimport '../css/styles.css';\nimport { getUnsold, getUnsoldtokentrending } from \"../hooks/useAdmin\";\nimport { gettrendingdisplayhook } from \"../hooks/usebackend\";\nimport { getSaleInfoCard } from \"../hooks/useContract\";\nimport { getTotalSalesInfo } from \"../hooks/useProjects\";\n\nclass Trendingslider extends Component{\n\n\n    constructor(props) {\n        super(props);\n        this.state = {          \n            trending : []\n        };\n    }\n    componentDidMount(){\n       this.gettrending()\n    }\n\n    async gettrending(){\n      const totalsale = await getTotalSalesInfo();\n      console.log(\"totalsale\",totalsale);\n      var totalproxy = [];\n      totalsale.map(async(val , i)=>{\n        let data = await getSaleInfoCard(val._sale);\n        // if(data?.LaunchpadType)\n        // let deposittoken = data?.presaleRate * data?.hardCap/10**18;\n        // (hardCap / liquidityPercent) * 100;\n        // let unsoldtoken =  await getUnsoldtokentrending(data?.saleAddress);\n        // console.log(\"unsoldtoken\" , unsoldtoken);\n        // console.log(\"depositt oken\" , deposittoken);\n        // let trend = deposittoken - (unsoldtoken/10**18);\n        // var obj2 = {...data, trend : trend}\n        // Object.assign(data , {trend : trend})\n        // data.trend = trend;\n        totalproxy.push(data);\n      })\n      console.log(\"totalproxy\" , totalproxy);\n      // totalproxy.sort(\n      //   (p1, p2) => (p1.trend < p2.trend) ? 1 : (p1.trend > p2.trend) ? -1 : 0);\n    //  var sortedtotalproxy =  totalproxy.sort((a, b) => parseFloat(a.participants) - parseFloat(b.participants))\n    var sortedtotalproxy = await totalproxy.sort((a, b) => (parseFloat(a.participants) > parseFloat(b.participants)) ? 1 : -1);\n        console.log(\"totalproxy\" , sortedtotalproxy);\n      this.setState({trending : sortedtotalproxy})\n    }\n   \n    \n    // async gettrending(){\n    //     let data = await gettrendingdisplayhook();\n    //     console.log(\"dataa trending\" , data?.data?.data);\n    //     if(data?.data?.data?.length > 0)\n    //     this.setState({trending : data?.data?.data}) \n    // }\n\n\n\n    render(){\n        return(\n            <div className=\"text-white topBar d-flex justify-content-start\">\n                <small>Trending</small>\n                {this?.state?.trending && this?.state?.trending?.map((data , i) =>i <10 && data.isWhitelisted  ?\n                <>\n                    \n                        <small>\n                            \n                            <a href={`/privatesaledetail/${data.saleAddress}`}>\n                        #{i+1}&nbsp;<span>{data.name} </span>\n                    </a>\n\n                        </small>\n                        \n                </> : i < 10 &&<>\n                    \n                    <small>\n                    <a href={`/launchpaddetail/${data?.saleAddress}`}>\n                            #{i+1}&nbsp;<span>{data.name} </span>\n                </a>\n\n                    </small>\n                    \n            </>\n\n                \n                )}\n                  \n        \n        \n      {/* <small>\n        #1&nbsp;<span>Husy</span>\n      </small>\n      <small>\n        #2&nbsp;<span>ORL</span>\n      </small>\n      <small>\n        #3&nbsp;<span>UWC</span>\n      </small>\n      <small>\n        #4&nbsp;<span>777</span>\n      </small>\n      <small>\n        #5&nbsp;<span>IDXS</span>\n      </small>\n      <small>\n        #6&nbsp;<span>COUGNU</span>\n      </small>\n      <small>\n        #7&nbsp;<span>CRICLE</span>\n      </small>\n      <small>\n        #8&nbsp;<span>KASA</span>\n      </small>\n      <small>\n        #9&nbsp;<span>FIFAPP</span>\n      </small>\n      <small>\n        #10&nbsp;<span>SOG</span>\n      </small>\n      <small>\n        #11&nbsp;<span>COOSHA</span>\n      </small>\n      <small>\n        #12&nbsp;<span>Honey</span>\n      </small> */}\n      \n      \n    </div>\n        )\n    }\n}\n\nexport default Trendingslider;","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/Createtab.js",["1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169"],"import React, { Component } from 'react';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { InputGroup, FormControl,Form } from 'react-bootstrap';\r\nimport isEmpty from 'is-empty';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport { ONEDAYINSECONDS, CHAINS, userFeeWithtoken, userFee } from '../../config/env'\r\nimport { UseTokenInfo,IsValidAddress,createPresale,toFixedNumber,getSaleAddress,depositTokens, isFloat, getSalecreationFee, Checkaddress, Approvetoken, GetAdminfee } from '../../hooks/useContract'\r\nimport { getAccount } from '../../hooks/useAccount'\r\nimport {CURRENT_CHAIN_ID,CURRENT_RPC_URL} from '../../hooks/useWeb3'\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport {style,iconTheme,position} from '../../hooks/useToast'\r\n\r\nimport TokenModal from \"./TokenModal\"\r\nimport { urlvalidation } from '../../hooks/kycvalidation';\r\nclass Createtab extends Component\r\n{\r\n\r\n       \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {   \r\n          logo: '',       \r\n          name: '',\r\n          symbol: '',\r\n          address: '',\r\n          decimal: '',\r\n          presaleRate: 0,\r\n          softCap: 0,\r\n          hardCap: 0,\r\n          min: 0,\r\n          max : 0,\r\n          isVested: false,\r\n          isPancake: false,\r\n          pancakeRate:0,\r\n          liquidityPercent:0,\r\n          unlockOn: 0,\r\n          startDate: '',\r\n          endDate: '',\r\n          vestPercent: 0,\r\n          vestInterval: 0,\r\n          isWithoutToken: false,\r\n          description: '',\r\n          website: '',\r\n          twitter: '',\r\n          telegram: '',\r\n          githup: '',\r\n          instagram:'',\r\n          discord:'',\r\n          reddit:'',\r\n          youtube:'',\r\n          deposit: 0,\r\n          decimals: 0,\r\n          createdSale: '',\r\n          isDeposited: false,\r\n          isWhitelisted: false,\r\n          currentStep:1,\r\n          tokenModal: false,\r\n          step1 : false,\r\n          step2 : false,\r\n          step3 : false,\r\n          step4 : false,\r\n          currency : \"BNB\",\r\n          isToken : false,\r\n          userFee : 0,\r\n          WithTokenaddress : \"\",\r\n          LaunchpadType: true,\r\n          tokeninfo : {},\r\n          errors : {},\r\n          Fee:0,\r\n          button1: true,\r\n          button2 : true,\r\n            button3 : true,\r\n            fee : 5,\r\n            // isToken : false,\r\n            userFee : 0,\r\n            approvebutton : false,\r\n            poolfee : \"\"\r\n\r\n        };\r\n    }\r\n    // handlesetaddress = async(value) => {\r\n    //     this.setState({address : value})\r\n    //   }\r\n\r\n    componentDidMount(){\r\n        this.GetTokenAddress(\"BNB\")\r\n        this.getData()\r\n        this.getfee()\r\n    }\r\n\r\n    getfee = async()=>{\r\n        let fee = await GetAdminfee();\r\n        console.log(\"adminfee\" , fee);\r\n        this.setState({poolfee : fee.deploymentfee /10**18})\r\n    }\r\n\r\n    handledisable = () =>{\r\n        // console.log(\"vest\" , isvalid);\r\n        this.setState({button2 : false})\r\n        var isvalid = true;\r\n        var i = 1;\r\n        // let pancake = this.state.isPancake ? \r\n        if(isEmpty(this.state.error) && this.state.presaleRate && this.state.softCap\r\n        && this.state.hardCap && this.state.min && this.state.max  && this.state.startDate &&\r\n        this.state.endDate){\r\n            isvalid = false\r\n            console.log(\"vest1\" , isvalid);\r\n                if(this.state.isPancake){\r\n                    isvalid = true;\r\n                    console.log(\"vest2\" , isvalid);\r\n                    if(this.state.unlockOn &&\r\n                        this.state.liquidityPercent && this.state.pancakeRate){\r\n                            console.log(\"vest3\" , isvalid);\r\n                            isvalid = false;\r\n                            console.log(\"vest3\" , isvalid);\r\n                        }\r\n                }\r\n                // else if(!this.state.ispancake && this.state.isvested){\r\n                //     isvalid = true;\r\n                // }\r\n                // else{\r\n                //     isvalid = false;\r\n                // }\r\n                if(this.state.isVested){\r\n                    isvalid = true;\r\n                    console.log(\"vest4\" , isvalid);\r\n                    if(this.state.vestInterval && this.state.vestPercent){\r\n                        isvalid = false\r\n                        console.log(\"vest5\" , isvalid);\r\n                    }\r\n                }\r\n                // else if(this.state.ispancake && !this.state.isvested){\r\n                //     isvalid = true;\r\n                // }\r\n                // else{\r\n                //     isvalid = false;\r\n                // }\r\n                // else{\r\n                //     isvalid = false;\r\n                // }\r\n                // if(!this.state.isvested || !this.state.isPancake){\r\n                //     isvalid = false;\r\n                // }\r\n        }\r\n            this.setState({button2 : isvalid}) ;\r\n            console.log(\"isvalid\" , isvalid);\r\n            return isvalid;\r\n    }\r\n\r\n    handledisableurlbutton = () => {\r\n        var isvalid = true;\r\n        if(this.state.logo && this.state.website && this.state.facebook && this.state.twitter && \r\n            this.state.github && this.state.telegram && this.state.instagram && this.state.discord\r\n            && this.state.reddit && this.state.youtubevideo && this.state.description){\r\n                isvalid = false;\r\n            }\r\n            this.setState({button3 : isvalid})\r\n    }\r\n\r\n    async settokenaddress(value){\r\n        this.setState({ address: value });\r\n        // this.getTokenInfo(e.target.value);\r\n        const tokendata = await Checkaddress(value);\r\n      console.log(\"tokendata\" , tokendata);\r\n      if(tokendata.isValid){\r\n        this.setState({button1 : false})\r\n        this.setState({tokeninfo : tokendata.tokeninfo})\r\n        this.setState({errors : {}});\r\n        this.setState({approvebutton : tokendata.allowance})\r\n      }\r\n      else{\r\n        let formData = { ...this.state.errors, [\"tokenaddress\"]: \"Invalid token address !\" };\r\n        this.setState({errors : formData});\r\n        this.setState({tokeninfo : {}})\r\n        this.setState({button1 : true})\r\n      }\r\n}\r\n    \r\n    async getData(){\r\n        var fee = await getSalecreationFee();\r\n        this.setState({Fee : Number(fee)})\r\n\r\n    }\r\n\r\n    // Presale Creation\r\n    async CreateSale(){\r\n       console.log(\"call\");\r\n        let Addresses = [];\r\n        let Values = [];\r\n        let Details = [];\r\n        let isSetter = [];\r\n\r\n        const account= getAccount()\r\n       \r\n\r\n        const startTime = this.state.startDate;\r\n        const endTime = this.state.endDate;\r\n\r\n          // let startDiff = 0;\r\n        // let endDiff = 0;\r\n        // var now = new Date();\r\n          \r\n        // if(startTime > now.getTime())\r\n        //     startDiff = parseInt((new Date(startTime).getTime() - now.getTime())/86400/1000) ;\r\n        \r\n        // endDiff =  parseInt(((new Date(endTime).getTime() - now.getTime())/86400/1000)-startDiff) ;\r\n\r\n        const CHAIN_ID = CURRENT_CHAIN_ID();\r\n        const CURRENT_RPC = CURRENT_RPC_URL();\r\n        let ROUTER;\r\n        CHAINS.map((data)=>{\r\n        if((((data.CHAIN_ID==CHAIN_ID)&&(data.RPC_URL == CURRENT_RPC))&&data.ROUTER)!=false)\r\n            ROUTER = ((data.CHAIN_ID==CHAIN_ID)&&(data.RPC_URL == CURRENT_RPC))&&data.ROUTER;\r\n            \r\n        })\r\n        \r\n        const startDiff = parseInt(parseInt((new Date(startTime).getTime()))/1000);\r\n        const endDiff =  parseInt(parseInt((new Date(endTime).getTime()))/1000);\r\n       \r\n         // _token 0\r\n        //_router 1\r\n        //owner 2\r\n        //UsewithToken 3\r\n       Addresses.push(this.state.address); \r\n       Addresses.push(ROUTER);\r\n       Addresses.push(account);\r\n       Addresses.push(this.state.WithTokenaddress)\r\n    \r\n\r\n\r\n          //_min 0 \r\n        //_max 1\r\n        //_rate 2\r\n        // _soft  3\r\n        // _hard 4\r\n        //_pancakeRate  5\r\n        //_unlockon  6\r\n        // _percent 7\r\n        // _start 8\r\n        //_end 9\r\n        //_vestPercent 10\r\n        //_vestInterval 11\r\n        //_useFee 12\r\n        Values.push(toFixedNumber(this.state.min*10**18).toString());\r\n        Values.push(toFixedNumber(this.state.max*10**18).toString());\r\n        Values.push(this.state.presaleRate);\r\n        Values.push(toFixedNumber(this.state.softCap*10**18).toString());\r\n        Values.push(toFixedNumber(this.state.hardCap*10**18).toString());\r\n        Values.push(this.state.pancakeRate.toString());\r\n        Values.push(this.state.unlockOn.toString());\r\n        Values.push(this.state.liquidityPercent.toString());\r\n        Values.push(startDiff.toString());\r\n        Values.push(endDiff.toString());\r\n        Values.push((this.state.vestPercent*100).toString());\r\n        Values.push((this.state.vestInterval * ONEDAYINSECONDS).toString());\r\n        Values.push((this.state.userFee).toString())\r\n\r\n         // isAuto 0\r\n        //_isvested 1\r\n        // isWithoutToken 2\r\n        // isWhitelisted 3\r\n        // buyType isBNB or not 4\r\n        // isToken isToken or not 5\r\n        // launchpadtype isnormal or fair\r\n        isSetter.push(this.state.isPancake);\r\n        isSetter.push(this.state.isVested);\r\n        isSetter.push(this.state.isWithoutToken);\r\n        isSetter.push(this.state.isWhitelisted);\r\n        isSetter.push(this.state.currency === \"BNB\" ? true : false)\r\n        isSetter.push(this.state.isToken)\r\n        isSetter.push(this.state.LaunchpadType)\r\n         // description 0 \r\n        // website,twitter,telegram 1,2,3\r\n        //logo 4\r\n        //name 5\r\n        //symbol 6\r\n        // githup 7\r\n        // instagram 8\r\n        // discord 9\r\n        // reddit 10\r\n        // youtube 11\r\n        Details.push(this.state.description);\r\n        Details.push(this.state.website);\r\n        Details.push(this.state.twitter);\r\n        Details.push(this.state.telegram);\r\n        Details.push(this.state.logo);\r\n        Details.push(this.state.tokeninfo?.name);\r\n        Details.push(this.state.tokeninfo?.symbol);\r\n        Details.push(this.state.githup);\r\n        Details.push(this.state.instagram);\r\n        Details.push(this.state.discord);\r\n        Details.push(this.state.reddit);\r\n        Details.push(this.state.youtube);\r\n\r\n        const data = this.validate()\r\n        if(data)\r\n            return false;\r\n\r\n\r\n        console.log(\"DATA : \",Addresses,Values,isSetter,Details)\r\n        const sale = await createPresale(Addresses,Values,isSetter,Details,account)\r\n        this.setState({createdSale: sale});\r\n       \r\n    }\r\n\r\n    goToSale(){\r\n        window.location.href = `${window.location.origin}/launchpaddetail/${this.state.createdSale}`;\r\n    }\r\n\r\n\r\n    GetTokenAddress(value){\r\n       \r\n        let Withtokenaddress;\r\n        \r\n        if(value === \"BUSD\"){\r\n            Withtokenaddress = CHAINS[localStorage.getItem(\"CHAIN\")].BUSD\r\n        }else if(value === \"USDT\"){\r\n            Withtokenaddress = CHAINS[localStorage.getItem(\"CHAIN\")].USDT\r\n        }else if(value=== \"USDC\"){\r\n            Withtokenaddress = CHAINS[localStorage.getItem(\"CHAIN\")].USDC  \r\n        }else if(value === \"BNB\"){\r\n            Withtokenaddress = CHAINS[localStorage.getItem(\"CHAIN\")].BNB\r\n        }\r\n       \r\n       console.log(\"WithTokenaddress\",Withtokenaddress);\r\n            this.setState({ WithTokenaddress: Withtokenaddress});\r\n           \r\n    }\r\n    async getTokenInfo(tokenAddress){\r\n         const isValid = await IsValidAddress(tokenAddress);\r\n        \r\n        if(tokenAddress.length == 42 && !isValid){\r\n            toast.error(\"This is not a Valid token Address !\",\r\n    {\r\n              position:position.position,\r\n             style:style,\r\n             iconTheme: iconTheme,\r\n    })\r\n       \r\n}else{\r\n    \r\n    const token = await UseTokenInfo(this.state.address);\r\n    this.setState({ name: token?.name });\r\n    this.setState({ symbol: token?.symbol });\r\n    this.setState({ decimals: token?.decimals });\r\n    this.setState({step1 : true})\r\n} \r\n       \r\n    }\r\n\r\n    calculateDepositTokens(){\r\n        this.forceUpdate() \r\n        let topancakeTokens =0;\r\n        let pancakeTokens = 0;\r\n        const presalePrice = 1/this.state.presaleRate;\r\n        if(this.state.isPancake){\r\n            const pancakePrice = 1/this.state.pancakeRate;\r\n            topancakeTokens = (this.state.hardCap) * this.state.liquidityPercent / 100;\r\n            pancakeTokens = topancakeTokens/pancakePrice;\r\n            console.log(\"pancake tokens : \",pancakeTokens)\r\n        }\r\n         const netTokens = (this.state.hardCap)/presalePrice;\r\n         \r\n         this.setState({ deposit: pancakeTokens + netTokens });\r\n        \r\n    }\r\n\r\n    async DepositTokens(){\r\n        const account= getAccount()\r\n        const tokenAmount = toFixedNumber(this.state.deposit * 10 ** this.state.tokeninfo?.decimals).toString()\r\n        console.log(\"tokenAmount\",tokenAmount,this.state.tokeninfo?.decimals);\r\n        const isDeposit = await depositTokens(this.state.address,this.state.createdSale,tokenAmount,account)\r\n        this.setState({ isDeposited : isDeposit});\r\n        \r\n    }   \r\n\r\n\r\n    async approvetoken(){\r\n        await Approvetoken(this.state.address);\r\n        this.setState({approvebutton : true})\r\n    }\r\n\r\n    renderDeposit(){\r\n        return( this.state.deposit > 0 ?\r\n              <button onClick={this.DepositTokens.bind(this)} className=\"get-started-btn\">Deposit {this.state.deposit} {this.state.symbol}</button>:\r\n               <button onClick={this.calculateDepositTokens.bind(this)} className=\"get-started-btn\">Calculate</button>)\r\n    }\r\n\r\n    validate(){\r\n       \r\n        if(parseFloat(this.state.hardCap) < parseFloat(this.state.softCap)){\r\n            toast.error(\"Hard Cap must be Higher than Soft Cap !\",\r\n            {\r\n                position:position.position,\r\n             style:style,\r\n             iconTheme: iconTheme,\r\n            })\r\n        }\r\n        if((parseFloat(this.state.presaleRate) < 0)){\r\n            toast.error(\"Price must be greater than 0\",\r\n            {\r\n                position:position.position,\r\n             style:style,\r\n             iconTheme: iconTheme,\r\n            })\r\n        }\r\n        if((parseFloat(this.state.pancakeRate) < 0)){\r\n            toast.error(\"Pancake price must be greater than 0\",\r\n            {\r\n                position:position.position,\r\n                style:style,\r\n                iconTheme: iconTheme,\r\n            })\r\n        }\r\n\r\n        return (parseFloat(this.state.hardCap) < parseFloat(this.state.softCap)) || (parseFloat(this.state.presaleRate) < 0) || (parseFloat(this.state.pancakeRate) < 0) ;\r\n    }\r\n\r\n    filterPassedTime = (time) => {\r\n        const currentDate = new Date();\r\n        const selectedDate = new Date(time);\r\n    \r\n        return currentDate.getTime() < selectedDate.getTime();\r\n      };\r\n\r\n\r\n\r\n      onDismiss(){\r\n        this.setState({ tokenModal: false });\r\n    }\r\n\r\n    render() {\r\n        \r\n  \r\n        const {tokenModal} = this.state\r\n\r\n        \r\n      return (\r\n        <div>\r\n\r\n           {/* Wizard */}\r\n           <div className='d-none d-xl-block container px-1'>\r\n           <div className='row mt-5'>\r\n             <div className='col-3'>\r\n               <div className={this.state.currentStep ==1 ? \"card_bg_wizard active card\":\"card_bg_wizard card\"} \r\n            //    onClick={()=>{this.setState({ currentStep: 1})}}\r\n               >\r\n                 <div className='card-body'>\r\n                   <div className='d-flex align-items-center h-100'>\r\n                     <div className='wizard_badge_num'>\r\n                       1\r\n                     </div>\r\n                     <div className='pl-3 create_wiz_desc'>\r\n                       <h5>Verify Token</h5>\r\n                       <p className='mb-0'>Enter the token address and verify</p>\r\n                     </div>\r\n                   </div>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n             {this.state.step1 == true?\r\n             <div className='col-3'>\r\n               <div className={this.state.currentStep ==2 ? \"card_bg_wizard active card\":\"card_bg_wizard card\"} \r\n            //    onClick={()=>{this.setState({ currentStep: 2})}}\r\n               >\r\n                 <div className='card-body'>\r\n                   <div className='d-flex align-items-center h-100'>\r\n                     <div className='wizard_badge_num'>\r\n                       2\r\n                     </div>\r\n                     <div className='pl-3 create_wiz_desc'>\r\n                       <h5>Defi Launchpad Info</h5>\r\n                       <p className='mb-0'>Enter the launchpad information that you want to raise, that should be enter all details about your presale</p>\r\n                     </div>\r\n                   </div>\r\n                 </div>\r\n               </div>\r\n             </div> : <div disabled className='col-3'>\r\n               <div className={this.state.currentStep ==2 ? \"card_bg_wizard active card\":\"card_bg_wizard card\"}>\r\n                 <div className='card-body'>\r\n                   <div className='d-flex align-items-center h-100'>\r\n                     <div className='wizard_badge_num'>\r\n                       2\r\n                     </div>\r\n                     <div className='pl-3 create_wiz_desc'>\r\n                       <h5>Defi Launchpad Info</h5>\r\n                       <p className='mb-0'>Enter the launchpad information that you want to raise, that should be enter all details about your presale</p>\r\n                     </div>\r\n                   </div>\r\n                 </div>\r\n               </div>\r\n             </div>}\r\n             <div className='col-3'>\r\n               <div className={this.state.currentStep ==3 ? \"card_bg_wizard active card\":\"card_bg_wizard card\"} \r\n            //    onClick={()=>{this.setState({ currentStep: 3})}}\r\n               >\r\n                 <div className='card-body'>\r\n                   <div className='d-flex align-items-center h-100'>\r\n                     <div className='wizard_badge_num'>\r\n                       3\r\n                     </div>\r\n                     <div className='pl-3 create_wiz_desc'>\r\n                       <h5>Add Additional Info</h5>\r\n                       <p className='mb-0'>Let people know who you are</p>\r\n                     </div>\r\n                   </div>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n             <div className='col-3'>\r\n               <div className={this.state.currentStep ==4 ? \"card_bg_wizard active card\":\"card_bg_wizard card\"} \r\n            //    onClick={()=>{this.setState({ currentStep: 4})}}\r\n               >\r\n                 <div className='card-body'>\r\n                   <div className='d-flex align-items-center h-100'>\r\n                     <div className='wizard_badge_num'>\r\n                       4\r\n                     </div>\r\n                     <div className='pl-3 create_wiz_desc'>\r\n                       <h5>Finish</h5>\r\n                       <p className='mb-0'>Review your information</p>\r\n                     </div>\r\n                   </div>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n\r\n         </div>\r\n           </div>\r\n          \r\n           {/* end Wizard */}\r\n      {/* ongoing_sec */}\r\n          <div className='ongoing_sec form_sec'>\r\n      \r\n      \r\n       <div className=\"inner_bg mt-5\">\r\n         <div className='row'>\r\n           <div className='col-12 col-md-10 col-lg-9 mx-auto'>\r\n           <div className=\"tab_img\">\r\n                 <div className='card_bg card'>\r\n            <div className='card-body'>\r\n              <div className='row align-items-center pb-4'>\r\n                <div className='col-12 col-md-6 mb-3 mb-md-0'>\r\n                  <p className='bottom_text mb-0'>(*) is required field.</p>\r\n                  \r\n                </div>\r\n                <div className={this.state.currentStep ==1 ? \"col-12 col-md-6 text-md-right d-block\":\"col-12 col-md-6 text-md-right d-none\"}>\r\n                <button className=\"get-started-btn\" onClick={() => this.setState({ tokenModal: true })}>+ Create</button>\r\n                </div>\r\n              </div>\r\n              <div id=\"firststep\" className={this.state.currentStep ==1 ? \"d-block\":\"d-none\"}>\r\n                <div className='row'>                     \r\n                      <div className='col-12 col-md-12'>\r\n                    <p className='input_desc_sm'>Token Address*</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl value={this.state.address} onChange={(e)=> this.settokenaddress(e.target.value)} id=\"tokenaddress\" placeholder=\"\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.tokenaddress}</span>\r\n                    </div>\r\n                    <div className='note_desc mt-1 mb-1'>\r\n                    <p>Pool creation fee: {this.state.poolfee} BNB</p>\r\n                    </div>\r\n                        </div>\r\n\r\n                        <div className={isEmpty(this.state.tokeninfo) ? \"d-none\" : 'col-12 col-md-12 mb-3'}>\r\n                        <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n                            <span className='desc_grey_txt'>Name :</span>\r\n                            <span className='desc_grey_txt font_12'>{this.state.tokeninfo?.name}</span>\r\n                                </p>\r\n\r\n                        \r\n                                <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n                            <span className='desc_grey_txt'>Symbol :</span>\r\n                            <span className='desc_grey_txt font_12'>{this.state.tokeninfo?.symbol}</span>\r\n                                </p>\r\n\r\n                                <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n                            <span className='desc_grey_txt'>Decimals :</span>\r\n                            <span className='desc_grey_txt font_12'>{this.state.tokeninfo?.decimals}</span>\r\n                                </p>\r\n                      </div>\r\n\r\n                        <div className='col-12 col-md-12 mb-1'>\r\n                        <p className='input_desc_sm'>Currency</p>\r\n                        <div className='d-flex'>\r\n                            <div className={this.state.currency === \"BNB\"?'currency_badge active mr-2' : \"currency_badge mr-2\"}  value = \"BNB\"\r\n                                onClick = {(e)=>{console.log(e.target.getAttribute(\"value\"));\r\n                                    this.setState({\"currency\" :e.target.getAttribute(\"value\")})\r\n                                    this.GetTokenAddress(e.target.getAttribute(\"value\"))\r\n                                }}\r\n                            >BNB</div>\r\n                            <div className={this.state.currency == \"BUSD\"?'currency_badge active mr-2' : \"currency_badge mr-2\"} value = \"BUSD\" onClick = {(e)=>{\r\n                                this.setState({\"currency\" : e.target.getAttribute(\"value\")});\r\n                                this.GetTokenAddress(e.target.getAttribute(\"value\"));\r\n                                \r\n                            }}>BUSD</div>\r\n                            <div className={this.state.currency == \"USDT\"?'currency_badge active mr-2' : \"currency_badge mr-2\"} value = \"USDT\"\r\n                                onClick = {(e)=>{\r\n                                    this.setState({\"currency\" :e.target.getAttribute(\"value\")});\r\n                                    this.GetTokenAddress(e.target.getAttribute(\"value\"));\r\n                                   \r\n                                }}\r\n                            >USDT</div>\r\n                            <div className={this.state.currency == \"USDC\"?'currency_badge active mr-2' : \"currency_badge mr-2\"} value = \"USDC\"\r\n                            onClick = {(e)=>{\r\n                                this.setState({\"currency\" : e.target.getAttribute(\"value\")});\r\n                                this.GetTokenAddress(e.target.getAttribute(\"value\"))\r\n                            }}\r\n                            >USDC</div>\r\n\r\n                        </div>\r\n                        {console.log(\"currency\",this.state.WithTokenaddress)}\r\n                        <div className='note_desc mt-1 mb-1'>\r\n                    <p>Users will pay with {this.state.currency} for your token</p>\r\n                    </div>\r\n                    {/* <p className='input_desc_sm'>Token Symbol</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl value={this.state.symbol} onChange={(e)=>this.setState({ symbol: e.target.value }) } id=\"tokensymbol\" placeholder=\"\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                    </div> */}\r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                        <p className='input_desc_sm'>Fee Options</p>\r\n                      \r\n                        <div className=\"custom-control custom-radio mb-2\">\r\n                    <input type=\"checkbox\" id=\"customRadio1\" name=\"customRadio\" className=\"custom-control-input\"  value ={5}\r\n                    // checked\r\n                    checked ={this.state.fee == 5 ? true : false}\r\n                    onChange ={(e)=>{\r\n                        console.log(\"val\" , 5);\r\n                        this.setState({fee : e.target.value})\r\n                        this.setState({isToken : true});\r\n                        this.setState({userFee : userFee})\r\n                    }}\r\n                    />\r\n                    <label className=\"custom-control-label\" for=\"customRadio1\">{userFee}% {this.state.currency} raised only <span>(recommended)</span></label>\r\n                    </div>   \r\n\r\n                    <div className=\"custom-control custom-radio\">\r\n                    <input type=\"checkbox\" id=\"customRadio2\" name=\"customRadio\" value={2} className=\"custom-control-input\" \r\n                    checked ={this.state.fee == 2 ? true : false}\r\n                         onChange ={(e)=>{\r\n                            console.log(\"val\" , 2);\r\n                            this.setState({fee : e.target.value})\r\n                            this.setState({isToken : false});\r\n                            this.setState({userFee : userFeeWithtoken})\r\n                        }}\r\n                    />\r\n                    <label className=\"custom-control-label\" for=\"customRadio2\">{2}% {this.state.currency} raised + 2% token sold</label>\r\n                    </div>                  \r\n                        </div>\r\n\r\n                  \r\n{this.state.currency != \"BNB\" ?\r\n                        <div className='col-12 col-md-12 mb-4 mt-4'>\r\n                            <div className='card_footer_form'>\r\n                                <div className='d-flex align-items-center justify-content-center'>\r\n                                <i class=\"fa fa-exclamation-circle text-danger-war\" aria-hidden=\"true\"></i>\r\n                                <p className='mb-0 pl-3'>Do not use this currency for auto liquidity tokens, or tokens that depend on WETH pair. It will lead to error when finalizing the pool or transferring the tokens (for example Liquidity Generator Token, BabyToken, BuyBack Baby Token) <br />\r\n                            Contact Crypto Launchpad for more information.</p>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div> : <></>}\r\n\r\n                        <div className='col-12 col-md-12 mb-4'>\r\n                            <div className='card_footer_form'>\r\n                            <p className='mb-0'>For auto listing, after you finalize the pool your token will be auto listed on DEX.</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 text-center'>\r\n                            {/* {this.state.step1 ?  */}\r\n\r\n                            {this.state.approvebutton && \r\n                             <button className=\"get-started-btn\" onClick={()=>{this.setState({ currentStep: 2})}}\r\n                             disabled = {this.state.button1}\r\n                             >\r\n                                Next\r\n                             </button> \r\n                            }\r\n\r\n                        {!this.state.approvebutton &&\r\n                        <button className=\"get-started-btn\" onClick={()=>{this.approvetoken()}}\r\n                        disabled = {this.state.button1}\r\n                        >\r\n                           Approve\r\n                        </button> \r\n                        }\r\n                        \r\n                        {/* : <button  disabled className=\"get-started-btn\">\r\n                           Next\r\n                        </button> */}\r\n                        {/* // } */}\r\n                        </div>\r\n\r\n             </div>\r\n             </div>\r\n             <div id=\"secondstep\" className={this.state.currentStep ==2 ? \"d-block\":\"d-none\"}>\r\n                <div className='row'>\r\n                <div className='col-12 col-md-12 mb-3'>\r\n                        \r\n                        <p className='input_desc_sm'>Presale Rate*</p>\r\n                        <div className=\"inputs input-groups\">\r\n                            <InputGroup className=\"\">\r\n                                <FormControl pattern=\"^[1-9]+[0-9]*$\" id=\"presalerate\" value={this.state.presaleRate} onChange={(e)=>{ \r\n                                    \r\n                                        this.setState({ presaleRate: e.target.value });\r\n                                        var rx = new RegExp(/^[-+]?[0-9]+\\.[0-9]+$/)\r\n                                        var rd = new RegExp(/^\\d+$/);\r\n                                        if(rx.test(e.target.value) || rd.test(e?.target?.value) || !isNaN(e.target.value)){\r\n                                            const formvalue = {...this.state.errors , [\"presale\"]: \"\"}\r\n                                            this.setState({errors : formvalue})\r\n                                        }\r\n                                        else {\r\n                                            const formvalue = {...this.state.errors , [\"presale\"]: \"Invalid PresaleRate\"}\r\n                                            this.setState({errors : formvalue})\r\n                                        }\r\n                                        this.handledisable();\r\n                                     }} placeholder=\"\"\r\n                                    aria-describedby=\"basic-addon2\"\r\n                                />\r\n                              \r\n                            </InputGroup>\r\n                            <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.presale}</span>\r\n                        </div>\r\n                        <div className='note_desc mt-1 mb-1'>\r\n                    <p>If I spend 1 {this.state.currency} how many tokens will I receive?</p>\r\n                    </div>\r\n                            </div>\r\n\r\n                            <div className='col-12 col-md-12 mb-3'>\r\n                        <p className='input_desc_sm'>Whitelist</p>\r\n                      \r\n                        <div className=\"custom-control custom-radio mb-2\">\r\n                    <input type=\"radio\"\r\n                        checked ={ !this.state.isWhitelisted  ? true : false}\r\n                    onChange={(e)=> this.setState({isWhitelisted : false})} id=\"customRadio3\" name=\"customRadio\" className=\"custom-control-input\" />\r\n                    <label className=\"custom-control-label\" for=\"customRadio3\">Disable</label>\r\n                    </div>   \r\n\r\n                    <div className=\"custom-control custom-radio\">\r\n                    <input type=\"radio\"\r\n                        checked ={this.state.isWhitelisted  ? true : false}\r\n                    onChange={(e)=> this.setState({isWhitelisted : true})} id=\"customRadio4\" name=\"customRadio\" className=\"custom-control-input\" />\r\n                    <label className=\"custom-control-label\" for=\"customRadio4\">Enable</label>\r\n                    </div>                 \r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 mb-0'>\r\n                    <p className='input_desc_sm'>Soft Cap (BNB)*</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl value={this.state.softCap} onChange={(e)=>{\r\n                                this.setState({ softCap: e.target.value });\r\n                                if (!e.target.value || isNaN(e.target.value)) {\r\n                                    const formvalue = {...this.state.errors , [\"softcap\"]: \"Invalid softcap !\"}\r\n                                    this.setState({errors : formvalue});\r\n                                  }\r\n                                  else if(this.state.hardCap){\r\n                                    if(e.target?.value < (parseFloat(this.state.hardCap)/2)){console.log(\"Softcap must\");\r\n                                        const formvalue = {...this.state.errors , [\"softcap\"]: \"Softcap must be greater than 50% of Hardcap\"}\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    else if(e.target?.value >= parseFloat(this.state.hardCap)/2){\r\n                                        const formvalue = {...this.state.errors , [\"hardcap\"]: \"\" , [\"softcap\"]: \"\"}\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    else{\r\n                                        const formvalue = {...this.state.errors , [\"softcap\"]: \"\"}\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                  }\r\n                                  else{\r\n                                    const formvalue = {...this.state.errors , [\"softcap\"]: \"\"}\r\n                                    this.setState({errors : formvalue});\r\n                                  }\r\n                                  this.handledisable();\r\n                            \r\n                            } } id=\"softcap\" placeholder=\"\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.softcap}</span>\r\n                    </div>\r\n                    <div className='note_desc mt-1 mb-0'>\r\n                    <p>{\"Soft Cap must be >= 50% of Hard Cap\"}</p>\r\n                    </div>\r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Hard Cap (BNB)*</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"hardcap\" value={this.state.hardCap} onChange={(e)=>{\r\n                                \r\n                                const formvalue = {...this.state.errors , [\"hardcap\"]: \"\"}\r\n                                this.setState({errors : formvalue});\r\n                                this.setState({ hardCap: e.target.value }); \r\n                                if (!e.target.value || isNaN(parseFloat(e.target.value))) {\r\n                                    console.log(\"invalid\");\r\n                                    const formvalue = {...this.state.errors , [\"hardcap\"]: \"Invalid hardcap !\"}\r\n                                    this.setState({errors : formvalue});\r\n                                  }\r\n                                  \r\n                                  else if(e.target.value < parseFloat(this.state.softCap)){console.log(\"hardcap\" , e.target.value);\r\n                                    const formvalue = {...this.state.errors , [\"hardcap\"]: \"Hardcap must be greater than softcap !\"}\r\n                                    this.setState({errors : formvalue});\r\n                                  }\r\n                                //   else if(e.target.value < parseFloat(this.state.softCap)){\r\n                                //     const formvalue = {...this.state.errors , [\"softcap\"]: \"Softcap must be >= 50% of Hardcap\"}\r\n                                //     this.setState({errors : formvalue});\r\n                                //   }\r\n                                  else{\r\n                                    const formvalue = {...this.state.errors , [\"hardcap\"]: \"\"}\r\n                                    this.setState({errors : formvalue});\r\n                                  }\r\n\r\n                                  if(this.state.softCap < (parseFloat(e.target.value)/2)){\r\n                                    const formvalue = {...this.state.errors , [\"softcap\"]: \"Softcap must be >= 50% of Hardcap\"}\r\n                                    this.setState({errors : formvalue});\r\n                                  }\r\n\r\n                                  this.handledisable();\r\n                                  console.log(\"condition\" , e.target.value < this.state.softcap)\r\n                                  \r\n                            }} placeholder=\"\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.hardcap}</span>\r\n                    </div>\r\n                        </div> \r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Minimum Buy (BNB)*</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"mincontribution\" value={this.state.min} onChange={(e)=>{\r\n                                const formvalue = {...this.state.errors , [\"min\"]: \"\"}\r\n                                this.setState({errors : formvalue});\r\n                                this.setState({ min: e.target.value });\r\n                                if(isNaN(e.target.value)){\r\n                                    const formvalue = {...this.state.errors , [\"min\"]: \"Invalid Minimum Buy \"}\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                if(!e.target.value){\r\n                                    const formvalue = {...this.state.errors , [\"min\"]: \"Minimum Buy field is required\"}\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                               if(this.state.max){\r\n                                if(e.target.value > this.state.max){\r\n                                    const formvalue = {...this.state.errors , [\"min\"]: \"Minimum Buy  must be < Maximum Buy\"}\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                else{\r\n                                    const formvalue = {...this.state.errors , [\"min\"]: \"\"}\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                               }\r\n                               this.handledisable();\r\n                            } } placeholder=\"\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.min}</span>\r\n                    </div>\r\n                        </div>\r\n                        \r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Maximum Buy ({this.state.currency})*</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"maxcontribution\" value={this.state.max} onChange={(e)=>{\r\n                                const formvalue = {...this.state.errors , [\"max\"]: \"\"}\r\n                                this.setState({errors : formvalue});\r\n                                this.setState({ max: e.target.value });\r\n                                if(isNaN(e.target.value)){\r\n                                    const formvalue = {...this.state.errors , [\"max\"]: \"Invalid Maximum Buy \"}\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                if(!e.target.value){\r\n                                    const formvalue = {...this.state.errors , [\"max\"]: \"Maximum Buy field is required\"}\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                if(this.state.min){\r\n                                    if(e.target.value < this.state.min){\r\n                                        const formvalue = {...this.state.errors , [\"max\"]: \"Maximum Buy  must be > Minimum Buy\"}\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    else{\r\n                                        const formvalue = {...this.state.errors , [\"max\"]: \"\"}\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                   }\r\n                                   this.handledisable();\r\n                            } } placeholder=\"\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.max}</span>\r\n                    </div>\r\n                        </div> \r\n\r\n                        {/* <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Refund Type</p>\r\n                    <select className=\"form-control custm_sel\" id=\"exampleFormControlSelect3\">\r\n                        <option>Burn</option>                       \r\n                        </select>\r\n                        </div> */}\r\n\r\n                        {/* <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Select Router Exchange</p>\r\n                    <select className=\"form-control custm_sel\" id=\"exampleFormControlSelect4\">\r\n                        <option>Pancakeswap</option>                       \r\n                        </select>\r\n                        </div> */}\r\n                              <div className='col-12 col-md-12 mb-3'>\r\n                        <p className='input_desc_sm'>Listing Options</p>\r\n                        <div className='d-flex'>\r\n                            <div className={`currency_badge  mr-2 ${this.state.isPancake === true? \"active\" : \"\"} `} onClick={(e)=> {\r\n                                this.setState({isPancake : true});\r\n                                \r\n                                // this.forceUpdate();\r\n                                this.handledisable();\r\n                                }}>Auto</div>\r\n                            <div className={`currency_badge  mr-2 ${this.state.isPancake === false? \"active\" : \"\"} `} onClick={(e)=> {\r\n                                this.setState({isPancake : false});\r\n                                // this.forceUpdate();\r\n                                this.handledisable();\r\n                                }}>Manual</div>                           \r\n                        </div>\r\n                    \r\n                        </div>\r\n                        {this.state.isPancake ?\r\n                        <>\r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Locking Days</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"liquidity\" value={this.state.unlockOn} onChange={(e)=>{\r\n                                this.setState({ unlockOn: e.target.value });\r\n                                var rx = new RegExp(/^\\d+$/);\r\n                                if(!rx.test(e.target.value)){\r\n                                    const formvalue = {...this.state.errors , [\"lockingday\"] : \"Invalid Locking Days !\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                else{\r\n                                    const formvalue = {...this.state.errors , [\"lockingday\"] : \"\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                this.handledisable();\r\n                                } } placeholder=\"0\" aria-describedby=\"basic-addon2\" />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.lockingday}</span>\r\n                    </div>\r\n                        </div> \r\n\r\n                      \r\n\r\n                        <div className='col-12 col-md-12 mb-0'>\r\n                    <p className='input_desc_sm'>Listing Rate per {this.state.currency}</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"maxcontribution\" value={this.state.pancakeRate} onChange={(e)=>{\r\n                                if(!isFloat(e.target.value)){  \r\n                                    this.setState({ pancakeRate: e.target.value })\r\n                                    var rx = new RegExp(/^\\d+$/);\r\n                                if(!rx.test(e.target.value)){\r\n                                    const formvalue = {...this.state.errors , [\"listingrate\"] : `Invalid Listing Rate per ${this.state.currency} !`};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                    else {\r\n                                        const formvalue = {...this.state.errors , [\"listingrate\"] : \"\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                }\r\n                                this.handledisable();\r\n                                }} placeholder=\"0\" aria-describedby=\"basic-addon2\" />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.listingrate}</span>\r\n                    </div>\r\n                    <div className='note_desc mt-1 mb-1'>\r\n                    <p>1 {this.state.currency} = {this.state.presaleRate} {this.state.name}</p>\r\n                    </div>\r\n                        </div> \r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Pancakeswap Liquidity</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"liquidity\" value={this.state.liquidityPercent} onChange={(e)=>{\r\n                                if(!isFloat(e.target.value)){ \r\n                                    this.setState({ liquidityPercent: e.target.value });\r\n                                    if(isNaN(e.target.value) || e.target.value <51 || e.target.value > 100){\r\n                                        const formvalue = {...this.state.errors , [\"liquidity\"] : \"Invalid Pancakeswap Liquidity !\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    } \r\n                                    else {\r\n                                        const formvalue = {...this.state.errors , [\"liquidity\"] : \"\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    }\r\n                                    this.handledisable();\r\n                                    }} placeholder=\"0\" aria-describedby=\"basic-addon2\" />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.liquidity}</span>\r\n                    </div>\r\n                        </div> \r\n                        </>:<></>}\r\n                        {this.state.isPancake ?\r\n                        <div className='col-12 col-md-12 mb-2'>\r\n                        <div className='note_desc mt-1 mb-0'>\r\n                    <p>Enter the percentage of raised funds that sholud be allocated to Liquidity on (Min 51%, Max 100%)</p>\r\n                    <p>If I spend 1 BNB on how many tokens will I receive? Usually the amount is lower than presale rate to allow for a higher listing price on</p>\r\n                    \r\n                    </div>\r\n                        </div> : <></>}\r\n                        <div className='col-12 col-md-12 mb-0'>\r\n                    <p className='input_desc_sm'>Select Start time & End time (UTC)*</p>\r\n                    </div>\r\n                    <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Start Time (UTC)*</p>\r\n                    <div className=\"inputs input-groups date_inoput_grps\">\r\n                        <InputGroup className=\"datepicker_input\">\r\n                        <DatePicker\r\n                         minDate={new Date()}\r\n                                                    filterTime={this.filterPassedTime.bind(this)}\r\n                                                   showTimeSelect\r\n                                                   selected={this.state.startDate}\r\n                                                   onChange={(date)=> {\r\n                                                    this.setState({startDate: date})\r\n                                                    // if(Date.parse(date) > Date.now()){\r\n                                                    //     let formData = { ...this.state.errors, [\"startdate\"]: \"Start Time needs to be after now\" };\r\n                                                    //      this.setState({ errors: formData });\r\n                                                    //   }\r\n                                                    //   else{\r\n                                                    //     let formData = { ...this.state.errors, [\"startdate\"]: \"Start Time needs to be after now\" };\r\n                                                    //      this.setState({ errors: formData });\r\n                                                    //   }\r\n                                                      if(this.state.endDate){\r\n                                                        if(Date.parse(date) > this.state.endDate){\r\n                                                            let formData = { ...this.state.errors, [\"startdate\"]: \"Start Time must be < End Time\" };\r\n                                                            this.setState({ errors: formData });\r\n                                                        }\r\n                                                        if(this.state.endDate > Date.parse(date)){\r\n                                                            let formData = { ...this.state.errors, [\"enddate\"]: \"\" };\r\n                                                            this.setState({ errors: formData });\r\n                                                        }\r\n                                                        // else{\r\n                                                        //     let formData = { ...this.state.errors, [\"startdate\"]: \"Start Time needs to be after now\" };\r\n                                                        //      this.setState({ errors: formData });\r\n                                                        //   }\r\n                                                      }\r\n                                                      this.handledisable();\r\n                                                }\r\n                                            \r\n                                            }\r\n                                                   dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                                 />\r\n                          \r\n                        </InputGroup>\r\n                        <InputGroup.Append className='cur_pointer'>\r\n                                <button variant=\"outline-secondary\" className=\"trans_cal_btn\">\r\n                                <i class=\"far fa-calendar-alt\"></i>\r\n                                </button>\r\n                            </InputGroup.Append>\r\n                    </div>\r\n                    <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.startdate}</span>\r\n                        </div>\r\n                        <div className='col-12 col-md-12 mb-3'>{console.log(\"new Date(parseFloat(this.state.startDate))\" , this.state.startDate , new Date(parseFloat(this.state.startDate)))}\r\n                    <p className='input_desc_sm'>End Time (UTC)*</p>\r\n                    <div className=\"inputs input-groups date_inoput_grps\">\r\n                        <InputGroup className=\"datepicker_input\">\r\n                        <DatePicker\r\n                                                 minDate={new Date()}\r\n                                                 filterTime={this.filterPassedTime.bind(this)}\r\n                                                   showTimeSelect\r\n                                                   selected={this.state.endDate}\r\n                                                   onChange={(date)=> {\r\n                                                    this.setState({endDate: date});\r\n                                                   \r\n                                                    // if(Date.parse(date) > Date.now()){\r\n                                                    //     let formData = { ...this.state.errors, [\"enddate\"]: \"\" };\r\n                                                    //     this.setState({ errors: formData });\r\n                                                    //   }\r\n                                                    //   else{\r\n                                                    //     let formData = { ...this.state.errors, [\"enddate\"]: \"End Time needs to be after now\" };\r\n                                                    //      this.setState({ errors: formData });\r\n                                                    //   }\r\n                                                      if(this.state.startDate){\r\n                                                        if(Date.parse(date) <= this.state.startDate){console.log(\"invalideee\");\r\n                                                            let formData = { ...this.state.errors, [\"enddate\"]: \"End Time must be > Start Time\" };\r\n                                                            this.setState({ errors: formData });\r\n                                                            console.log(\"invalideee\" , formData);\r\n                                                            this.forceUpdate()\r\n                                                        }\r\n                                                        if(this.state.startDate < Date.parse(date)){\r\n                                                            let formData = { ...this.state.errors, [\"startdate\"]: \"\" };\r\n                                                            this.setState({ errors: formData });\r\n                                                            let formdata = { ...this.state.errors, [\"enddate\"]: \"\" };\r\n                                                             this.setState({ errors: formdata });\r\n                                                        }\r\n                                                    //     else{\r\n                                                    //         let formData = { ...this.state.errors, [\"enddate\"]: \"\" };\r\n                                                    //          this.setState({ errors: formData });\r\n                                                    //       }\r\n                                                      }\r\n                                                      this.handledisable();\r\n                                                }}\r\n                                                   dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                                 />\r\n                          \r\n                        </InputGroup>\r\n                        <InputGroup.Append className='cur_pointer'>\r\n                                <button variant=\"outline-secondary\" className=\"trans_cal_btn\">\r\n                                <i class=\"far fa-calendar-alt\"></i>\r\n                                </button>\r\n                            </InputGroup.Append>\r\n                    </div>\r\n                    <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.enddate}</span>\r\n                        </div>  \r\n\r\n                   \r\n\r\n               <div className='col-12 col-md-12'>\r\n               <div className=\"custom-control custom-checkbox\">\r\n  <input type=\"checkbox\" checked={this.state.isVested} onChange={(e)=> this.setState({isVested : e.target.checked})} className=\"custom-control-input\" id=\"customCheck1\" />\r\n  <label className=\"custom-control-label\" for=\"customCheck1\">Using Vesting Contributor?</label>\r\n</div></div>  \r\n\r\n{this.state.isVested ?\r\n            <>\r\n            <div className='col-12 col-md-12 mb-3 mt-4'>\r\n                    <p className='input_desc_sm'>Vesting Period Days</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"liquiditylockingdays\" value={this.state.vestInterval} onChange={(e)=>{\r\n                                this.setState({ vestInterval: e.target.value });\r\n                                var rx = new RegExp(/^\\d+$/);\r\n                                if(!rx.test(e.target.value)){\r\n                                    const formvalue = {...this.state.errors , [\"vestinterval\"] : \"Invalid Vesting Period Days !\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                else{\r\n                                    const formvalue = {...this.state.errors , [\"vestinterval\"] : \"\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                this.handledisable();\r\n                            } }  placeholder=\"\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.vestinterval}</span>\r\n                    </div>\r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 mb-3 mt-4'>\r\n                    <p className='input_desc_sm'>Rewards % per Vesting Period</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"liquiditylockingdays\"value={this.state.vestPercent} onChange={(e)=>{\r\n                                if(!isFloat(e.target.value)){ \r\n                                    this.setState({ vestPercent: e.target.value }) ;\r\n                                    if(isNaN(e.target.value) || e.target.value <0 || e.target.value > 100){\r\n                                        const formvalue = {...this.state.errors , [\"vestpercent\"] : \"Invalid Rewards % per Vesting Period !\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    } \r\n                                    else {\r\n                                        const formvalue = {...this.state.errors , [\"vestpercent\"] : \"\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    this.handledisable();\r\n                                }} }placeholder=\"\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.vestpercent}</span>\r\n                    </div>\r\n                        </div>\r\n\r\n               </>:<></>     }  \r\n\r\n\r\n\r\n                    \r\n                    <div className='col-12 col-md-12 text-center'>\r\n                        <button className=\"get-started-btn mr-2\" onClick={()=>{this.setState({ currentStep: 1})}}>\r\n                           Back\r\n                        </button>\r\n                        <button className=\"get-started-btn\" onClick={()=>{\r\n                            console.log(\"disable\" , this.handledisable());\r\n                            if( this.handledisable()){\r\n                                \r\n                            }\r\n                            else{\r\n                                this.setState({ currentStep: 3})\r\n                            }\r\n                            // else{\r\n                            //     toast.error(\"\")\r\n                            // }\r\n                            }}>\r\n                           Next\r\n                        </button>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"thirdstep\" className={this.state.currentStep ==3 ? \"d-block\":\"d-none\"}>\r\n            <div className='row'>\r\n                <div className='col-12 col-md-12 mb-0'>\r\n                        \r\n                        <p className='input_desc_sm'>Logo URL*</p>\r\n                        <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"file\" value={this.state.logo} onChange={(e)=>{\r\n                                this.setState({ logo: e.target.value });\r\n                                if(urlvalidation(e.target.value)){\r\n                                    const formvalue = {...this.state.errors , [\"logo\"] : \"\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                else{\r\n                                    const formvalue = {...this.state.errors , [\"logo\"] : \"Invalid Logo Url!\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                this.handledisableurlbutton();\r\n                            } } placeholder=\"\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.logo}</span>\r\n                    </div>\r\n                        <div className='note_desc mt-1 mb-0'>\r\n                    <p>URL must be end with a supported image extension .png, .jpg,</p>\r\n                    </div>\r\n                            </div>\r\n\r\n                            <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Website*</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl value={this.state.website} onChange={(e)=>{\r\n                                this.setState({ website: e.target.value });\r\n                                if(urlvalidation(e.target.value)){\r\n                                    const formvalue = {...this.state.errors , [\"website\"] : \"\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                else{\r\n                                    const formvalue = {...this.state.errors , [\"website\"] : \"Invalid Website Url!\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                this.handledisableurlbutton();\r\n                            } } id=\"logolink1\" placeholder=\"https://cryptolaunchpad.app\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.website}</span>\r\n                    </div>\r\n                        </div>\r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Facebook</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl  id=\"logolinkfb\" placeholder=\"https://facebook.com\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                onChange={(e)=>{\r\n                                    this.setState({\"facebook\" : e.target.value}); \r\n                                    if(urlvalidation(e.target.value)){\r\n                                        const formvalue = {...this.state.errors , [\"facebook\"] : \"\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    else{\r\n                                        const formvalue = {...this.state.errors , [\"facebook\"] : \"Invalid Facebook Url!\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    this.handledisableurlbutton();\r\n                                }}\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.facebook}</span>\r\n                    </div>\r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Twitter</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl value={this.state.twitter} onChange={(e)=>{\r\n                                this.setState({ twitter: e.target.value });\r\n                                if(urlvalidation(e.target.value)){\r\n                                    const formvalue = {...this.state.errors , [\"twitter\"] : \"\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                else{\r\n                                    const formvalue = {...this.state.errors , [\"twitter\"] : \"Invalid Twitter Url!\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                this.handledisableurlbutton();\r\n                            } } id=\"logolink2\" placeholder=\"https://twitter.com\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.twitter}</span>\r\n                    </div>\r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Github</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"logolinkgit\" placeholder=\"https://github.com\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                onChange={(e)=>{\r\n                                    this.setState({\"github\" : e.target.value})\r\n                                    if(urlvalidation(e.target.value)){\r\n                                        const formvalue = {...this.state.errors , [\"github\"] : \"\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    else{\r\n                                        const formvalue = {...this.state.errors , [\"github\"] : \"Invalid Github Url!\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    this.handledisableurlbutton();\r\n                                }}\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.github}</span>\r\n                    </div>\r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Telegram</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl value={this.state.telegram} onChange={(e)=>{\r\n                                this.setState({ telegram: e.target.value });\r\n                                if(urlvalidation(e.target.value)){\r\n                                    const formvalue = {...this.state.errors , [\"telegram\"] : \"\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                else{\r\n                                    const formvalue = {...this.state.errors , [\"telegram\"] : \"Invalid Telegram Url!\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                this.handledisableurlbutton();\r\n                            } } id=\"logolink3\" placeholder=\"https://telegram.com\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.telegram}</span>\r\n                    </div>\r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Instagram</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl  id=\"logolinkinsta\" placeholder=\"https://instagram.com\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                onChange={(e)=>{\r\n                                    this.setState({instagram : e.target.value});\r\n                                    if(urlvalidation(e.target.value)){\r\n                                        const formvalue = {...this.state.errors , [\"instagram\"] : \"\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    else{\r\n                                        const formvalue = {...this.state.errors , [\"instagram\"] : \"Invalid Instagram Url!\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    this.handledisableurlbutton();\r\n                                }}\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.instagram}</span>\r\n                    </div>\r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Discord</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl  id=\"logolinkdiscord\" placeholder=\"https://discord.com\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                onChange={(e)=>{\r\n                                    this.setState({discord : e.target.value});\r\n                                    if(urlvalidation(e.target.value)){\r\n                                        const formvalue = {...this.state.errors , [\"discord\"] : \"\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    else{\r\n                                        const formvalue = {...this.state.errors , [\"discord\"] : \"Invalid Discord Url!\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    this.handledisableurlbutton();\r\n                                }}\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.discord}</span>\r\n                    </div>\r\n                        </div>\r\n                        \r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Reddit</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl  id=\"logolinkreddit\" placeholder=\"https://reddit.com\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                onChange={(e)=>{\r\n                                    this.setState({reddit : e.target.value});\r\n                                    if(urlvalidation(e.target.value)){\r\n                                        const formvalue = {...this.state.errors , [\"reddit\"] : \"\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    else{\r\n                                        const formvalue = {...this.state.errors , [\"reddit\"] : \"Invalid Reddit Url!\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    this.handledisableurlbutton();\r\n                                }}\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.reddit}</span>\r\n                    </div>\r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 mb-0'>\r\n                    <p className='input_desc_sm'>Youtube Video</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl  id=\"logolinkyoutube\" placeholder=\"https://youtube.com\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                onChange={(e)=>{\r\n                                    this.setState({youtubevideo : e.target.value});\r\n                                    if(urlvalidation(e.target.value)){\r\n                                        const formvalue = {...this.state.errors , [\"youtube\"] : \"\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    else{\r\n                                        const formvalue = {...this.state.errors , [\"youtube\"] : \"Invalid Youtube Video Url!\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    this.handledisableurlbutton();\r\n                                }}\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.youtube}</span>\r\n                    </div>\r\n\r\n                    <div className='note_desc mt-1 mb-0'>\r\n                    <p>Input your youtube URL</p>\r\n                    </div>\r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Description</p>\r\n                    <div className=\"inputs input-groups text_are_grp\">\r\n                        <InputGroup className=\"\" >\r\n                            <textarea value={this.state.description} onChange={(e)=>{\r\n                                this.setState({ description: e.target.value });\r\n                                if(!e.target.value){\r\n                                    const formvalue = {...this.state.errors , [\"description\"] : \"Invalid Description!\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                else{\r\n                                    const formvalue = {...this.state.errors , [\"description\"] : \"\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                this.handledisableurlbutton();\r\n                            } } id=\"description\" rows=\"3\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                \r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.description}</span>\r\n                    </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    \r\n                    <div className='col-12 col-md-12 text-center'>\r\n                        <button className=\"get-started-btn mr-2\" onClick={()=>{this.setState({ currentStep: 2})}}>\r\n                           Back\r\n                        </button>\r\n                        <button className=\"get-started-btn\" onClick={()=>{\r\n                            \r\n                            this.setState({ currentStep: 4});\r\n                            this.calculateDepositTokens();\r\n                        }}\r\n                         disabled={this.state.button3}\r\n                        >\r\n                           Next\r\n                        </button>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"fourthstep\" className={this.state.currentStep ==4 ? \"d-block\":\"d-none\"}>\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            {/* <span className='desc_grey_txt'>Deposit Token :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.deposit} {this.state.name}</span> */}\r\n            </p>\r\n\r\n            {/* <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Factory Address :</span>\r\n            <span className='desc_grey_txt font_12'>0xf4567uyht8956 \r\n            <i class=\"fa fa-files-o pl-2 copy_hover\" aria-hidden=\"true\"></i>\r\n            </span>\r\n            </p> */}\r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Token Name :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.tokeninfo.name ? this.state.tokeninfo.name : \"\"}\r\n            </span>\r\n            </p>\r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Token Symbol :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.tokeninfo.symbol ? this.state.tokeninfo.symbol : \"\"}\r\n            </span>\r\n            </p>\r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Token Decimals :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.tokeninfo.decimals ? this.state.tokeninfo.decimals : \"\"}\r\n            </span>\r\n            </p>\r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Presale Rate :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.presaleRate ? this.state.presaleRate : \"\"} {this.state.symbol ? this.state.symbol : \"\"}\r\n            </span>\r\n            </p>\r\n\r\n             \r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Sale Method :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.isWhitelisted === true ? \"Public\" : \"Private\" }\r\n            </span>\r\n            </p> \r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Softcap :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.softCap ? this.state.softCap : \" \"} {this.state.currency ? this.state.currency : \"\"}\r\n            </span>\r\n            </p> \r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Hardcap :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.hardCap ? this.state.hardCap : \" \"} {this.state.currency ? this.state.currency : \"\"}\r\n            </span>\r\n            </p> \r\n\r\n\r\n           \r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Minimum Buy :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.min} {this.state.currency}\r\n            </span>\r\n            </p> \r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Maximum Buy :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.max} {this.state.currency}\r\n            </span>\r\n            </p> \r\n{this.state.isPancake ? \r\n\r\n\r\n<>\r\n\r\n\r\n<p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Listing Rate :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.pancakeRate ? this.state.pancakeRate : \"\"} {this.state.name}\r\n            </span>\r\n            </p>\r\n             <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Liquidity :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.liquidityPercent}%\r\n            </span>\r\n            </p>   \r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Liquidity Lockup Time :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.unlockOn}\r\n            </span>\r\n            </p> \r\n            </> : <></>}\r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Start Time :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.startDate ? new Date(this.state.startDate).toLocaleDateString()+\"  \"\r\n             +new Date(this.state.startDate).getHours()+\":\"+new Date(this.state.startDate).getMinutes()+\":\"\r\n             +new Date(this.state.startDate).getSeconds()+\"(GMT)\"  : \"\" }\r\n            </span>\r\n            </p>   \r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>End Time :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.endDate ? new Date(this.state.endDate).toLocaleDateString()+\"  \"\r\n             +new Date(this.state.endDate).getHours()+\":\"+new Date(this.state.endDate).getMinutes()+\":\"\r\n             +new Date(this.state.endDate).getSeconds()+\"(GMT)\"  : \"\"}\r\n            </span>\r\n            </p> \r\n\r\n           \r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Website :</span>\r\n            <span className='desc_grey_txt font_12'><a href=\"#\" target=\"_blank\" className='link_grn_new link_brk_word'>{this.state.website ? this.state.website : \"\"}</a>\r\n            </span>\r\n            </p> \r\n                   \r\n            <div className='mb-4 mt-4'>\r\n                            <div className='card_footer_form'>\r\n                                <div className='d-flex align-items-center justify-content-center'>\r\n                                <i class=\"fa fa-exclamation-circle text-danger-war\" aria-hidden=\"true\"></i>\r\n                                <p className='mb-0 pl-3'>For tokens with burns, rebase or other special transfers please ensure that you have a way to whitelist multiple addresses or turn off the special transfer events (By setting fees to 0 for example for the duration of the presale)</p>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                       \r\n{this.state.deposit > 0 ?\r\n                        <div className='col-12'>\r\n<div className='note_desc mt-1 mb-1 text-center'>\r\n                    <p>Need {this.state.deposit} {this.state.name} to create launchpad.</p>\r\n                    </div>\r\n</div> : <></> }\r\n\r\n                        <div className='col-12 col-md-12 text-center'>\r\n                        <button className=\"get-started-btn mr-2\" onClick={()=>{this.setState({ currentStep: 3})}}>\r\n                           Back\r\n                        </button>\r\n\r\n\r\n                        {/* <Link to=\"/launchpaddetail\" className=\"get-started-btn\" onClick={()=>{this.setState({ currentStep: 3})}}>\r\n                           Submit\r\n                        </Link> */}\r\n                        { !this.state.isDeposited ? \r\n                        (this.state.createdSale == '' ?\r\n                        <a  onClick={() => this.CreateSale()} className=\"get-started-btn\">\r\n                           Create\r\n                        </a> : \r\n                        this.renderDeposit()):<a onClick={this.goToSale.bind(this)} className=\"get-started-btn\">Proceed to Sale</a>\r\n                        }\r\n                        </div>\r\n                        </div>\r\n                      \r\n             </div>\r\n             </div>\r\n            </div>\r\n            </div>\r\n        \r\n\r\n                \r\n               \r\n        </div>\r\n           </div>\r\n         </div>\r\n      \r\n\r\n\r\n         {tokenModal && <TokenModal connect={\"string\"} address = {(val)=>this.settokenaddress(val)} onDismiss={()=>this.onDismiss()} /> }\r\n        \r\n       </div>\r\n     \r\n\r\n\r\n    \r\n       \r\n      )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Createtab","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/Buycard.js",["1170","1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","1182"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport { ProgressBar } from 'react-bootstrap';\nimport { isSaleLive, isUpcoming, Salediffernce, UpcomingDiffernce } from '../../hooks/useProjects';\nimport Countdown from 'react-countdown';\nimport coin from \"../../images/coin.png\";\n\nimport img1 from \"../../images/img1.jpg\";\nimport img2 from \"../../images/img2.jpg\";\nimport img3 from \"../../images/img3.jpg\";\nimport { CHAINS } from '../../config/env'\nimport { getAccount, getChainId, setChainId } from '../../hooks/useAccount'\nimport { DeletePresale, getProxyOwner, UseTokenInfo } from '../../hooks/useContract';\nimport { gettrendingdisplayhook, getuserdatahook, viewlisthook, wishlisthook } from '../../hooks/usebackend';\n\nconst options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n\nconst renderer = ({ days, Month, Year, hours, minutes, seconds, completed }) => {\n    if (completed) {\n      return  <div>\n      <div>{days}d </div>\n      <div>{hours}h</div>\n      <div>{minutes}m</div>   \n      <div>{seconds}s </div>\n            \n   </div>\n    } else {\n      // Render a countdown\n      return <div>\n                {/* <span>{days}<span>Days</span> </span>\n                <span>{hours}<span>Hours</span></span>\n                <span>{minutes}<span>Minuits</span></span>   \n                <span>{seconds}<span>Seconds</span> </span>    */}\n                 <div>{days}d </div>\n      <div>{hours}h</div>\n      <div>{minutes}m</div>   \n      <div>{seconds}s </div>\n            </div>;\n    }\n  };\n\nclass Buycard extends Component\n{\n    constructor(props) {\n        super(props);\n        this.state={\n            currentChain: 0,\n            buyToken : \"\",\n            proxyOwner:\"\",\n            // accountInfo: \"\",\n            wishlist : [],\n            accountInfo : getAccount(),\n            trending : [],\n            singletrending : {}\n        }\n    }\n\n    getuserdata = async()=>{\n        let userdata = await getuserdatahook(this.state.accountInfo.toLowerCase());\n        console.log(\"userdata\" , userdata.data.data);\n        // this.setState({investedpools : userdata.data.data.investedpools})\n        this.setState({wishlist : userdata.data.data.wishlist})\n        // this.setState({viewlist : userdata.data.data.viewlist})\n        // this.setState({investedamount : userdata.data.data.investedamount})\n        // let dollar = await Userdollar(userdata.data.data.investedamount);\n        // this.setState({dollar : dollar});\n        // this.handleactivities();\n      }\n\n    componentDidMount()\n    {\n        this.setState({ accountInfo: getAccount() });\n    this.setState( { currentChain: getChainId() });\n    this.GetBuytokeninfo()\n    this.gettrending();\n    this.getOwner()\n    getAccount() &&  this.getuserdata();\n}\n\nasync gettrending(){\n    const {saleData} = this.props\n    let data = await gettrendingdisplayhook();\n    console.log(\"dataa trending\" , data?.data?.data);\n    if(data?.data?.data?.length > 0)\n    this.setState({trending : data?.data?.data}) \n    let finddata = data?.data?.data?.find((e)=> e?.saleaddress == saleData.saleAddress)\n    this.setState({singletrending : finddata})\n}\n\nasync handleheart(){\n    console.log(\"handleheart\");\n    let account = getAccount();\n    let payload = {\n        walletaddress : account.toLowerCase(),\n        saleaddress : this.props.saleData.saleAddress\n    }\n    let wishlist = await wishlisthook(payload);\n    console.log(\"wishlist respponsr\" , wishlist);\n    this.setState({wishlist : wishlist.data.data.wishlist})\n        this.getuserdata();\n}\n\nasync handleview(){\n    console.log(\"handleview\");\n    // this.props.history.push(`/privatesaledetail/${this.props.saleData.saleAddress}`)\n    let account = getAccount();\n    let payload = {\n        walletaddress : account.toLowerCase(),\n        saleaddress : this?.props?.saleData?.saleAddress\n    }\n    if(account){\n        let viewlist = await viewlisthook(payload).then(()=>{\n            window.location.href = window.location.origin + `/launchpaddetail/${this.props.saleData.saleAddress}`\n        });\n    }\n    else{\n        window.location.href = window.location.origin + `/launchpaddetail/${this.props.saleData.saleAddress}`\n    }\n}\n\nGetBuytokeninfo(){\n    const {saleData} = this.props\nif(saleData && saleData?.useWithToken === \"0x0000000000000000000000000000000000000000\"){\n   this.setState( { buyToken: \"BNB\"});\n}else{\n    const token =  UseTokenInfo(saleData && saleData?.useWithToken);\n    this.setState({ buyToken: token?.symbol });\n    \n}\n}\n\n\ngetOwner = async() =>{\n    const owner = await getProxyOwner();\n    this.setState({ proxyOwner: owner });\n    \n}\n\n\nasync Deletesale(){\n  \n    await DeletePresale(this.props?.saleData.saleAddress,getAccount());\n   \n  }\n    render() {\n  \n        const { saleData } = this.props\n        const {accountInfo } = this.state\n       \n      return (\n          \n          <div className='col-12 col-xl-4 col-lg-6 col-md-6 col-lg-6-custom mb-4 projects'>\n              {/* <a href={`/launchpaddetail/${saleData && saleData?.saleAddress}`}> */}\n                  \n        <div className='card card_style_1 ribbox'>\n            {saleData && saleData.isWithoutToken ? \n        <div className='ribbon'>NO TOKEN</div>:<></>\n            }\n            <div className='card-body'>\n                \n                <div className='pt-5 px-3 pb-2'>\n                <div className='grid_img_div'>\n                    <div className='profimg'>\n                       <img src={saleData && saleData.logo} alt={saleData && saleData.symbol} />\n                       {/* <img src={this.state.currentChain && CHAINS[this.state.currentChain].IMAGE} alt={saleData && saleData.symbol} className=\"tokenimg\" /> */}\n                   </div>\n                   <div>\n                    <div className=\"btn-group btn_grp_yel mb-2 d-block d-xl-flex d-md-block d-sm-flex flex_cont_end_flex\" role=\"group\" aria-label=\"Basic example\">\n                       \n                        <div className='d-sm-flex d-block mt-3 mt-xl-0 mt-md-3 mt-sm-0 text-right-xss'>\n                        <p className=' mb-0'>\n                        {saleData && isSaleLive(saleData.startTime,saleData.endTime,saleData.isPresaleOpen)  ?\n                                \n                        <span className=\"badge badge_live\">                      \n                       \n                            <span className='stats_txt'>Sales Live</span>\n                        </span>:\n                        ( saleData && isUpcoming(saleData.startTime) ?\n                        <span className=\"badge badge_upcoming\">\n                      \n\n                        <span className='stats_txt'>Upcoming</span>\n                        </span>: \n                      \n                        \n                        <span className=\"badge badge_finish\">\n                   \n                            <span className='stats_txt'>Sales End</span>\n                        </span>\n                        )\n                        }\n                        </p>\n                </div>\n                    </div>\n                    \n                   \n                    <p className='text-right'>\n                        <span className=\"badge badge-green-rect mt-0 mr-2\">\n                        <span className='blk_txt'>Audit</span>\n                        </span>\n                        <span className=\"badge badge-kyc-rect mt-0\">\n                        <span className='blk_txt'>KYC</span>\n                        </span>\n                    {/* <span className=\"badge badge-yellow-fill mt-0\">\n                        <span className='blk_txt'>{saleData && saleData.symbol}</span>\n                        </span> */}\n                    </p>\n                </div>\n \n           \n                </div>\n      \n               \n                {/* <p className='yellow_txt_sm'>{saleData && (saleData.description).substring(0,130)}...</p> */}\n                <p className='text-white cardhead font_16 mb-1'>{saleData && saleData.name}</p>\n                {this.state.singletrending && this.props.user ? <span class=\"badge badge-kyc-rect mt-0 mb-2 badge_trend\"><span class=\"blk_txt\">#OnTop{this.state.singletrending?.position}</span></span> : <></>}\n\n                <p className='desc_grey_txt pb-0 mb-0'>1 {this.state.buyToken} = {saleData && saleData.presaleRate} {saleData && saleData.symbol}</p>\n                <p className=' text-gray mb-1 purple_head mt-2 font_13'>Softcap</p>\n                <p className='green_txt_big pb-0 mb-0'>\n                    \n                {saleData && (saleData.softCap / 10 ** 18).toFixed(2)} {this.state.buyToken}\n                    {/* {saleData && (saleData.hardCap/10**18).toFixed(2)} BNB */}\n                    </p>\n{saleData?.LaunchpadType ?\n          <>          \n            <p className=' purple_head d-flex justify-content-between mt-2 mb-2'>\n               <span className='desc_grey_txt'>Progress</span>\n               {/* <span className='orangetext'>Participants<b className='pl-2'>{saleData && saleData.participants}</b></span> */}\n\n                </p>\n            <ProgressBar now={saleData && parseInt(parseInt(saleData.earnedCap)/parseInt(saleData.hardCap) * 100)} className='yellow_bar'/>\n            <p className='white_txt_sm d-flex justify-content-between mt-1'>\n               <span className='desc_grey_txt'> {saleData && parseInt(parseInt(saleData.earnedCap)/parseInt(saleData.hardCap) * 100)} %</span>\n               <span className='desc_grey_txt'>{saleData && ((saleData.earnedCap)/10**18).toFixed(3)} / {(parseInt(saleData?.hardCap)/10**18).toFixed(2)} {this.state.buyToken}</span>\n                </p>\n                </> :  <>          \n            <p className=' purple_head d-flex justify-content-between mt-2 mb-2'>\n               <span className='desc_grey_txt'>Progress</span>\n               {/* <span className='orangetext'>Participants<b className='pl-2'>{saleData && saleData.participants}</b></span> */}\n\n                </p>\n            <ProgressBar now={saleData && parseInt(parseInt(saleData.earnedCap)/parseInt(saleData.softCap) * 100)} className='yellow_bar'/>\n            <p className='white_txt_sm d-flex justify-content-between mt-1'>\n               <span className='desc_grey_txt'> {saleData && parseInt(parseInt(saleData.earnedCap)/parseInt(saleData.softCap) * 100)} %</span>\n               <span className='desc_grey_txt'>{saleData && ((saleData.earnedCap)/10**18).toFixed(3)} / {(parseInt(saleData?.softCap)/10**18).toFixed(2)} {this.state.buyToken}</span>\n                </p>\n                </> }\n\n\n                \n\n\n                <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n               <span className='desc_grey_txt'>Total Users Participated:</span>\n               <span className='desc_grey_txt font_12'>{saleData && saleData?.participants}</span>\n                </p>\n\n{saleData && saleData?.isPancake ? \n<>\n                <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n               <span className='desc_grey_txt'>Pancake Rate:</span>\n               <span className='desc_grey_txt font_12'>{saleData && saleData?.pancakeRate}</span>\n                </p>\n\n                <p className='white_txt_sm d-flex justify-content-between mt-0'>\n               <span className='desc_grey_txt'>lockup Time :</span>\n\n\n               {/* {saleData && String(new Date(saleData?.lpUnlockon * 1000).toLocaleDateString(\"en-US\", options))} */}\n\n               <span className='desc_grey_txt font_12'>{saleData && (saleData?.lpUnlockon*1000)/(1000*60*60*24)} Days</span>\n              \n                </p>\n                </> : <></>}\n   \n   <hr className='hr_green mb-0'/>\n        \n                <div className='white_txt_sm d-flex justify-content-between mt-0 align-items-center webr_res_div'>\n                    <div>\n                    {  saleData && isUpcoming(saleData.startTime) ?\n                        <p class=\"mt-2 countup countbtn ml-sm-0 mb-2\">\n                        <span class=\"btn_timer\">\n                            <div className='countdown'>\n                            <span className='desc_grey_txt'>Sale Starts in</span> <br /> <Countdown date={Date.now() + (UpcomingDiffernce(saleData.startTime))} renderer={renderer} className=\"countdown_grey\" />\n                        </div> \n                                    </span>\n                        </p>: \n                        (saleData && isSaleLive(saleData.startTime,saleData.endTime,saleData.isPresaleOpen)  ?\n                        <p class=\"mt-2 countbtn mb-2\">\n                            <span class=\"btn_timer\">\n                                \n                                <span class=\"\">\n                                <div className='countdown countdown_grey_cen'>\n                           <span className='desc_grey_txt'>Sale Ends in</span> <br /> <Countdown date={Date.now() + Salediffernce(saleData.endTime)} renderer={renderer} className=\"countdown_grey\" />\n                        </div> \n                                    </span></span>\n                        </p>:\n                        <p className='countdown_grey mt-2 countdown_grey_cen'>\n                             <span className='desc_grey_txt'>The Sale Is Ended</span> <br /> \n                           \n                        </p>)\n                        }\n                        </div>\n                        <div className='pb_card_buy'>\n                          \n                              {/* {this.state.proxyOwner == localStorage.getItem(\"accountInfo\") ? \n                        <button onClick={()=> this.Deletesale()} className='btn_social mr-1'>\n                        <i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>\n                        </button> : <></>} */}\n                        {/* <button className='btn_social mr-1'>\n                        <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\n                        </button> */}\n                        <button className='btn_social mr-2' onClick={()=>this.handleheart()}>\n                        <i class={this.state.wishlist.includes(this.props.saleData.saleAddress) ? \"fa fa-heart\" : \"fa fa-heart-o\"} aria-hidden=\"true\" ></i>\n                        </button>\n                        <a href={`/launchpaddetail/${saleData && saleData?.saleAddress}`}>\n                        <button className=\"get-started-btn\"\n                            // onClick={async()=> await this.handleview()}\n                        >\n                            View Pool\n                        </button>\n                        </a>\n                        </div>\n                        </div>\n                </div>\n            </div>\n        </div>\n            {/* </a> */}\n         \n\n    </div>\n    \n      )\n    }\n\n}\n\n\nexport default Buycard","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/WhitelistModal.js",["1183","1184","1185","1186","1187","1188","1189","1190"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport { Modal, InputGroup,FormControl,ProgressBar } from 'react-bootstrap';\nimport { getAccount} from \"../hooks/useAccount\";\nimport { addWhitelistMembers } from \"../hooks/useAdmin\";\nimport toast, { Toaster } from 'react-hot-toast';\nimport { IsValidAddress } from '../hooks/useContract';\nimport { addwhitelistvalidation } from '../hooks/kycvalidation';\n\nclass WhitelistModal extends Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {   \n                   \n            whitelistModal: true,  \n            count:1,\n            inputList:[{ user: \"\", bnbvalue: \"\" }],\n            isPending: false,    \n            errors :[]  \n           \n        };\n    }\n\n\n    handleInputChange = async(e, index) => {\n        const { name, value } = e.target;\n        const list = [...this.state.inputList];\n           list[index][name] = value;\n           console.log(list, \"sdf\");\n           if(name == \"user\" && value.length == 42){\n               const valid = await IsValidAddress(value);\n               if(!valid){\n                toast.error(`Non Valid Address (${value}) !`,\n                {\n                    style: {\n                    minWidth: '700px',\n                    minHeight: '55px'\n                    }\n                });\n               }\n              }\n            };\n    \n    \n        handleRemoveClick = index => {\n            console.log(\"index\", index);\n            const list = [...this.state.inputList];\n            list.splice(index, 1);\n            this.setState ({ inputList: list });\n    \n          };\n\n        handleAddUserList = async() => {\n            this.setState({ isPending : true });\n            this.setState({errors : []})\n            // this.state.inputList.map(async(val , i)=>\n            for(var i =0 ; i< this.state.inputList.length ; i++)\n            {\n                var val = this.state.inputList[i]\n                let valid = await addwhitelistvalidation(val);\n                console.log(\"valid\" , valid);\n                if(!valid.isValid){\n                    this.setState({ errors: [...this.state.errors, valid.errors] })\n                }\n            }\n            if(this.state.errors.length == 0){\n                console.log(\"empty\" , this.state.errors.length);\n                await addWhitelistMembers(this.state.inputList,this.props.saleAddress,getAccount());\n                this.setState({ isPending : false });\n                this.props.onDismiss()\n            }\n            // console.log(\"valid \" ,typeof(valid.errors),Object.keys(valid),Object.values(valid), valid.errors.length);\n            // await addWhitelistMembers(this.st(ate.inputList,this.props.saleAddress,getAccount());\n            // this.setState({ isPending : false });\n            // this.props.onDismiss()\n        }\n         \n          // handle click event of the Add button\n           handleAddClick = () => {\n            this.setState ({ inputList: [...this.state.inputList, { user: \"\", bnbvalue: \"\" }] });\n        };\n   \n    render() {\n        \n  \n        const {whitelistModal} = this.state\n\n        \n      return (\n\n\n        <Modal className=\"wallet-modal\" show={whitelistModal} centered size=\"md\">\n        <Modal.Header className='pt-3 header_odal_head'>\n        <h3 className=\"sec-head \">Add Whitelist Users</h3>\n            <button type=\"button\" class=\"close\" onClick={() => this.props.onDismiss()}><span aria-hidden=\"true\">×</span><span class=\"sr-only\">Close</span></button>\n\n        </Modal.Header>\n        <Modal.Body className=\"select-wallet modal_body\">\n\n        {[...Array(this.state.count)].map((val,i)=>{\n                        return (\n                        <div>\n\n                        <div className=\"row form_row row_add_remove mb-2 px-3\">\n                        <div className=\"col-6 col-sm-5 px-1\">\n\n                        <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl name=\"user\" placeholder=\"Wallet Address\"\n                            onChange={e => this.handleInputChange(e, i)}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors[i]?.user}</span>\n                    </div>\n                      \n                        </div>\n                        <div className=\"col-6 col-sm-5  px-1\">\n\n                        <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl name=\"bnbvalue\" placeholder=\"Allocated BNB Value\"\n                            onChange={e => this.handleInputChange(e, i)}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors[i]?.bnbvalue}</span>\n                    </div>\n\n                     \n                        </div>\n                        {this.state.count > 1 && \n                        <div className=\"col-2 col-sm-1  px-1\">\n                            <button\n                            className=\"get-started-btn bnt_icon_new mb-2 mt-sm-2 mt-3\" onClick={() => {\n                                this.setState({ count: this.state.count - 1 })\n                                this.handleRemoveClick(i);\n                                }}><i className=\"fa fa-trash-alt\"></i></button>\n                        </div>}\n\n\n                        {this.state.count >= 1 && \n                        <div className=\"col-2 col-sm-1 px-1\">\n                        <button className=\"get-started-btn bnt_icon_new mb-2 mt-sm-2 mt-3 ml-1\" onClick={() => {\n                            this.setState({ count: this.state.count + 1 });\n                            this.handleAddClick();\n                            }}><i className=\"fa fa-user-plus\"></i></button>\n                        </div> \n                        }\n\n\n\n\n\n</div>\n\n</div>\n);\n})}\n\n\n<div className=\"text-center\">\n        <button className=\"get-started-btn mt-2\" onClick={this.handleAddUserList}>Submit</button>\n\n</div>\n\n        </Modal.Body>\n    </Modal>\n\n\n\n      )\n    }\n\n}\n\n\nexport default WhitelistModal","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/Editsettingmodal.js",["1191","1192","1193","1194","1195"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport { Modal, FormControl, InputGroup } from 'react-bootstrap';\nimport { settingvalidate } from '../../hooks/kycvalidation';\nimport { updatesettinghook } from '../../hooks/usebackend';\n\nimport proof from \"../../images/proof.webp\"\n\nclass Editsettingmodal extends Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {          \n            editsettingModal: true,\n            settingname : \"\",\n            settingvalue : \"\",\n            errors : {}\n           \n        };\n    }\n\n    componentDidMount(){\n        if(!this.state.settingname && !this.state.settingvalue){\n            this.setState({\"settingname\" : this.props.data.settingname});\n            this.setState({\"settingvalue\" : this.props.data.settingvalue})\n        }\n    }\n    handleedit = async()=>{\n        let payload = {\n            id : this.props.data?._id,\n            settingname : this?.state?.settingname,\n            settingvalue : this?.state?.settingvalue\n        }\n        let validate = await settingvalidate(payload);\n        if(validate?.isValid){\n            let result = await updatesettinghook(payload);\n            this.props.onDismiss();\n            this.props.getset()\n        }\n        else{\n            this.setState({\"errors\" : validate.errors})\n        }\n    }\n\n\n   render() {\n        \n  \n        const {editsettingModal} = this.state\n\n        \n      return (\n\n        \n\n        <Modal className=\"wallet-modal\" show={editsettingModal} centered size=\"md\">\n        <Modal.Header className='pt-3 header_odal_head'>\n        <h3 className=\"sec-head \">Edit Settings</h3>\n            <button type=\"button\" class=\"close\" onClick={() => this.props.onDismiss()}><span aria-hidden=\"true\">×</span><span class=\"sr-only\">Close</span></button>\n\n        </Modal.Header>\n        <Modal.Body className=\"select-wallet modal_body pt-0 pb-0 px-0\">\n\n        <div className=\"wallet-lists px-2\">\n                              \n        <div className='mod_pad_space pt-0'>\n        <div className='row'>\n                <div className='col-12 col-md-12 px-1 mb-3'>\n                        \n                        \n                        \n                       </div>\n                        <div className='col-12 col-md-12 px-1 mb-3'>\n                    <p className='input_desc_sm'>Setting Name</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"settingname\"  placeholder=\"Setting Name\"\n                                aria-describedby=\"basic-addon2\"\n                                value = {this.state.settingname}\n                                onChange ={(e)=>{\n                                    this.setState({\"settingname\" : e?.target?.value})\n                                }}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.settingvalue}</span>\n                    </div>                    \n                        </div>\n\n                        <div className='col-12 col-md-12 px-1 mb-3'>\n                    <p className='input_desc_sm'>Setting Value</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"hardcap\" value={this?.state?.settingvalue} placeholder=\"Setting Value\"\n                                aria-describedby=\"basic-addon2\"\n                                onChange={(e)=>{\n                                    this.setState({\"settingvalue\" : e?.target?.value})\n                                }}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.settingvalue}</span>\n                    </div>\n                        </div> \n                       \n          \n         \n                    <div className='col-12 col-md-12 px-1 text-center'>\n                        <button className=\"get-started-btn mt-2\" onClick={this.handleedit}>\n                           Edit\n                        </button>\n                        \n                        </div>\n                </div>\n\n            </div>\n    </div>\n        </Modal.Body>\n    </Modal>\n\n\n\n      )\n    }\n\n}\n\n\nexport default Editsettingmodal","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/ChangeStatusmodal.js",["1196","1197","1198","1199","1200","1201","1202"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport { Modal, InputGroup,FormControl,ProgressBar } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass ChangeStatusmodal extends Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {   \n                   \n            changestatueModal: true, \n            openstatus: \"public\" \n           \n        };\n    }\n   \n    render() {\n        \n  \n        const {changestatueModal, openstatus} = this.state\n\n        \n      return (\n\n\n        <Modal className=\"wallet-modal\" show={changestatueModal} centered size=\"md\">\n        <Modal.Header className='pt-3 header_odal_head'>\n        <h3 className=\"sec-head \">Change Status</h3>\n            <button type=\"button\" class=\"close\" onClick={() => this.props.onDismiss()}><span aria-hidden=\"true\">×</span><span class=\"sr-only\">Close</span></button>\n\n        </Modal.Header>\n        <Modal.Body className=\"select-wallet modal_body\">\n\n       <p className='wallet_address_text'>Change this pool to public</p>\n       <div className=\"custom-control custom-radio mb-2\">\n                    <input type=\"radio\" id=\"customRadio1new\" name=\"customRadioNew\" className=\"custom-control-input\" onChange={() => this.setState({ openstatus: \"public\"})}/>\n                    <label className=\"custom-control-label\" for=\"customRadio1new\">Public now</label>\n                    </div>   \n\n                    <div className=\"custom-control custom-radio\">\n                    <input type=\"radio\" id=\"customRadio2new\" name=\"customRadioNew\" className=\"custom-control-input\" onChange={() => this.setState({ openstatus: \"publictime\"})} />\n                    <label className=\"custom-control-label\" for=\"customRadio2new\">Public with specific time</label>\n                    </div>  \n{this.state.openstatus == \"public\"? \n<div className=\"text-center mt-4\">\n        <button className=\"get-started-btn mt-2\">Public Now</button>\n\n</div>:\n<div>\n<div className='mt-4'>\n                    <p className='input_desc_sm'>Public Sale Start time</p>\n                    <div className=\"inputs input-groups date_inoput_grps\">\n                        <InputGroup className=\"datepicker_input\">\n                            \n                        <DatePicker\n                         minDate={new Date()}\n                                                   \n                                                   showTimeSelect\n                                                   \n                                                   onChange={(date)=> this.setState({startDate: date})}\n                                                   dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                                 />\n                          \n                        </InputGroup>\n                        <InputGroup.Append className='cur_pointer'>\n                                <button variant=\"outline-secondary\" className=\"trans_cal_btn\">\n                                <i class=\"far fa-calendar-alt\"></i>\n                                </button>\n                            </InputGroup.Append>\n                    </div>\n                    <div className='note_desc mt-1 mb-0'>\n                    <p>Set the time that you want to open this pool to public</p>\n                    </div>\n                        </div>\n\n                        <div className=\"text-center\">\n        <button className=\"get-started-btn mt-2\">Save Settings</button>\n\n</div>\n</div>\n}\n\n\n        </Modal.Body>\n    </Modal>\n\n\n\n      )\n    }\n\n}\n\n\nexport default ChangeStatusmodal","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/RemoveWhitelistmodal.js",["1203","1204","1205","1206","1207","1208","1209","1210"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport { Modal, InputGroup,FormControl,ProgressBar } from 'react-bootstrap';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { addwhitelistvalidation } from '../hooks/kycvalidation';\nimport { getAccount } from '../hooks/useAccount';\nimport { addWhitelistMembers } from '../hooks/useAdmin';\nimport { IsValidAddress } from '../hooks/useContract';\n\n\nclass RemoveWhitelistmodal extends Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {   \n                   \n            removewhitelistModal: true,  \n            count:1,\n            inputList:[{ user: \"\", bnbvalue: \"0\" }],\n            isPending: false,    \n            errors :[]  \n           \n        };\n    }\n\n\n    handleInputChange = async(e, index) => {\n        const { name, value } = e.target;\n        const list = [...this.state.inputList];\n           list[index][name] = value;\n           console.log(list, \"sdf\");\n           if(name == \"user\" && value.length == 42){\n               const valid = await IsValidAddress(value);\n               if(!valid){\n                toast.error(`Non Valid Address (${value}) !`,\n                {\n                    style: {\n                    minWidth: '700px',\n                    minHeight: '55px'\n                    }\n                });\n               }\n              }\n            };\n    \n    \n        handleRemoveClick = index => {\n            console.log(\"index\", index);\n            const list = [...this.state.inputList];\n            list.splice(index, 1);\n            this.setState ({ inputList: list });\n    \n          };\n\n        handleAddUserList = async() => {\n            this.setState({ isPending : true });\n            this.setState({errors : []})\n            // this.state.inputList.map(async(val , i)=>\n            for(var i =0 ; i< this.state.inputList.length ; i++)\n            {\n                var val = this.state.inputList[i]\n                let valid = await addwhitelistvalidation(val);\n                console.log(\"valid\" , valid);\n                if(!valid.isValid){\n                    this.setState({ errors: [...this.state.errors, valid.errors] })\n                }\n            }\n            if(this.state.errors.length == 0){\n                console.log(\"empty\" , this.state.errors.length , this.state.inputList);\n                await addWhitelistMembers(this.state.inputList,this.props.saleAddress,getAccount());\n                this.setState({ isPending : false });\n                this.props.onDismiss()\n            }\n            // console.log(\"valid \" ,typeof(valid.errors),Object.keys(valid),Object.values(valid), valid.errors.length);\n            // await addWhitelistMembers(this.st(ate.inputList,this.props.saleAddress,getAccount());\n            // this.setState({ isPending : false });\n            // this.props.onDismiss()\n        }\n         \n          // handle click event of the Add button\n           handleAddClick = () => {\n            this.setState ({ inputList: [...this.state.inputList, { user: \"\", bnbvalue: \"\" }] });\n        };\n   \n    render() {\n        \n  \n        const {removewhitelistModal} = this.state\n\n        \n      return (\n\n\n        <Modal className=\"wallet-modal\" show={removewhitelistModal} centered size=\"md\">\n        <Modal.Header className='pt-3 header_odal_head'>\n        <h3 className=\"sec-head \">Remove Whitelist Users</h3>\n            <button type=\"button\" class=\"close\" onClick={() => this.props.onDismiss()}><span aria-hidden=\"true\">×</span><span class=\"sr-only\">Close</span></button>\n\n        </Modal.Header>\n        <Modal.Body className=\"select-wallet modal_body\">\n\n        {/* {[...Array(this.state.count)].map((val,index)=>{\n                        return (\n                        <div>\n\n                        <div className=\"row form_row row_add_remove mb-2 px-3\">\n                        <div className=\"col-6 col-sm-5 px-1\">\n\n                        <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl name=\"user\" placeholder=\"Wallet Address\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                      \n                        </div>\n                        <div className=\"col-6 col-sm-5  px-1\">\n\n                        <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl name=\"bnbvalue\" placeholder=\"Allocated BNB Value\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n\n                     \n                        </div>\n                     \n                        <div className=\"col-2 col-sm-1  px-1\">\n                            <button\n                            className=\"get-started-btn bnt_icon_new mb-2 mt-sm-2 mt-3\" onClick={() => this.setState({ count: this.state.count - 1 })}><i className=\"fa fa-trash-alt\"></i></button>\n                        </div>\n\n                       \n\n\n\n\n\n</div>\n\n</div>\n);\n})} */}\n\n{[...Array(this.state.count)].map((val,i)=>{\n                        return (\n                        <div>\n\n                        <div className=\"row form_row row_add_remove mb-2 px-3\">\n                        <div className=\"col-6 col-sm-5 px-1\">\n\n                        <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl name=\"user\" placeholder=\"Wallet Address\"\n                            onChange={e => this.handleInputChange(e, i)}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors[i]?.user}</span>\n                    </div>\n                      \n                        </div>\n                        <div className=\"col-6 col-sm-5  px-1\">\n\n                        {/* <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl name=\"bnbvalue\" placeholder=\"Allocated BNB Value\"\n                            onChange={e => this.handleInputChange(e, i)}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors[i]?.bnbvalue}</span>\n                    </div> */}\n\n                     \n                        </div>\n                        {this.state.count > 1 && \n                        <div className=\"col-2 col-sm-1  px-1\">\n                            <button\n                            className=\"get-started-btn bnt_icon_new mb-2 mt-sm-2 mt-3\" onClick={() => {\n                                this.setState({ count: this.state.count - 1 })\n                                this.handleRemoveClick(i);\n                                }}><i className=\"fa fa-trash-alt\"></i></button>\n                        </div>}\n\n\n                        {this.state.count >= 1 && \n                        <div className=\"col-2 col-sm-1 px-1\">\n                        <button className=\"get-started-btn bnt_icon_new mb-2 mt-sm-2 mt-3 ml-1\" onClick={() => {\n                            this.setState({ count: this.state.count + 1 });\n                            this.handleAddClick();\n                            }}><i className=\"fa fa-user-plus\"></i></button>\n                        </div> \n                        }\n\n\n\n\n\n</div>\n\n</div>\n);\n})}\n\n\n<div className=\"text-center\">\n        <button className=\"get-started-btn mt-2\" onClick={this.handleAddUserList}>Submit</button>\n\n</div>\n\n        </Modal.Body>\n    </Modal>\n\n\n\n      )\n    }\n\n}\n\n\nexport default RemoveWhitelistmodal","/Users/sudhanshusrivastava/Downloads/launchpad/src/hooks/useAccount.js",["1211","1212","1213","1214","1215","1216","1217"],"import { useWeb3 } from \"./useWeb3\";\nimport { API_URL, CHAINS } from \"../config/env\";\nimport axios from \"axios\";\n\n\nexport const getAccount = () => {\n    return localStorage.getItem(\"accountInfo\")? localStorage.getItem(\"accountInfo\"): null;\n}\n\nexport const getAllocationInfo = (actualBalance,userBalance,vestingInterval,vestingPercentage,initalClaimed) => {\n    console.log(\"Vesting Balance : \",actualBalance,vestingInterval,vestingPercentage,initalClaimed)\n   \n    let vestingCount = parseInt(100 / (parseInt(vestingPercentage)/100));\n    const vestingBalance = parseInt(actualBalance) - (parseInt(actualBalance * vestingPercentage/10000)*vestingCount)\n    console.log(\"Vesting Balance counyt :\",vestingCount,vestingBalance)\n    if(initalClaimed<=0)\n        initalClaimed = Date.now()/1000;\n    \n    let allocations = [];   \n    for(var i=0;i<vestingCount; i++){\n        const data = {\n            no: i+1,\n            allocation: parseInt(actualBalance * vestingPercentage/10000),\n            unlockon: (i==0) ? initalClaimed : parseInt(initalClaimed)+ (vestingInterval*(i)),\n            isClaimed: (i==0) ? (initalClaimed*1000 == Date.now()) : ((Date.now() >= parseInt(parseInt(initalClaimed)+ (vestingInterval*(i)))*1000)),\n            isDid: (i==0) ? (parseInt(actualBalance * vestingPercentage/10000)  <= (actualBalance - userBalance)) : (parseInt(actualBalance * vestingPercentage/10000)*(i+1)  <= (actualBalance - userBalance))\n        };\n      //  console.log(\"Alocation data : \",data.isDid,(parseInt(actualBalance * vestingPercentage/10000)*i , (actualBalance - userBalance)))\n        allocations.push(data);\n    }\n    if(vestingBalance > 0){\n        const data = {\n            no: (allocations.length)+1,\n            allocation: vestingBalance,\n            unlockon: initalClaimed+ (vestingInterval*(allocations.length)+1),\n            isClaimed: (Date.now() >= parseInt(initalClaimed+ (vestingInterval*(allocations.length)+1))*1000),\n            isDid: (parseInt(actualBalance * vestingPercentage/10000)*(allocations.length)+1)  <= (actualBalance - userBalance)\n        };\n        allocations.push(data);\n    }\n\n    console.log(\"Allocation : \",allocations)\n    return allocations;\n}\n\nexport const setChainId = (i) =>{\n    localStorage.setItem(\"CHAIN\",i);\n    window.location.reload();\n}\n\nexport const getChainId = ()=>{\n    const index = localStorage.getItem(\"CHAIN\");\n    return index!=null ? index : \"0\";\n}\n\n\n\n\n\n// export const Userdollar = async(userbinaryIncome) => {\n   \n//     // const userbinaryIncome =  await   axios.get(`${API_URL}/api/user/binaryIncome/${Userid}`)\n  \n//     let usdvalue = 0;\n//       if(Number(userbinaryIncome) > 0){\n//              await axios.get(\"https://min-api.cryptocompare.com/data/price?fsym=BNB&tsyms=USD\")\n//           .then (data => {\n//               usdvalue = Number(data.data.USD) * Number(userbinaryIncome?.data?.BinaryIncome);\n              \n//           })\n          \n//     }\n//     return usdvalue;\n//  }\n\n\nexport const Userdollar = async(userbinaryIncome) => {\n   console.log(\"userbinaryIncome\" , userbinaryIncome);\n    // const userbinaryIncome =  await   axios.get(`${API_URL}/api/user/binaryIncome/${Userid}`)\n  \n    let usdvalue = 0;\n    //   if(Number(userbinaryIncome) > 0){\n             await axios.get(\"https://min-api.cryptocompare.com/data/price?fsym=BNB&tsyms=USD\")\n          .then (data => {console.log(\"dollar data\" , data);\n              usdvalue = parseFloat(data.data.USD) * parseFloat(userbinaryIncome);\n              \n          })\n          \n    // }\n    return usdvalue;\n }\n\n\n\n","/Users/sudhanshusrivastava/Downloads/launchpad/src/hooks/useContract.js",["1218","1219","1220","1221","1222","1223","1224","1225","1226","1227","1228","1229","1230","1231","1232","1233","1234","1235","1236","1237","1238","1239"],"import { ERC20_ABI, ERC20_ADDRESS, DECIMAL } from \"../config/erc20\";\nimport { PROXY_SALE,PROXY_SALE_ABI,PROXY } from '../config/proxy'\nimport { CHAINS, FUND_RECEIVER, TOKEN_FEE, WBNB_Address, ZEROTH_ADDRESS } from \"../config/env\";\nimport { SALE_ABI } from '../config/presale'\nimport toast, { Toaster } from 'react-hot-toast';\nimport { CURRENT_CHAIN_ID, CURRENT_RPC_URL, useWeb3 } from \"./useWeb3\";\nimport { DEPLOYMENT_FEE, STANDARD_TOKEN_ABI,  STANDARD_TOKEN_BYTECODE } from \"../config/standard\";\nimport { getAccount } from \"./useAccount\";\nimport Web3 from \"web3\"\nimport { LIQUIDITY_TOKEN_ABI, LIQUIDITY_TOKEN_BYTECODE, LIQUIDITY_TOKEN_DEPLOYMENT_FEE } from \"../config/liquiditytoken\";\nimport { iconTheme, position, style } from \"./useToast\";\nimport { LOCK_ABI, LOCK_ADDRESS } from \"../config/lock\";\nimport { userlaunchpadhook } from \"./usebackend\";\n\n\n   \nexport const UseERC20 = async (VALUE) =>{\n    const web3 = await useWeb3();\n    const contract = new web3.eth.Contract(ERC20_ABI, VALUE);\n    return contract;                \n}\n\nexport const UseSale = async (VALUE) =>{\n   \n    const web3 = await useWeb3();\n    const contract = new web3.eth.Contract(SALE_ABI, VALUE);\n    return contract;                \n}\n\nexport const getProxyAddress = ()=>{\n    const CHAIN_ID = CURRENT_CHAIN_ID();\n    return PROXY[CHAIN_ID];\n}\n\nexport const checkChainId = (chainId) =>{\n    const CHAIN_ID = CURRENT_CHAIN_ID();\n    if(parseInt(chainId) != parseInt(CHAIN_ID)){\n        toast.error(`Connected to Wrong Network !`,\n            {\n                style: {\n                minWidth: '300px',\n                minHeight: '55px'\n                }\n            });\n    }\n    return true;\n}\n\nexport const UseProxySale = async () =>{\n     const web3 = await useWeb3();\n     const chainId = await web3.eth.getChainId();\n     checkChainId(chainId);\n     const proxysale = getProxyAddress();\n     \n     const contract = new web3.eth.Contract(PROXY_SALE_ABI, proxysale);\n     console.log(\"proxysale\",contract);\n    return contract;   \n}\n\nexport const getProxyOwner = async () => {\n    const proxy = await UseProxySale();\n    const owner = await proxy.methods.owner().call();\n    return owner;\n}\n\nexport const getSalecreationFee = async () => {\n    const proxy = await UseProxySale();\n   \n    const Fee = await proxy.methods.depolymentFee().call();\n    return Fee;\n}\n\n\nexport const UseTokenInfo = async (TOKEN) => {\n    console.log(\"token\" , TOKEN);\n    const token = await UseERC20(TOKEN);\n    const name= await token.methods.name().call();console.log(\"name\" , name);\n    const symbol= await token.methods.symbol().call();\n    const decimals= await token.methods.decimals().call();\n    const data = {\n        name: name,\n        symbol: symbol,\n        decimals: decimals\n    }\n    console.log(\"data\" , data);\n    return data;\n}\n\nexport const IsValidAddress = async(ADDRESS) =>{\n    const web3 = await useWeb3();\n    const value = await web3.utils.isAddress(ADDRESS);\n    return value;\n}\n\nexport const getFullBalance = (value) =>{\n    const balance = parseFloat(value) / 10 ** parseFloat(DECIMAL)\n    return balance.toFixed(2)\n}\n\nexport const getWholeNumber = (value) => {\n    const balance = (parseFloat(value) * 10 ** parseFloat(DECIMAL))\n    return toFixedNumber(balance).toString()\n}\n\nexport const isFloat = (x) => {\n    if(!!(x % 1)){\n        toast.error(`Decimal Values are not accepted !`,\n            {\n                style: {\n                minWidth: '300px',\n                minHeight: '55px'\n                }\n            });\n    }\n    return !!(x % 1);\n}\n\nexport const createPresale = async(token,values,setters,details,account) =>{\n    console.log(\"createsale\");\n    await InitiatePresale(token,values,setters,details,account);\n    // console.log(\"token[0] in create presale\",token[0]);\n    const sale = await getSaleAddress(token[0]);\n    // console.log(\"sale in createpresale\",sale);\n\n    let wallet = getAccount();\n    wallet = wallet.toString();\n    wallet = wallet.toLowerCase();\n    console.log(\"wallet\" , wallet);\n    let payload = {\n        walletaddress : wallet,\n        saleaddress : sale,\n        whitelist : setters[3]\n    }\n    let createlaunchpad = await userlaunchpadhook(payload);\n    console.log(\"create\" , createlaunchpad);\n    return sale;  \n}\n\nexport const InitiatePresale = async(token,values,setters,details,account) =>{\n   \n    const proxyContract = await UseProxySale();\n    const deploymentFee = await proxyContract.methods.getDeploymentFee().call();\n    const data =  proxyContract.methods.createPresale(token,values,setters,details).send({ from: account,value:deploymentFee})\n    console.log(\"data in initiate presale\",data);\n    await toast.promise(data, {\n        loading: 'Creating New Presale ...',\n        success: 'Presale Created Successfully',\n        error: (err) => `Error : ${err.toString()}`,\n    }, {\n        position:position.position,\n    style:style,\n    iconTheme: iconTheme\n    }\n    );\n}\n\n\nexport const DeletePresale = async (saleAddress,account) => {\n   \n    const proxyContract = await UseProxySale();\n    const data = proxyContract.methods.deleteSalePresale(saleAddress).send({ from: account})\n    await toast.promise(data, {\n        loading: 'Deleting the Sale...',\n        success: 'Sale Deleted Successfully',\n        error: 'Error ! When Delete sale',\n    }, {\n        position:position.position,\n    style:style,\n    iconTheme: iconTheme\n    });\n    await sleep(1000);\n    window.location.reload();\n}\n\nexport const getSaleAddress = async (tokenAddress)=>{\n    // console.log(\"token address inside get sale address\",tokenAddress);\n      const proxyContract = await UseProxySale();\n    const sale = await proxyContract.methods.getSale(tokenAddress).call()\n    // console.log(\"sale in get sale address\",sale);\n    return sale;\n}\n\nexport const depositTokens = async (tokenAddress,saleAddress,value,account) => {\n console.log(\"value\",value);  \n    const erc20 = await UseERC20(tokenAddress)\n    const data = erc20.methods.transfer(saleAddress,value).send({ from: account})\n    await toast.promise(data, {\n        loading: 'Depositing Tokens ...',\n        success: 'Tokens Deposited Successfully',\n        error: 'Error ! When Depositing Tokens',\n    }, {\n        position:position.position,\n        style:style,\n        iconTheme: iconTheme\n    });\n    const balance = await erc20.methods.balanceOf(saleAddress).call();\n    if(balance >= parseInt(value)){\n        return true;\n    }else{\n        return false;\n    }\n}\n\nexport const checkbalnceTokens = async (tokenAddress,saleAddress) => {\n   \n       const erc20 = await UseERC20(tokenAddress)\n       const balance = await erc20.methods.balanceOf(saleAddress).call();\n       return balance;\n}\n\n\n\nexport const getSaleInfo = async(ADDRESS)=>{\n    const saleContract = await UseSale(ADDRESS);\n    const tokenAddress = await saleContract.methods.tokenAddress().call();\n    const isWithoutToken = await saleContract.methods.isWithoutToken().call();\n    let name,symbol,decimals = \"\";\n    if(isWithoutToken){\n        name = await saleContract.methods.tokenName().call();\n        symbol = await saleContract.methods.tokenSymbol().call();\n        decimals = await saleContract.methods.tokenDecimals().call();\n    }else{\n        const tokenContract = await UseERC20(tokenAddress);\n         name = await tokenContract.methods.name().call();\n         symbol = await tokenContract.methods.symbol().call();\n         decimals = await tokenContract.methods.decimals().call();\n    }\n    const description = await saleContract.methods.description().call();\n    const logo = await saleContract.methods.logo().call();\n    const start = await saleContract.methods.startTime().call();\n    const end = await saleContract.methods.endTime().call();\n    const islive = Date.now() >= start && Date.now <= end;\n    const earnedCap = await saleContract.methods.earnedCap().call();\n    const participants = await saleContract.methods.participants().call();\n    const website = await saleContract.methods.social(0).call();\n    const twitter = await saleContract.methods.social(1).call();\n    const telegram = await saleContract.methods.social(2).call();\n    const githup = await saleContract.methods.social(5).call();\n    const instagram = await saleContract.methods.social(6).call();\n    const discord = await saleContract.methods.social(7).call();\n    const reddit = await saleContract.methods.social(8).call();\n    const youtube = await saleContract.methods.social(9).call();\n    const isPancake = await saleContract.methods.isautoAdd().call();\n    const isVested = await saleContract.methods.isVested().call();\n    const vestingInterval = await saleContract.methods.vestingInterval().call();\n    const vestingPercent = await saleContract.methods.vestingPercent().call();\n    const hardCap = await saleContract.methods.hardCap().call();\n    const softCap = await saleContract.methods.softCap().call();\n    const tokenRatePerEth = await saleContract.methods.tokenRatePerEth().call();\n    const minEthLimit = await saleContract.methods.minEthLimit().call();\n    const maxEthLimit = await saleContract.methods.maxEthLimit().call();\n    const ownerAddress = await saleContract.methods.owner().call();\n    const data = {\n        name: name,\n        symbol: symbol,\n        decimals: decimals,\n        tokenAddress: tokenAddress,\n        logo: logo,\n        isWithoutToken: isWithoutToken,\n        description: description,\n        start: start,\n        end: end,\n        islive: islive,\n        earnedCap: earnedCap,\n        participants: participants,\n        website: website,\n        twitter: twitter,\n        telegram: telegram,\n        isPancake: isPancake,\n        isVested: isVested,\n        vestingInterval:vestingInterval,\n        vestingPercent: vestingPercent,\n        hardCap: hardCap,\n        softCap: softCap,\n        tokenRatePerEth: tokenRatePerEth,\n        minEthLimit: minEthLimit,\n        maxEthLimit: maxEthLimit,\n        owner: ownerAddress,\n        githup:githup,\n        instagram:instagram,\n        discord:discord,\n        reddit:reddit,\n        youtube:youtube ,\n\n    }\nconsole.log(\"owner>>>\",data.owner);\n    return data;\n}\n\nexport const GetSalePerAccount = async (account,saleAddress) => {\n    // console.log(\"User data \" ,account )\n    // const web3 = await useWeb3();\n    const saleContract = await UseSale(saleAddress);\n    const userData = await saleContract.methods.getUserInfo(account).call();\n\n//     const tokenAddress = await saleContract.methods.tokenAddress().call();\n//     const erc20 = await UseERC20(tokenAddress);\n//     const bnbBalance = await web3.eth.getBalance(account);\n//    const userTokenBalance = await erc20.methods.balanceOf(account).call();\n//     console.log(\"Token address : \",tokenAddress)\n//     const userInvested = await saleContract.methods.getUserInvestments(account).call();\n//     const userClaimbale = await saleContract.methods.getUserClaimbale(account).call();\n//     const getUnsoldTokens = await saleContract.methods.getUnsoldTokensBalance().call();\n//     const userWhitelistedAmount = await saleContract.methods.whitelistedAddresses(tokenAddress,account).call();\n//     const userData = {\n//         bnbBalance: bnbBalance,\n//         userInvested: userInvested,\n//         userClaimbale: userClaimbale,\n//         userWhitelistedAmount: userWhitelistedAmount,\n//         userTokenBalance: userTokenBalance,\n//         unSoldTokens: getUnsoldTokens\n//     }\n//     console.log(\"User data \" ,userData )\n    return userData;\n}\n\nexport const getSaleInfoCard = async (saleAddress) => {\n    \n    const saleContract = await UseSale(saleAddress);\n     const data = await saleContract.methods.getSaleInfo().call();\n     console.log(\"new\",data);\n    \n    return data;\n\n}\n\n\nexport const approveContract = async(contract, account,CONTRACT_ADDRESS)=>{\n    await contract.methods.approve(CONTRACT_ADDRESS,\"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: account})\n}\n\nexport const  sleep = (ms) => \n{\n    new Promise(resolve => setTimeout(resolve, ms))\n}\n\nexport const Usestandardtoken = async (VALUE) =>{\n    const web3 = await useWeb3();\n    const contract = new web3.eth.Contract(STANDARD_TOKEN_ABI, VALUE);\n    return contract;                \n  }\n\nexport const CreateStandardToken = async(argument)=>{\n    const web3 = await useWeb3();\n    const account = getAccount();\n    const contract = await Usestandardtoken(CHAINS[localStorage.getItem(\"CHAIN\")].STANDARD_TOKEN_ADDRESS);\n    console.log(\"contract\" , contract.methods , account , web3);\n    // const fundreceiver = await contract.methods.fundReciever().call();\n    // argument.push(fundreceiver);\n    \n    const balance = await web3.eth.getBalance(account)\n    // argument.push(balance > 0.01)\n    console.log(\"argument\" , argument , balance > 0.01);\n    var fee = await contract.methods._depolymentFee().call();\n    var hash = \"\";\n    let createpresale =  contract.methods.createPresaleToken( argument[0] , argument[1] , argument[2] ,\n                            argument[3] ).send({from : account , value:fee.toString()}) .on('transactionHash', async(tx) => {\n                                // localStorage.setItem(\"HASH\" , JSON.stringify(tx))  , FUND_RECEIVER  , (balance > 0.01)\n                            })\n\n    await toast.promise(createpresale, {\n        loading: 'Creating New Token ...',\n        success: 'Token Created Successfully',\n        error: 'Try Again',\n    }, { position:position.position,\n    style:style,\n    iconTheme: iconTheme,\n    }\n    );\n    await sleep(1000);\n    console.log(\"createpresale\" , createpresale);\n    let length = await contract.methods.tokenLength().call();\n    let presaledata = await contract.methods._tokeninfo(length-1).call();\n    console.log(\"presaledata\" , presaledata , length);\n    sessionStorage.setItem(\"TKNDATA\" , JSON.stringify(presaledata));\n    // localStorage.setItem(\"HASH\" , JSON.stringify(createpresale))\n    return createpresale;\n}\n\n\nexport const gettokendata = async(address) => {\n    const contract = await Usestandardtoken(CHAINS[localStorage.getItem(\"CHAIN\")].STANDARD_TOKEN_ADDRESS);\n    let tokendata =  contract.methods._presale(address).call();\n    return tokendata;\n}\n\nexport const toFixedNumber = (x)=> {\n    if (Math.abs(x) < 1.0) {\n        var e = parseInt(x.toString().split('e-')[1]);\n        if (e) {\n            x *= Math.pow(10, e - 1);\n            x = '0.' + (new Array(e)).join('0') + x.toString().substring(2);\n        }\n    } else {\n        var e = parseInt(x.toString().split('+')[1]);\n        if (e > 20) {\n            e -= 20;\n            x /= Math.pow(10, e);\n            x += (new Array(e + 1)).join('0');\n        }\n    }\n    return x;\n}\n\n\nexport const Useliquiditytoken = async (VALUE) =>{\n    const web3 = await useWeb3();\n    const contract = new web3.eth.Contract(LIQUIDITY_TOKEN_ABI, VALUE);\n    return contract;                \n  }\n\n  const getRouter = async()=>{\n    let chain = localStorage.getItem(\"CHAIN\");\n    let router = CHAINS[chain].ROUTER;\n    console.log(\"router\" , router);\n    return router\n  }\n\n  export const Getbalance = async()=>{\n    const web3 = await useWeb3();\n    const account =  getAccount();\n    console.log(\"amount\" , account);\n    \n    if(account){\n        const balance = await web3.eth.getBalance(account);\n        return balance/10**18;\n    }\n    else{\n        return null;\n    }\n    \n  }\n\nexport const CreateLiquidityToken = async(argument)=>{\n   try{const web3 = await useWeb3();\n    const account = getAccount();\n    const contract = await Useliquiditytoken(CHAINS[localStorage.getItem(\"CHAIN\")].LIQUIDITY_TOKEN_ADDRESS);\n    console.log(\"contract\" , contract.methods , account , web3);\n    // const fundreceiver = await contract.methods.fundReciever().call();\n    // argument.push(fundreceiver);\n    \n    // const balance = await web3.eth.getBalance(account)\n    // argument.push(balance > 0.01)\n    console.log(\"argument\" , argument);\n    var fee = await contract.methods.fee().call();\n    var deployfee = (fee/10**18).toString()\n    const router = await getRouter();\n    console.log(\"deploy fee\" , fee);\n    // await new web3.eth.Contract(LIQUIDITY_TOKEN_ABI)\n    //             .deploy({ data: LIQUIDITY_TOKEN_BYTECODE, arguments: argument })\n    //             .send({ from: account, value:deployfee })\n    //             .then(async(newContractInstance)=>{\n    //                 console.log(\"newContractInstance\" , newContractInstance);\n    //                 return newContractInstance;\n    //             })\n    let createpresale =  contract.methods.createPresaleToken( argument[0] , argument[1] , argument[2] ,\n        argument[3] , argument[4] , argument[5] , argument[6] , argument[7] ,router).send({from : account , value:fee}) .on('transactionHash', async(tx) => {\n            // localStorage.setItem(\"HASH\" , JSON.stringify(tx))\n        })\n\n    await toast.promise(createpresale, {\n    loading: 'Creating Liquidity Token...',\n    success: 'Liquidity Token Created Successfully',\n    error: 'Try Again',\n    }, { position:position.position,\n    style:style,\n    iconTheme: iconTheme,\n    }\n    );\n    await sleep(1000);\n    console.log(\"createpresale\" , createpresale);\n    let length = await contract.methods.tokenLength().call();\n    let presaledata = await contract.methods._tokeninfo(length-1).call();\n    console.log(\"presaledata\" , presaledata , length);\n    sessionStorage.setItem(\"TKNDATA\" , JSON.stringify(presaledata));\n    // localStorage.setItem(\"HASH\" , JSON.stringify(createpresale))\n    return createpresale;\n}\ncatch(e){\n    console.log(\"error\" , e);\n}\n}\n\n\n\nexport const Checkaddress = async(address) => {\n    const web3 = await useWeb3();\n    const account = getAccount();\n    \n    let errors = {}\n    const data = web3.utils.isAddress(address)\n    if(data){console.log(\"checkaddress\")\n        let tokeninfo = await UseTokenInfo(address);\n        console.log(\"tokeninfo\" , tokeninfo);\n        const contract = new web3.eth.Contract(ERC20_ABI, address);\n        const allowance = await contract.methods.allowance(account , CHAINS[localStorage.getItem(\"CHAIN\")].LOCK_ADDRESS).call();\n        const approvebutton = allowance > 0 ? true : false\n        console.log(\"checkaddress\" , tokeninfo);\n        return {\n            isValid : true,\n            tokeninfo : tokeninfo,\n            allowance : approvebutton\n        }\n    }\n    else{\n        errors.tokenaddress = \"Invalid address !\"\n        return {\n            isValid : false,\n            errors : errors\n        };\n    }\n}\n\nexport const Checklaunchpadaddress = async(address) => {\n    const web3 = await useWeb3();\n    const account = getAccount();\n    \n    let errors = {}\n    const data = web3.utils.isAddress(address)\n    if(data){console.log(\"checkaddress\")\n        let tokeninfo = await UseTokenInfo(address);\n        console.log(\"tokeninfo\" , tokeninfo);\n        const contract = new web3.eth.Contract(ERC20_ABI, address);\n        const allowance = await contract.methods.allowance(account , CHAINS[localStorage.getItem(\"CHAIN\")].LOCK_ADDRESS).call();\n        const approvebutton = allowance > 0 ? true : false\n        console.log(\"checkaddress\" , tokeninfo);\n        return {\n            isValid : true,\n            tokeninfo : tokeninfo,\n            allowance : approvebutton\n        }\n    }\n    else{\n        errors.tokenaddress = \"Invalid address !\"\n        return {\n            isValid : false,\n            errors : errors\n        };\n    }\n}\n\nexport const Gettokenbalance = async(address) => {\n    const web3 = await useWeb3();\n    const account = getAccount();\n    console.log(\"account\" , account);\n    const contract = new web3.eth.Contract(ERC20_ABI, address);\n    const tokenbalance = await contract.methods.balanceOf(account).call();\n    console.log(\"account\" , tokenbalance);\n    return tokenbalance;\n}\n\nexport const Approvetoken = async(address , amount)=>{\n    console.log(\"address\" , address , amount);\n    const web3 = await useWeb3();\n    const account = getAccount();\n    const contract = new web3.eth.Contract(ERC20_ABI, address);\n    const approve =  contract.methods.approve(CHAINS[localStorage.getItem(\"CHAIN\")].LOCK_ADDRESS , \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({from : account})\n    await toast.promise(approve, {\n        loading: 'Approving...',\n        success: 'Approved Successfully',\n        error: 'Try Again',\n        }, { position:position.position,\n        style:style,\n        iconTheme: iconTheme,\n        }\n        );\n        await sleep(1000)\n    return true;\n}\n\nexport const Uselockcontract = async (VALUE) =>{\n    const web3 = await useWeb3();\n    const contract = new web3.eth.Contract(LOCK_ABI, CHAINS[localStorage.getItem(\"CHAIN\")].LOCK_ADDRESS);\n    return contract;                \n}\n\nexport const Createlock = async(data , decimal) => {\n    const account = getAccount();\n    const contract = await Uselockcontract();\n    const amount = (toFixedNumber(data.amount * 10**decimal)).toString();\n    const locktime = Math.round(((new Date(data.locktime).getTime())-Date.now())/1000);\n    const toaddress = data.anotherowneraddress ? data.anotherowneraddress : account;\n    const vestinginfo = data.vesting ? [data.cycle , data.cyclepercent]   : []\n    console.log(\"contractetail\" , data.tokenaddress, amount , locktime );\n    console.log(\"datas\" , data.tokenaddress, amount , locktime , toaddress , data.vesting , vestinginfo);\n\n    const web3 = await useWeb3();\n    const lpcontract = new web3.eth.Contract(ERC20_ABI, data.tokenaddress);\n    console.log(\"lpcontract\" , lpcontract);\n    let islptoken = false;\n    try{\n        let istoken = await lpcontract.methods.token0().call();\n        console.log(\"istoken\" , istoken);\n         islptoken = (istoken.toUpperCase() == ZEROTH_ADDRESS.toUpperCase()) ? true : false;\n    }\n    catch(e){\n        islptoken = true\n    }\n    // console.log(\"istoken\" , istoken);\n    // let islptoken = (istoken.toUpperCase() == ZEROTH_ADDRESS.toUpperCase()) ? true : false;\n    const tokenlock =   contract.methods.deposit(data.tokenaddress, amount , locktime , toaddress , data.vesting , vestinginfo , islptoken).send({from : account });\n    await toast.promise(tokenlock , {\n        loading: 'Creating Lock...',\n        success: 'Lock Created Successfully',\n        error: 'Try Again',\n        }, { position:position.position,\n        style:style,\n        iconTheme: iconTheme,\n        }\n        );\n    await sleep(1000);\n    let tokeninfo = await UseTokenInfo(data.tokenaddress);\n    let lockerid = await contract.methods.LpLocker(data.tokenaddress).call();\n    let lockerinfo = await contract.methods.lockers(lockerid).call();\n    return {\n        tokeninfo : tokeninfo,\n        lockerinfo : lockerinfo,\n        tokenaddress : data.tokenaddress,\n        owner : toaddress\n    }\n}\n\nexport const Checkowneraddress = async(data) =>{\n    const web3 = await useWeb3();\n    const isaddress = web3.utils.isAddress(data)\n    return isaddress;\n}\n\nexport const Getmytokenlock = async(cards,start,end , user) => {\n    const account = getAccount();\n    const contract = await Uselockcontract();\n    console.log(\"contract\" , contract , account);\n    const userlocker = await contract.methods.getuserperlocker(account).call();\n    return userlocker;\n}\n\nexport const ViewMylock = async(data) => {\n    const account = getAccount();\n    const contract = await Uselockcontract();\n    const view = await contract.methods.users(account , data).call();\n    return view;\n}\n\nexport const Transferlockownership = async(data) => {\n    const account = getAccount();\n    const contract = await Uselockcontract();\n    const transferowner =  contract.methods.transferLockerOwner(data.lpaddress , account , data.newowneraddress).send({from : account});\n    await toast.promise(transferowner , {\n        loading: 'Changing Lock Ownershio...',\n        success: 'ownership Changed Successfully',\n        error: 'Try Again',\n        }, { position:position.position,\n        style:style,\n        iconTheme: iconTheme,\n        }\n        );\n    await sleep(1000);\n}\n\nexport const Unlocktoken = async(data) => {\n    const account = getAccount();\n    const contract = await Uselockcontract();\n    const unlock =  contract.methods.withdrawFunds(data , account ).send({from : account});\n    await toast.promise(unlock , {\n        loading: 'Creating Lock...',\n        success: 'Lock Created Successfully',\n        error: 'Try Again',\n        }, { position:position.position,\n        style:style,\n        iconTheme: iconTheme,\n        }\n        );\n    await sleep(1000);\n    return true;\n}\n\nexport const Getalltokenlock = async(cards,start) => {\n    const contract = await Uselockcontract();\n    const lock = []\n    for(var i=start;i < cards;i++){\n        console.log(\"condition \" , i , cards);\n        \n        if(i < cards){\n            const lockaddressinfo = await contract.methods.lockers(i).call();\n            // var lockinfo = await contract.methods.getLockerUsersInfo(lockaddressinfo. LPAddress).call();\n            var tokeninf = await UseTokenInfo(lockaddressinfo. LPAddress);\n            lockaddressinfo.name = tokeninf.name;\n            lockaddressinfo.decimal = tokeninf.decimals;\n            lockaddressinfo.symbol = tokeninf.symbol;\n            lock.push(lockaddressinfo);\n            console.log(\"copy\" , lock );\n            if(lock.length == 3){\n                console.log(\"lock arrayyyyy\" , lock);\n                return {\n                    index : i+1,\n                    lock : lock\n                }\n            }\n        }\n        else {\n            console.log(\"elselock arrayyyyy\" , lock);\n            return {\n                index : i,\n                lock : lock\n            }\n        }\n        \n    }\n    return {\n        index : i,\n        lock : lock\n    }\n    \n    // var alllock = [];\n    // [...Array(count)].map(async(data , i)=>{\n    //     const address = await contract.methods.lockers(i).call();\n    //     const lockdata = await contract.methods.users(address.LPAddress , address.to).call();\n    //     alllock.push(lockdata);\n    // })\n    // return alllock;\n}\n\n\nexport const Getlockercount = async()=>{\n    const contract = await Uselockcontract();\n    const count = await contract.methods.lockerCount().call();\n    return count;\n}\n\n\nexport const Getsinglelockerinfo = async(address)=>{\n    const contract = await Uselockcontract();\n    const index = await contract.methods.getLockerId(address).call();\n    const lockaddressinfo = await contract.methods.lockers(index).call();\n    var tokeninf = await UseTokenInfo(lockaddressinfo. LPAddress);\n            lockaddressinfo.name = tokeninf.name;\n            lockaddressinfo.decimal = tokeninf.decimals;\n            lockaddressinfo.symbol = tokeninf.symbol;\n    return lockaddressinfo;\n}\n\nexport const Getsinglelockerdetail = async(address) => {\n    const contract = await Uselockcontract();\n    const lockdetail = await contract.methods.getLockerUsersInfo(address).call();\n    return lockdetail;\n}\n\nexport const GetAdminfee = async() => {\n    let contract = await UseProxySale();\n    const tokencontract = await Usestandardtoken(CHAINS[localStorage.getItem(\"CHAIN\")].STANDARD_TOKEN_ADDRESS);\n    const liquidityToken = await Useliquiditytoken(CHAINS[localStorage.getItem(\"CHAIN\")].LIQUIDITY_TOKEN_ADDRESS); \n    var deploymentfee = await contract.methods.getDeploymentFee().call();\n    var tokenfee = await tokencontract.methods._depolymentFee().call();\n    var liquidityTokenFee = await liquidityToken.methods.fee().call();\n    return {\n        deploymentfee : deploymentfee,\n        tokenfee : tokenfee,\n        liquidityTokenFee : liquidityTokenFee\n    }\n}\n\nexport const SetDeploymentfee = async(value) => {\n    let contract = await UseProxySale();\n    let wallet = getAccount();\n    let fee =  contract.methods.setDeploymentFee((value * 10**18).toString()).send({from : wallet});\n    await toast.promise(fee , {\n        loading: 'Updating fee...',\n        success: 'Fee Updated Successfully',\n        error: 'Try Again',\n        }, { position:position.position,\n        style:style,\n        iconTheme: iconTheme,\n        }\n        );\n        await sleep(1000);\n        window.location.reload();\n}\n\nexport const SetTokenfee = async(value) => {\n  const contract =  await Usestandardtoken(CHAINS[localStorage.getItem(\"CHAIN\")].STANDARD_TOKEN_ADDRESS);\n    let wallet = getAccount();\n   const data = value * 10**18; \n   \n   console.log(\"value\",data);\n    let fee = contract.methods.setDeploymentFee(data.toString()).send({from : wallet})\n    await toast.promise(fee , {\n        loading: 'Updating fee...',\n        success: 'Fee Updated Successfully',\n        error: 'Try Again',\n        }, { position:position.position,\n        style:style,\n        iconTheme: iconTheme,\n        }\n        );\n        await sleep(1000);\n        window.location.reload();\n}\n\nexport const SetUserfee = async(value) => {\n    const liquidityToken = await Useliquiditytoken(CHAINS[localStorage.getItem(\"CHAIN\")].LIQUIDITY_TOKEN_ADDRESS); \n    let wallet = getAccount();\n    let fee =  liquidityToken.methods.setFee((value *10**18).toString()).send({from : wallet})\n    await toast.promise(fee , {\n        loading: 'Updating fee...',\n        success: 'Fee Updated Successfully',\n        error: 'Try Again',\n        }, { position:position.position,\n        style:style,\n        iconTheme: iconTheme,\n        }\n        );\n        await sleep(1000);\n        window.location.reload();\n}\n\n\nexport const Withdrawbnb = async() => {\n    const proxyContract = await UseProxySale();\n    const account = getAccount();\n    const data =  proxyContract.methods.withdrawBNB().send({ from: account})\n    console.log(\"data in withdraw\",data);\n    await toast.promise(data, {\n        loading: 'Creating Withdraw ...',\n        success: 'Withdrawn Successfully',\n        error: (err) => `Error : ${err.toString()}`,\n    }, {\n        position:position.position,\n        style:style,\n        iconTheme: iconTheme\n    }\n    );\n}\n\n\nexport const Getliquiditytokenamount = async(address) => {\n    console.log(\"addressaddress\",address);\n    const proxyContract = await UseSale(address);\n    const data =  proxyContract.methods.getLiquidityTokenAmount().call();\n    console.log(\"data in withdraw\",data);\n    return data;\n}\n\nexport const Getunsoldtoken = async(address) => {\n    const proxyContract = await UseSale(address);\n    const data =  proxyContract.methods.getUnsoldTokensBalance().call();\n    console.log(\"data in withdraw\",data);\n    return data;\n}\n\nexport const Totalvaluelocked = async(address) => {\n    let contract = await UseERC20(WBNB_Address);\n    console.log(\"contract\" , contract);\n    let balance = await contract.methods.balanceOf(\"0x2aB5E5AdD110336D47333ed98893fa11659a35B0\").call();\n    console.log(\"balance\" , balance);\n}\n\nexport const checkIsApproved = async (account,token,saleaddress) => {\n    try{\n    const erc20contract = await UseERC20(token);\n    const allow = await erc20contract.methods.allowance(account,saleaddress).call();\n   \n    return (parseInt(allow)>0)?true:false;\n}catch (e) {\n               \n}\n}\n\n\nexport const approveContractbuy = async (account, token, presaleaddress) => {\n\n    const erc20Contract = await UseERC20(token);\n    const symbol = await erc20Contract.methods.symbol().call();\n    const data = erc20Contract.methods.approve(presaleaddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: account })\n    await toast.promise(data, {\n        loading: `Approving ${symbol} token...`,\n        success: 'Approved Successfully',\n        error: 'Try Again',\n    }, {\n        position: position.position,\n        style: style,\n        iconTheme: iconTheme,\n    })\n}\n\n","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/Addsettingmodal.js",["1240","1241","1242","1243"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport { Modal, FormControl, InputGroup } from 'react-bootstrap';\nimport { settingvalidate } from '../../hooks/kycvalidation';\nimport { addsettinghook } from '../../hooks/usebackend';\n\nimport proof from \"../../images/proof.webp\"\n\nclass Addsettingmodal extends Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {          \n            addsettingModal: true,\n            settingname : \"\",\n            settingvalue : \"\",\n            errors : {}\n        };\n    }\n\n    handleadd = async()=>{\n        console.log(\"handleadd\");\n        let payload = {\n            settingname : this.state.settingname,\n            settingvalue : this.state.settingvalue\n        };\n        console.log(\"payload\" , payload);\n        let validate = await settingvalidate(payload);\n        if(validate.isValid){\n            let settingresult = await addsettinghook(payload);\n            console.log(\"ssetting result\" , settingresult);\n            this.props.onDismiss();\n            this.props.getset();\n        }\n        else{\n            this.setState({\"errors\" : validate.errors})\n        }\n        \n    }\n\n   render() {\n        \n  \n        const {addsettingModal} = this.state\n\n        \n      return (\n\n        \n\n        <Modal className=\"wallet-modal\" show={addsettingModal} centered size=\"md\">\n        <Modal.Header className='pt-3 header_odal_head'>\n        <h3 className=\"sec-head \">Add Settings</h3>\n            <button type=\"button\" class=\"close\" onClick={() => this.props.onDismiss()}><span aria-hidden=\"true\">×</span><span class=\"sr-only\">Close</span></button>\n\n        </Modal.Header>\n        <Modal.Body className=\"select-wallet modal_body pt-0 pb-0 px-0\">\n\n        <div className=\"wallet-lists px-2\">\n                              \n        <div className='mod_pad_space pt-0'>\n        <div className='row'>\n                <div className='col-12 col-md-12 px-1 mb-3'>\n                        \n                        \n                        \n                       </div>\n                        <div className='col-12 col-md-12 px-1 mb-3'>\n                    <p className='input_desc_sm'>Setting Name</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"settingname\" placeholder=\"Setting Name\"\n                                aria-describedby=\"basic-addon2\"\n                                value={this?.state?.settingname}\n                                onChange = {(e)=>{\n                                    this.setState({\"settingname\" : e?.target?.value})\n                                }}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.settingname}</span>\n                    </div>                    \n                        </div>\n\n                        <div className='col-12 col-md-12 px-1 mb-3'>\n                    <p className='input_desc_sm'>Setting Value</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"hardcap\" placeholder=\"Setting Value\"\n                                aria-describedby=\"basic-addon2\"\n                                value={this?.state?.settingvalue}\n                                onChange = {(e)=>{\n                                    this.setState({\"settingvalue\" : e?.target?.value})\n                                }}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.settingvalue}</span>\n                    </div>\n                        </div> \n                       \n          \n         \n                    <div className='col-12 col-md-12 px-1 text-center'>\n                        <button className=\"get-started-btn mt-2\" onClick={this.handleadd}>\n                           Add\n                        </button>\n                        \n                        </div>\n                </div>\n\n            </div>\n    </div>\n        </Modal.Body>\n    </Modal>\n\n\n\n      )\n    }\n\n}\n\n\nexport default Addsettingmodal","/Users/sudhanshusrivastava/Downloads/launchpad/src/hooks/useProjects.js",["1244","1245","1246","1247","1248","1249","1250","1251","1252","1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267","1268","1269","1270","1271","1272","1273","1274"],"import { ERC20_ABI, ERC20_ADDRESS, DECIMAL } from \"../config/erc20\";\nimport { PROXY_SALE,PROXY_SALE_ABI } from '../config/proxy'\nimport { SALE_ABI } from '../config/presale'\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useWeb3 } from \"./useWeb3\";\nimport { getSaleInfo, getSaleInfoCard, UseProxySale, UseSale, UseTokenInfo } from \"./useContract\";\nimport { ONEDAYINSECONDS } from \"../config/env\";\nimport { getAccount } from \"./useAccount\";\n\nexport const getTotalSalesInfo = async()=>{\n    const proxy = await UseProxySale();\n   \n    let data = await proxy.methods.getTotalSales().call();\n    console.log(\"proxy inside getTotalSales info:\",data);\n    // const initial = [{\n    //     _sale  : \"0xA802274ba245171A37d39beC1Fd01cF459A8aeA8\",\n    //     _start : 142108977862384,\n    //     _end : 142116442822384,\n    //     _name : \"Metaverse Lab\"\n    // }];\n    // data = (initial).concat(data);\n  \n    const reverseArray = [...data].reverse();\n    return (reverseArray);\n   \n}\n\nexport const getSaleCards = async (cards)=>{\n    let SaleInfoCards = [];\n    await cards.map( async(index)=>{\n        const saleInfo = await getSaleInfoCard(index._sale);\n        SaleInfoCards.push(saleInfo);\n    })\n    return SaleInfoCards;\n}\n\nexport const getSaleCardsLimit = async (cards,start,end)=>{\n    let SaleInfoCards = [];\n    console.log(\"Cards data : \",cards,start,end)\n    if(cards.length > 0){\n   \n    for(var i=start;i<cards.length;i++){\n        if(i<cards.length){\n            const saleInfo = await getSaleInfoCard(cards[i]._sale);\n            // if(saleInfo.isWhitelisted){\n                SaleInfoCards.push(saleInfo);\n                if(SaleInfoCards.length==3){\n                    return SaleInfoCards;\n                } \n            // }\n               \n        }   \n        else{\n            return SaleInfoCards;\n        } \n    }\n    \n    }\n    return SaleInfoCards;\n}\n\nexport const getsaledatalimit = async(cards , start , end) => {\n    let SaleInfoCards = [];\n    console.log(\"card\" , cards , start , end , cards.length);\n    if(cards.length > 0){\n        for(var i = start ; i<end ; i++){\n            console.log(\"forlop\");\n            if(cards.length > i){\n                console.log(\"card[i]\" , cards[i]);\n                const saleInfo = await getSaleInfoCard(cards[i]);\n                // let tokeninfo = await UseTokenInfo()\n                SaleInfoCards.push(saleInfo);\n            }\n            else {\n                return SaleInfoCards;\n            }\n        }\n    }\n    return SaleInfoCards;\n}\n\nexport const getlaunchpaddatalimit = async(cards , start , end) => {\n    let SaleInfoCards = [];\n    console.log(\"card\" , cards , start , end , cards.length);\n    if(cards.length > 0 && cards.length > start){\n        for(var i = start ; i<end ; i++){\n            console.log(\"forlop\" , i);\n            if(cards.length > i){\n                console.log(\"card[i]\" , cards[i]._sale , i);\n                var saleInfo = await getSaleInfoCard(cards[i]._sale ? cards[i]._sale : cards[i].saleaddress);\n                if(saleInfo?.useWithToken == \"0x0000000000000000000000000000000000000000\"){\n                    saleInfo = {...saleInfo, ...{coin:\"BNB\"}};\n                    SaleInfoCards.push(saleInfo);\n                    console.log(\"bnb\" , SaleInfoCards);\n                }\n                else{\n                    const newdata = await UseTokenInfo(saleInfo.useWithToken);\n                    saleInfo = {...saleInfo, ...{coin:newdata.symbol}};\n                    SaleInfoCards.push(saleInfo);\n                    \n                }\n                // let tokeninfo = await UseTokenInfo()\n                // SaleInfoCards.push(saleInfo);\n            }\n            else {\n                console.log(\"other\" , SaleInfoCards);\n                return SaleInfoCards;\n            }\n        }\n    }\n    console.log(\"other\" , SaleInfoCards);\n    return SaleInfoCards;\n}\n\nexport const getmycontributiondatalimit = async(cards , start , end) => {\n    let SaleInfoCards = [];\n    console.log(\"card\" , cards , start , end , cards.length);\n    if(cards.length > 0){\n        for(var i = start ; i<end ; i++){\n            console.log(\"forlop\");\n            if(cards.length > i){\n                console.log(\"card[i]\" , cards[i]);\n                const saleInfo = await getSaleInfoCard(cards[i].saleaddress? cards[i].saleaddress : cards[i]._sale);\n                // let tokeninfo = await UseTokenInfo()\n                SaleInfoCards.push(saleInfo);\n            }\n            else {\n                return SaleInfoCards;\n            }\n        }\n    }\n    return SaleInfoCards;\n}\n\nexport const gethomelaunchpaddetail = async(cards) => {\n    let SaleInfoCards = [];\n    console.log(\"card\" , cards , );\n    for(var i=0 ;i < cards.length ; i++){\n        var saleInfo = await getSaleInfoCard(cards[i].saleaddress);\n        SaleInfoCards.push(saleInfo);\n    }\n    console.log(\"other\" , SaleInfoCards);\n    return SaleInfoCards;\n}\n\nexport const getsearchmycontribution = async(cards) => {\n    \n}\n\n\n\n\n\n\n\n\nexport const getPrivatesaleFilter = async (cards , isuser)=>{\n    let SaleInfoCards = [];\n    for(var i =0 ; i < cards.length ; i++){\n        let saleInfo = await getSaleInfoCard(cards[i]._sale);\n        if(!isuser){\n            if(saleInfo.isWhitelisted){\n                if(saleInfo?.useWithToken == \"0x0000000000000000000000000000000000000000\"){\n                    // saleInfo.coin = \"BNB\";\n                    // Object.assign({coin:\"BNB\"} , saleInfo);\n                    saleInfo = {...saleInfo, ...{coin:\"BNB\"}};\n                    // saleInfo[\"coin\"] = \"BNB\"\n                    SaleInfoCards.push(saleInfo);\n                \n                }\n                else{\n                    const newdata = await UseTokenInfo(saleInfo.useWithToken);\n                    // saleInfo.coin = newdata.symbol;\n                    // Object.assign(saleInfo , {coin:newdata.symbol});\n                    saleInfo = {...saleInfo, ...{coin:newdata.symbol}};\n                    // saleInfo[\"coin\"] = newdata.symbol\n                    SaleInfoCards.push(saleInfo);\n                \n                }\n            }\n        }\n\n        if(isuser){\n            const account = getAccount();\n            if(saleInfo.isWhitelisted && saleInfo.owner == account){\n                if(saleInfo?.useWithToken == \"0x0000000000000000000000000000000000000000\"){\n                    // saleInfo.coin = \"BNB\";\n                    // Object.assign({coin:\"BNB\"} , saleInfo);\n                    saleInfo = {...saleInfo, ...{coin:\"BNB\"}};\n                    // saleInfo[\"coin\"] = \"BNB\"\n                    SaleInfoCards.push(saleInfo);\n                \n                }\n                else{\n                    const newdata = await UseTokenInfo(saleInfo.useWithToken);\n                    // saleInfo.coin = newdata.symbol;\n                    // Object.assign(saleInfo , {coin:newdata.symbol});\n                    saleInfo = {...saleInfo, ...{coin:newdata.symbol}};\n                    // saleInfo[\"coin\"] = newdata.symbol\n                    SaleInfoCards.push(saleInfo);\n                \n                }\n            }\n        }\n    }\n    return SaleInfoCards;\n}\n\n\nexport const getPrivatesaleCardLimit = async (cards,start,end , user)=>{\n    console.log(\"user\" , user);\n    let SaleInfoCards = [];\n    console.log(\"Cards data : \",cards,start,end)\n    if(cards.length > 0){\n    for(var i=start;i<cards.length;i++){\n        if(i<cards.length){\n            let saleInfo = await getSaleInfoCard(cards[i]._sale);\n            if(!user){\n                if(saleInfo.isWhitelisted){\n                    if(saleInfo?.useWithToken == \"0x0000000000000000000000000000000000000000\"){\n                        // saleInfo.coin = \"BNB\";\n                        // Object.assign({coin:\"BNB\"} , saleInfo);\n                        saleInfo = {...saleInfo, ...{coin:\"BNB\"}};\n                        // saleInfo[\"coin\"] = \"BNB\"\n                        SaleInfoCards.push(saleInfo);\n                    if(SaleInfoCards.length==3){\n                        return {index : i+1 , saleInfoCards : SaleInfoCards};\n                    } \n                    }\n                    else{\n                        const newdata = await UseTokenInfo(saleInfo.useWithToken);\n                        // saleInfo.coin = newdata.symbol;\n                        // Object.assign(saleInfo , {coin:newdata.symbol});\n                        saleInfo = {...saleInfo, ...{coin:newdata.symbol}};\n                        // saleInfo[\"coin\"] = newdata.symbol\n                        SaleInfoCards.push(saleInfo);\n                    if(SaleInfoCards.length==3){\n                        return {index : i+1 , saleInfoCards : SaleInfoCards};\n                    } \n                    }\n                   \n                console.log(\"saleinfoooo\" , saleInfo);\n                }\n            }\n\n            if(user){\n                const account = getAccount();\n                if(saleInfo.owner == account && saleInfo.isWhitelisted){\n                    if(saleInfo?.useWithToken == \"0x0000000000000000000000000000000000000000\"){\n                        // saleInfo.coin = \"BNB\";\n                        // Object.assign({coin:\"BNB\"} , saleInfo);\n                        saleInfo = {...saleInfo, ...{coin:\"BNB\"}};\n                        // saleInfo[\"coin\"] = \"BNB\"\n                        SaleInfoCards.push(saleInfo);\n                    if(SaleInfoCards.length==3){\n                        return {index : i+1 , saleInfoCards : SaleInfoCards};\n                    } \n                    }\n                    else{\n                        const newdata = await UseTokenInfo(saleInfo.useWithToken);\n                        // saleInfo.coin = newdata.symbol;\n                        // Object.assign(saleInfo , {coin:newdata.symbol});\n                        saleInfo = {...saleInfo, ...{coin:newdata.symbol}};\n                        // saleInfo[\"coin\"] = newdata.symbol\n                        SaleInfoCards.push(saleInfo);\n                    if(SaleInfoCards.length==3){\n                        return {index : i+1 , saleInfoCards : SaleInfoCards};\n                    } \n                    }\n                }\n            }\n        }   \n        else{\n            return {index : i+1 , saleInfoCards : SaleInfoCards};\n        } \n    }\n    \n        return {index : cards.length , saleInfoCards : SaleInfoCards};\n    \n    }\n    // return SaleInfoCards;\n}\n\nexport const getLaunchpadsaleCardLimit = async (cards,start,end , user)=>{\n    console.log(\"user\" , user);\n    let SaleInfoCards = [];\n    console.log(\"Cards data : \",cards,start,end)\n    if(cards.length > 0){\n    for(var i=start;true;i++){\n        if(i<cards.length){\n            let saleInfo = await getSaleInfoCard(cards[i]._sale);\n            if(!user){\n                if(!saleInfo.isWhitelisted){\n                    if(saleInfo?.useWithToken == \"0x0000000000000000000000000000000000000000\"){\n                        // saleInfo.coin = \"BNB\";\n                        // Object.assign({coin:\"BNB\"} , saleInfo);\n                        saleInfo = {...saleInfo, ...{coin:\"BNB\"}};\n                        // saleInfo[\"coin\"] = \"BNB\"\n                        SaleInfoCards.push(saleInfo);\n                    if(SaleInfoCards.length==3){\n                        return {index : i , saleInfoCards : SaleInfoCards};\n                    } \n                    }\n                    else{\n                        const newdata = await UseTokenInfo(saleInfo.useWithToken);\n                        // saleInfo.coin = newdata.symbol;\n                        // Object.assign(saleInfo , {coin:newdata.symbol});\n                        saleInfo = {...saleInfo, ...{coin:newdata.symbol}};\n                        // saleInfo[\"coin\"] = newdata.symbol\n                        SaleInfoCards.push(saleInfo);\n                    if(SaleInfoCards.length==3){\n                        return {index : i , saleInfoCards : SaleInfoCards};\n                    } \n                    }\n                    // const newdata = await UseTokenInfo(saleInfo.useWithToken);\n                console.log(\"saleinfoooo\" , saleInfo);\n                // console.log(\"saleinfoooo\" , newdata);\n                    // Object.assign({coin:newdata.symbol} , saleInfo)\n                    // saleInfo.coin = newdata.symbol;\n                    // SaleInfoCards.push(saleInfo);\n                    // if(SaleInfoCards.length==3){\n                    //     return SaleInfoCards;\n                    // } \n                }\n            }\n\n            if(user){\n                const account = getAccount();\n                if(saleInfo.owner == account && !saleInfo.isWhitelisted){\n                    if(saleInfo?.useWithToken == \"0x0000000000000000000000000000000000000000\"){\n                        // saleInfo.coin = \"BNB\";\n                        // Object.assign({coin:\"BNB\"} , saleInfo);\n                        saleInfo = {...saleInfo, ...{coin:\"BNB\"}};\n                        // saleInfo[\"coin\"] = \"BNB\"\n                        SaleInfoCards.push(saleInfo);\n                    if(SaleInfoCards.length==3){\n                        return {index : i , saleInfoCards : SaleInfoCards};\n                    } \n                    }\n                    else{\n                        const newdata = await UseTokenInfo(saleInfo.useWithToken);\n                        // saleInfo.coin = newdata.symbol;\n                        // Object.assign(saleInfo , {coin:newdata.symbol});\n                        saleInfo = {...saleInfo, ...{coin:newdata.symbol}};\n                        // saleInfo[\"coin\"] = newdata.symbol\n                        SaleInfoCards.push(saleInfo);\n                    if(SaleInfoCards.length==3){\n                        return {index : i , saleInfoCards : SaleInfoCards};\n                    } \n                    }\n                }\n            }\n        }   \n        else{\n            return {index : i , saleInfoCards : SaleInfoCards};\n        } \n    }\n    \n    }\n    // return SaleInfoCards;\n}\n\nexport const searchSale = async(SaleInfoCards,search) =>{\n   const filteredData = await SaleInfoCards.filter(value => ((value._name).toUpperCase()).includes(search.toUpperCase()));\n  // console.log(\"Sale filteredData : \",filteredData)\n   let filteredCard = [];\n   await filteredData.map( async(index)=>{\n    const saleInfo = await getSaleInfoCard(index._sale);\n    filteredCard.push(saleInfo);\n    })\n    console.log(\"Sale filteredCard : \",filteredCard)\n   return filteredCard;\n}\n\nexport const searchCards = async(SaleInfoCards, search) => {\n    console.log(\"SaleInfoCards, search\" , SaleInfoCards, search);\n    const filteredData = await SaleInfoCards.filter(value => ((value._name).toUpperCase()).includes(search.toUpperCase()));\n    console.log(\"filtered data\" , filteredData);\n    return filteredData;\n}\n\nexport const isSaleLive = (start,end,isOpen) => {\n    return (Date.now() >= (start*1000) && Date.now()<= (end*1000)) && isOpen;\n}\n\nexport const isUpcoming = (start,end) =>{\n    return (Date.now() < (start*1000));\n}\n\nexport const isSaleEnded = (start,end,isOpen) => {\n    return (Date.now() >= (end*1000)) || !isOpen\n}\n\nexport const UpcomingDiffernce = (start) => {\n    return ((start*1000) - Date.now());\n}\n\nexport const Salediffernce = (end)=>{\n    return ((end*1000)-Date.now());\n}\n\n\nexport const processCSV = (str, delim=',') => {\n    const headers = str.slice(0,str.indexOf('\\n')).split(delim);\n    const rows = str.slice(str.indexOf('\\n')+1).split('\\n');\n\n    const newArray = rows.map( row => {\n        const values = row.split(delim);\n        const eachObject = headers.reduce((obj, header, i) => {\n            obj[header] = values[i];\n            return obj;\n        }, {})\n        return eachObject;\n    })\n\n    return (newArray)\n}\n\n","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/Adminsidebar.js",["1275","1276","1277","1278","1279","1280","1281","1282","1283","1284","1285","1286","1287"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport { Card, Accordion, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n\n// import 'font-awesome/css/font-awesome.min.css';\n\n\n\n\nimport settingsicon from \"../../images/settings_icon.png\"\nimport kycicon from \"../../images/kyc.svg\"\nimport launchpadicon from \"../../images/launchpad.svg\"\n\nimport adminlaunchpad from \"../../images/adminlaunchpad.png\"\nimport trending from \"../../images/trending.svg\"\n\n\n\n\nimport { NavLink } from \"react-router-dom\";\n\nclass Adminsidebar extends Component \n{ \n    \n   constructor(props)\n   {\n       super(props);\n       this.state = {\n        location:false,       \n        sidebarShrink:false,\n        setActive:0\n    }\n   }\n\n   setSidebarWidth()\n   {\n       this.setState({ sidebarShrink: !this.state.sidebarShrink });\n       if(this.state.sidebarShrink)\n       {\n        document.body.classList.remove('sidebar_shr');\n       }\n       else\n       {\n        document.body.classList.add('sidebar_shr');\n\n       }\n   }\n\n\n \n\n\n\n    render() {\n    const {sidebarShrink,setActive } = this.state\n\n\n\n\t\treturn (\n\n\n           <div id=\"sidebar\" className={sidebarShrink?\"side_shrink lis_paren_side_admn\":\"lis_paren_side_admn\"}>\n             <button className=\"get-started-btn rounded_btn_wal shrink_side_btn\" onClick={() => this.setSidebarWidth()}>\n             <i class=\"fa fa-chevron-right\" aria-hidden=\"true\"></i>    \n            </button>\n            <ul className='sidebar_ul'>\n            <NavLink to=\"/adminlaunchpad\" className=\"parent_1_grad\">\n                <li className='lis_paren_side li_bot_less'>\n               \n                <img src={launchpadicon} className=\"icon_sidebar\" />\n                <span>\n                    Launchpad\n                </span>\n               \n                </li>\n                </NavLink>\n\n                <NavLink to=\"/adminkyc\" className=\"parent_1_grad\">\n                <li className='lis_paren_side li_bot_less'>\n               \n                <img src={kycicon} className=\"icon_sidebar\" />\n                <span>\n                    KYC\n                </span>\n               \n                </li>\n                </NavLink>\n\n                <NavLink to=\"/adminsettings\" className=\"parent_1_grad\">\n                <li className='lis_paren_side li_bot_less'>\n               \n                <img src={settingsicon} className=\"icon_sidebar\" />\n                <span>\n                    Settings\n                </span>\n               \n                </li>\n                </NavLink>      \n\n                 <NavLink to=\"/launchpadsettings\" className=\"parent_1_grad\">\n                <li className='lis_paren_side li_bot_less'>\n               \n                <img src={adminlaunchpad} className=\"icon_sidebar\" />\n                <span>\n                    Launchpad Settings\n                </span>\n               \n                </li>\n                </NavLink>  \n\n                <NavLink to=\"/admintrending\" className=\"parent_1_grad\">\n                <li className='lis_paren_side li_bot_less'>\n               \n                <img src={trending} className=\"icon_sidebar\" />\n                <span>\n                    OnTop\n                </span>\n               \n                </li>\n                </NavLink>       \n              \n          \n              \n            </ul>\n         \n\n           </div>\n        );\n    }\n}\n\n\n\nexport default Adminsidebar","/Users/sudhanshusrivastava/Downloads/launchpad/src/hooks/usebackend.js",[],"/Users/sudhanshusrivastava/Downloads/launchpad/src/hooks/useToast.js",[],"/Users/sudhanshusrivastava/Downloads/launchpad/src/hooks/kycvalidation.js",["1288","1289","1290","1291","1292","1293","1294","1295","1296","1297","1298","1299","1300","1301","1302","1303","1304","1305","1306"],"import Validator from \"validator\";\nimport isEmpty from \"is-empty\";\nimport { IsValidAddress } from \"./useContract\";\n\nexport const kycvalid = (data) => {\n    var errors = {};\n    var isValid = true;\n    if (Validator.isEmpty(data.idtype)) {\n        isValid = false;\n        errors.idtype = \"Document Type field is required !\"\n    }\n    if (Validator.isEmpty(data?.idnumber)) {\n        isValid = false;\n        errors.idnumber = \"Id Number field is required !\";\n    }\n    if (Validator.isEmpty(data?.address)) {\n        isValid = false;\n        errors.address = \"Address field is required !\";\n    }\n    if (!data?.front) {\n        isValid = false;\n        errors.front = \"Zip file is required !\";\n    }\n    else if (!filevalidate(data?.front)) {\n        isValid = false;\n        errors.front = \"Invalid file format !\"\n    }\n    // if(!data?.back){\n    //     isValid = false;\n    //     errors.back = \"Back Side Image is required !\";\n    // }\n    // else if(!filevalidate(data?.back)){\n    //     isValid = false;\n    //     errors.back = \"Invalid file format !\"\n    // }\n    return {\n        errors,\n        isValid: isEmpty(errors)\n    }\n}\n\n//validate file\nconst filevalidate = (image) => {\n    console.log(\"image\", image);\n    var fileName = image?.name ? image?.name : image;\n    var idxDot = fileName?.lastIndexOf(\".\") + 1;\n    var extFile = fileName?.substr(idxDot, fileName.length).toLowerCase();\n    console.log(\"extFiole\", extFile);\n    // || extFile==\"jpeg\" || extFile==\"png\" || extFile==\"webp\"\n    if (extFile == \"zip\") {\n        return true;\n    } else {\n        return false;\n    }\n\n}\n\nexport const validatelogin = (data) => {\n\n\n    let errors = {};\n    let isValid = true;\n    if (Validator.isEmpty(data?.email)) {\n        isValid = false;\n        errors.email = \"Email field is required\";\n\n    }\n    else if (!Validator.isEmail(data?.email)) {\n        isValid = false;\n        errors.email = \"Invalid email\"\n    }\n    if (Validator.isEmpty(data.password)) {\n        isValid = false;\n        errors.password = \"Password field is required\";\n    }\n\n    return {\n        errors,\n        isValid: isEmpty(errors)\n\n    };\n};\n\nexport const settingvalidate = (data) => {\n    let errors = {};\n    let isValid = true;\n    if (Validator.isEmpty(data?.settingname)) {\n        isValid = false;\n        errors.settingname = \"Setting name field is required\";\n    }\n    if (Validator.isEmpty(data?.settingvalue)) {\n        isValid = false;\n        errors.settingvalue = \"Setting Value field is required !\";\n    }\n    return {\n        isValid: isEmpty(errors),\n        errors: errors\n    }\n}\n\nexport const validstandardtoken = (data) => {\n    var rd = new RegExp(/^\\d+$/);\n\n    let isValid = true;\n    let errors = {};\n    if (Validator.isEmpty(data?.name)) {\n        isValid = false\n        errors.name = \"Name field is required !\"\n    }\n    if (Validator.isEmpty(data?.symbol)) {\n        isValid = false;\n        errors.symbol = \"Symbol field is required !\"\n    }\n    if (Validator.isEmpty(data?.decimal)) {\n        isValid = false;\n        errors.decimal = \"Decimal field is required\"\n    }\n    if (!rd.test(parseFloat(data?.decimal))) {\n        isValid = false;\n        errors.decimal = \"Invalie Decimal field \"\n    }\n    if (isNaN(parseFloat(data?.decimal))) {\n        isValid = false;\n        errors.decimal = \"Invalid Decimal field\"\n    }\n    if (Validator.isEmpty(data?.totalsupply)) {\n        isValid = false;\n        errors.totalsupply = \"Total supply field is required\"\n    }\n\n    if (isNaN(data?.totalsupply)) {\n        isValid = false;\n        errors.totalsupply = \"Invalid Total supply field\"\n    }\n    if (!rd.test(parseFloat(data?.totalsupply))) {\n        isValid = false;\n        errors.totalsupply = \"Invalid Total supply field\"\n    }\n    return {\n        isValid: isEmpty(errors),\n        errors: errors\n    }\n}\n\nexport const validliquiditytoken = (data) => {\n    console.log(\"data\", data);\n    var rd = new RegExp(/^\\d+$/);\n    var rx = new RegExp(/^[-+]?[0-9]+\\.[0-9]+$/)\n    let isValid = true;\n    let errors = {};\n    if (Validator.isEmpty(data?.name)) {\n        isValid = false\n        errors.name = \"Name field is required !\"\n    }\n    if (Validator.isEmpty(data?.symbol)) {\n        isValid = false;\n        errors.symbol = \"Symbol field is required !\"\n    }\n    if (Validator.isEmpty(data?.decimal)) {\n        isValid = false;\n        errors.decimal = \"Decimal field is required\"\n    }\n    if (Validator.isEmpty(data?.totalsupply)) {\n        isValid = false;\n        errors.totalsupply = \"Total supply field is required\"\n    }\n    if (!rd.test(parseFloat(data?.totalsupply))) {\n        isValid = false;\n        errors.totalsupply = \"Invalid Total supply field\"\n    }\n\n    if (!rd.test(parseFloat(data?.decimal))) {\n        isValid = false;\n        errors.decimal = \"Decimal field is required\"\n    }\n    if (isNaN(parseFloat(data?.decimal))) {\n        isValid = false;\n        errors.decimal = \"Invalid Decimal field\"\n    }\n\n\n    if (isNaN(data?.totalsupply)) {\n        isValid = false;\n        errors.totalsupply = \"Invalid Total supply field\"\n    }\n    // if(!rd.test(parseFloat(data?.yieldfee)) && !rd.test(parseFloat(data?.yieldfee))){\n    //     isValid = false;\n    //     errors.yieldfee = \"Transaction fee to generate yield  field is required\"\n    // }\n    if (isNaN(parseFloat(data?.yieldfee))) {\n        isValid = false;\n        errors.yieldfee = \"Invalid Transaction fee to generate yield ..\"\n    }\n    else {console.log(\"parseFloat(data?.yieldfee)\" , parseFloat(data?.yieldfee) , parseFloat(data?.yieldfee) > 0 && parseFloat(data?.yieldfee) <= 100);\n        if (!(parseFloat(data?.yieldfee) > 0 && parseFloat(data?.yieldfee) <= 100)) {\n            isValid = false;\n            errors.yieldfee = \"Invalid Transaction fee to generate yield\"\n        }\n    }\n\n    // if (!rd.test(parseFloat(data?.liquidityfee)) && !rd.test(parseFloat(data?.liquidityfee))) {\n    //     isValid = false;\n    //     errors.liquidityfee = \"Transaction fee to generate liquidity  field is required\"\n    // }\n    if (isNaN(parseFloat(data?.liquidityfee))) {\n        isValid = false;\n        errors.liquidityfee = \"Invalid Transaction fee to generate liquidity \"\n    }\n    else if (!(parseFloat(data?.liquidityfee) > 0 && parseFloat(data?.liquidityfee) <= 100)) {\n        isValid = false;\n        errors.liquidityfee = \"Transaction fee to generate liquidity must be 0-100\"\n    }\n\n    // if (rd.test(parseFloat(data?.maximumtransaction)) || rd.test(parseFloat(data?.maximumtransaction))) {\n    //     isValid = false;\n    //     errors.maximumtransaction = \"Maximum transaction Amount field is required\"\n    // }\n    if (isNaN(parseFloat(data?.maximumtransaction))) {\n        isValid = false;\n        errors.maximumtransaction = \"Invalid Maximum transaction Amount field \"\n    }\n    else if (!(parseFloat(data?.maximumtransaction) > 0 && parseFloat(data?.maximumtransaction) <= 100)) {\n        isValid = false;\n        errors.maximumtransaction = \"Maximum Transaction  must be 0-100\"\n    }\n\n    // if (!rd.test(parseFloat(data?.exchangethresold)) && !rd.test(parseFloat(data?.exchangethresold))) {\n    //     isValid = false;\n    //     errors.exchangethresold = \"Exchange Thersold field is required\"\n    // }\n    if (isNaN(parseFloat(data?.exchangethresold))) {\n        isValid = false;\n        errors.exchangethresold = \"Invalid Exchange Thersold field \"\n    }\n    else if (!(parseFloat(data?.exchangethresold) > 0 && parseFloat(data?.exchangethresold) <= 100)) {\n        isValid = false;\n        errors.exchangethresold = \"Exchange Thresold  must be 0-100\"\n    }\n    if (Validator.isEmpty(data?.yieldfee)) {\n        isValid = false;\n        errors.yieldfee = \"Transaction fee to generate yield  field is required\"\n    }\n    if (Validator.isEmpty(data?.liquidityfee)) {\n        isValid = false;\n        errors.liquidityfee = \"Transaction fee to generate liquidity  field is required\"\n    }\n    if (Validator.isEmpty(data?.maximumtransaction)) {\n        isValid = false;\n        errors.maximumtransaction = \"Maximum transaction Amount field is required\"\n    }\n    if (Validator.isEmpty(data?.exchangethresold)) {\n        isValid = false;\n        errors.exchangethresold = \"Exchange Thersold field is required\"\n    }\n    return {\n        isValid: isEmpty(errors),\n        errors: errors\n    }\n}\n\nexport const validtokenlock = (data) => {\n    console.log(\"data\", data);\n    let isValid = true;\n    let errors = {};\n    if (Validator.isEmpty(data?.tokenaddress)) {\n        isValid = false\n        errors.tokenaddress = \"Token Address field is required !\"\n    }\n    if (Validator.isEmpty(data?.amount)) {\n        isValid = false\n        errors.amount = \"Amount field is required !\"\n    }\n\n    if (data.vesting) {\n        if (Validator.isEmpty(data?.cycle)) {\n            isValid = false\n            errors.cycle = \"Cycle field is required !\"\n        }\n        if (Validator.isEmpty(data?.cyclepercent)) {\n            isValid = false\n            errors.cyclepercent = \"Cycle release percent  field is required !\"\n        }\n        if (data?.cyclepercent < 0 && data?.cyclepercent >= 100) {\n            isValid = false\n            errors.cyclepercent = \"Cycle release percent  field value must be 0 to 100 !\"\n        }\n        // if(Validator.isEmpty(data?.tgedate)){\n        //     isValid = false\n        //     errors.tgedate = \"TGE date  field is required !\"\n        // }\n        // if(data.tgedate )\n        // if(Validator.isEmpty(data?.tgepercent)){\n        //     isValid = false\n        //     errors.tgepercent = \"TGE Percent  field value must be 0 to 100 !\"\n        // }\n        // if(data?.tgepercent > 0 && data?.tgepercent <=100){\n        //     isValid = false\n        //     errors.tgepercent = \"TGE Percent  field value must be 0 to 100 !\"\n        // }\n    }\n    else {\n        if (Validator.isEmpty(data?.locktime)) {\n            isValid = false\n            errors.locktime = \"Lock Until field is required !\"\n        }\n    }\n    if (data?.anotherowner) {\n        if (Validator.isEmpty(data?.anotherowneraddress)) {\n            isValid = false;\n            errors.anotherowneraddress = \"Owner field is required !\";\n        }\n\n    }\n    return {\n        isValid: isEmpty(errors),\n        errors: errors\n    }\n}\n\nexport const validprivatesalestep1 = (data) => {\n    let isValid = true;\n    let errors = {};\n    if (Validator.isEmpty(data?.title)) {\n        isValid = false\n        errors.title = \"Title field is required !\"\n    }\n    return {\n        isValid: isEmpty(errors),\n        errors: errors\n    }\n}\n\nexport const validprivatesalestep2 = (data) => {\n    let isValid = true;\n    let errors = {};\n    if (Validator.isEmpty(data?.whitelist)) {\n        isValid = false\n        errors.whitelist = \"Token Address field is required !\"\n    }\n}\n\n\nexport const urlvalidation = (data) => {\n    const regex = new RegExp(/[(http(s)?):\\/\\/(www\\.)?a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/);\n    console.log(\"valid url \", regex.test(data));\n    return regex.test(data);\n}\n\n\nexport const addwhitelistvalidation = async (val) => {\n    let isValid = true;\n    // var errors ={} ;\n    let ob = {}\n    console.log(\"val\", val);\n    // data.map(async(val , i)=>{\n    if (Validator.isEmpty(val.user)) {\n        isValid = false;\n        ob.user = \"Wallet Address field is required !\";\n    }\n    else {\n        let isvalid = await IsValidAddress(val.user);\n        console.log(\"isvalid\", isvalid);\n        if (!isvalid) {\n            isValid = false\n            ob.user = \"Invalid wallet address !\"\n        }\n    }\n\n    if (isNaN(parseFloat(val.bnbvalue)) || val.bnbvalue <= 0) {\n        isValid = false\n        ob.bnbvalue = \"Invalid BNB value !\"\n    }\n    // errors[i]=ob;\n    // ob = {}\n    // })\n    // errors = Object.keys(errors)\n    console.log(\"length\", ob);\n    return {\n        isValid: isEmpty(ob),\n        errors: ob\n    }\n}\n\nexport const removewhitelistvalidation = async (val) => {\n    let isValid = true;\n    // var errors ={} ;\n    let ob = {}\n    console.log(\"val\", val);\n    // data.map(async(val , i)=>{\n    if (Validator.isEmpty(val.user)) {\n        isValid = false;\n        ob.user = \"Wallet Address field is required !\";\n    }\n    else {\n        let isvalid = await IsValidAddress(val.user);\n        console.log(\"isvalid\", isvalid);\n        if (!isvalid) {\n            isValid = false\n            ob.user = \"Invalid wallet address !\"\n        }\n    }\n\n    if (isNaN(val.bnbvalue) || validliquiditytoken.bnbvalue != 0) {\n        isValid = false\n        ob.bnbvalue = \"Invalid BNB value !\"\n    }\n    // errors[i]=ob;\n    // ob = {}\n    // })\n    // errors = Object.keys(errors)\n    console.log(\"length\", ob);\n    return {\n        isValid: isEmpty(ob),\n        errors: ob\n    }\n}\n\n\nexport const trendingvalidate = (data) => {\n    let errors = {};\n    let isValid = true;\n    if (Validator.isEmpty(data?.saleaddress)) {\n        isValid = false;\n        errors.saleaddress = \"Saleaddress field is required\";\n    }\n    if (Validator.isEmpty(data?.displayname)) {\n        isValid = false;\n        errors.displayname = \"Display name field is required !\";\n    }\n    if (Validator.isEmpty(data?.status)) {\n        isValid = false;\n        errors.status = \"Status field is required !\";\n    }\n    if (Validator.isEmpty(data?.position)) {\n        isValid = false;\n        errors.status = \"Position field is required !\";\n    }\n    if (Validator.isEmpty(data?.date)) {\n        isValid = false;\n        errors.status = \"Date field is required !\";\n    }\n    return {\n        isValid: isEmpty(errors),\n        errors: errors\n    }\n}","/Users/sudhanshusrivastava/Downloads/launchpad/src/hooks/useWeb3.js",["1307","1308"],"import Web3 from \"web3\"\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { CHAINS } from \"../config/env\";\nimport toast, { Toaster } from 'react-hot-toast';\nimport { iconTheme, position, style } from \"./useToast\";\n\nexport const useWeb3 = async() =>{\n  \n const RPC_URL =  CURRENT_RPC_URL();\n const CHAIN_ID = CURRENT_CHAIN_ID();\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL)\nlet web3;\n\n  if(localStorage.getItem(\"walletconnect\")!=null){\n    const RPC_DATA = {};\n    RPC_DATA[CHAIN_ID] = RPC_URL\n    const ethereum = new WalletConnectProvider({\n        rpc: RPC_DATA,\n        network: 'binance',\n        chainId: CHAIN_ID,\n        // infuraId: \"69de03b5c7194095980c9233f9cf71df\",\n    }\n    );\n\n    await ethereum.enable()\n    web3 = new Web3(ethereum);\n\n  //  return web3;\n  }else if(localStorage.getItem(\"accountInfo\")!=null){\n   web3 = new Web3(window.ethereum);\n //   return web3;\n  }else{\n   web3 = new Web3(httpProvider);\n //   return web3;\n  }\n  const chainIds = await web3.eth.getChainId();\n  if(parseInt(chainIds) != parseInt(CHAIN_ID)){\n        const data = await SwitchChain();\n        if(data){\n          window.location.reload();\n        }\n    }\n\n  return web3;\n  \n}\n\nexport const UseProvider = async () =>{\n  const RPC_URL =  CURRENT_RPC_URL();\n  const CHAIN_ID = CURRENT_CHAIN_ID();\n  if(localStorage.getItem(\"walletconnect\")!=null){\n    const RPC_DATA = {};\n    RPC_DATA[CHAIN_ID] = RPC_URL\n    const ethereum = new WalletConnectProvider({\n        rpc: RPC_DATA,\n        network: 'binance',\n        chainId: CHAIN_ID,\n        // infuraId: \"69de03b5c7194095980c9233f9cf71df\",\n    }\n    );\n \n     await ethereum.enable()\n    \n \n     return ethereum;\n   }else if(localStorage.getItem(\"accountInfo\")!=null){\n     return window.ethereum;\n   }\n}\n\nexport const addTokentoMetamask = async (tokenAddress,tokenSymbol,tokenDecimals,tokenImage)=>{\n  try {\n    // wasAdded is a boolean. Like any RPC method, an error may be thrown.\n    const wasAdded =  await window.ethereum.request({\n      method: 'wallet_watchAsset',\n      params: {\n        type: 'ERC20', // Initially only supports ERC20, but eventually more!\n        options: {\n          address: tokenAddress, // The address that the token is at.\n          symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n          decimals: tokenDecimals, // The number of decimals in the token\n          image: tokenImage, // A string url of the token logo\n        },\n      },\n    });\n  \n    if (wasAdded) {\n      console.log('Token Added');\n    } else {\n      console.log('Your loss!');\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const CURRENT_RPC_URL = ()=>{\n   const index = localStorage.getItem(\"CHAIN\") ? localStorage.getItem(\"CHAIN\") : \"0\";\n   console.log(\"rpc url : \",CHAINS[index].RPC_URL)\n   return CHAINS[index].RPC_URL;\n}\n\nexport const CURRENT_CHAIN_ID = ()=>{\n  const index = localStorage.getItem(\"CHAIN\") ? localStorage.getItem(\"CHAIN\") : \"0\";\n  return CHAINS[index].CHAIN_ID;\n}\n\nconst SwitchChain = async()=>{\n  const RPC_URL =  CURRENT_RPC_URL();\n  const CHAIN_ID = CURRENT_CHAIN_ID();\n     // Check if MetaMask is installed\n // MetaMask injects the global API into window.ethereum\n const hexString = CHAIN_ID.toString(16);\n if (window.ethereum) {\n    try {\n      // check if the chain to connect to is installed\n      \n      const data =  window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: \"0x\"+hexString }], // chainId must be in hexadecimal numbers\n      });\n      await toast.promise(data, {\n        loading: 'Switching Network ...',\n        success: 'Network Switched Successfully',\n        error: 'Error ! When Switching Network',\n    }, {\n      position:position.position,\n      style:style,\n      iconTheme: iconTheme\n    });\n     return true;\n    } catch (error) {\n      // This error code indicates that the chain has not been added to MetaMask\n      // if it is not, then install it into the user MetaMask\n      if (error.code === 4902) {\n        try {\n          const data =  window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [\n              {\n                chainId: \"0x\"+hexString,\n                rpcUrl: RPC_URL,\n              },\n            ],\n          });\n          await toast.promise(data, {\n            loading: 'Switching Network ...',\n            success: 'Network Switched Successfully',\n            error: 'Error ! When Switching Network',\n        }, {\n          position:position.position,\n          style:style,\n          iconTheme: iconTheme\n        });\n          return true;\n        } catch (addError) {\n          console.error(addError);\n          toast.error(`Error : ${addError}`,\n      {\n        position:position.position,\n        style:style,\n        iconTheme: iconTheme\n      });\n        }\n      }\n      console.error(error);\n    }\n  } else {\n    // if no window.ethereum then MetaMask is not installed\n    console.log('MetaMask is not installed. Please consider installing it: https://metamask.io/download.html');\n    return false;\n    \n  } \n}\n\n\n","/Users/sudhanshusrivastava/Downloads/launchpad/src/hooks/useAdmin.js",["1309","1310","1311","1312","1313","1314","1315","1316","1317","1318","1319"],"import { ERC20_ABI, ERC20_ADDRESS, DECIMAL } from \"../config/erc20\";\nimport { PROXY_SALE,PROXY_SALE_ABI } from '../config/proxy'\nimport { SALE_ABI } from '../config/presale'\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useWeb3 } from \"./useWeb3\";\nimport { getSaleInfo, getSaleInfoCard, IsValidAddress, toFixedNumber, UseSale } from \"./useContract\";\nimport { ONEDAYINSECONDS } from \"../config/env\";\nimport { iconTheme, position, style } from \"./useToast\";\n\nexport const updatePresaleRate = async (saleInfo,saleAddress,account) =>{\n    const presaleRate = saleInfo.presaleRate;\n    const saleContact = await UseSale(saleAddress);\n    const data = saleContact.methods.setTokenRatePerEth(presaleRate).send({from: account});\n    await toast.promise(data, {\n        loading: 'Updating Presale Price ...',\n        success: 'Presale Price Updated Successfully',\n        error: (err) => `Error ! : ${err.toString()}`,\n    }, {\n        position:position.position,\n    style:style,\n    iconTheme: iconTheme\n    }\n    );\n}\n\nexport const updateMinBNB = async (saleInfo,saleAddress,account) =>{\n    const value = toFixedNumber(saleInfo.minEthLimit * 10 ** 18);\n    const saleContact = await UseSale(saleAddress);\n   \n    const data = saleContact.methods.setMinEthLimit(value.toString()).send({from: account});\n    await toast.promise(data, {\n        loading: 'Updating ...',\n        success: 'Data Updated Successfully',\n        error: (err) => `Error ! : ${err.toString()}`,\n    }, {\n        position:position.position,\n        style:style,\n        iconTheme: iconTheme\n    }\n    );\n\n}\n\nexport const updateMaxBNB = async (saleInfo,saleAddress,account) =>{\n    const value = toFixedNumber(saleInfo.maxEthLimit * 10 ** 18);\n    const saleContact = await UseSale(saleAddress);\n    const data = saleContact.methods.setMaxEthLimit(value.toString()).send({from: account});\n    await toast.promise(data, {\n        loading: 'Updating ...',\n        success: 'Data Updated Successfully',\n        error: (err) => `Error ! : ${err.toString()}`,\n    }, {\n        position:position.position,\n    style:style,\n    iconTheme: iconTheme\n    }\n    );\n\n}\n\nexport const updateSaleEvent = async (saleInfo,saleAddress,account) =>{\n    const value = saleInfo.startSale;\n    const saleContact = await UseSale(saleAddress);\n    const data = saleContact.methods.startPresale(value).send({from: account});\n    await toast.promise(data, {\n        loading: 'Manual Start Sale event ...',\n        success: 'Sale Started Successfully',\n        error: 'Error ! When Starting sale',\n    }, {\n        position:position.position,\n    style:style,\n    iconTheme: iconTheme\n    }\n    );\n\n}\n\nexport const updateStopEvent = async (saleAddress,account) =>{\n    const saleContact = await UseSale(saleAddress);\n    const data = saleContact.methods.closePresale().send({from: account});\n    await toast.promise(data, {\n        loading: 'Manual Stop Sale event ...',\n        success: 'Sale Stopped Successfully',\n        error: 'Error ! When Stopping sale',\n    }, {\n        position:position.position,\n        style:style,\n        iconTheme: iconTheme\n    }\n    );\n}\n\nexport const getUnsold = async (saleAddress,account) =>{\n    const saleContact = await UseSale(saleAddress);\n    const data = saleContact.methods.getUnsoldTokens().send({from: account});\n    await toast.promise(data, {\n        loading: 'Withraw Un Sold Tokens ...',\n        success: 'Withdrawn Successfully',\n        error: 'Error ! When Withdraw',\n    }, {\n        position:position.position,\n    style:style,\n    iconTheme: iconTheme\n    }\n    );\n\n}\n\nexport const withdrawBNB = async (saleAddress,account) =>{\n    const saleContact = await UseSale(saleAddress);\n    const data = saleContact.methods.withdrawBNB().send({from: account});\n    await toast.promise(data, {\n        loading: 'Withraw BNB ...',\n        success: 'Withdrawn BNB Successfully',\n        error: 'Error ! When Withdraw BNB',\n    }, {\n        position:position.position,\n    style:style,\n    iconTheme: iconTheme\n    }\n    );\n\n}\n\nexport const SetWhitelisted = async (saleAddress,value,account) => {\n    const saleContact = await UseSale(saleAddress);\n    const data = saleContact.methods.setWhitelist(value).send({from: account});\n\n    await toast.promise(data, {\n        loading: Boolean(value) ? 'Enabling Whitelist ...' : 'Disabling Whitelist ...',\n        success: Boolean(value) ? 'Whitelist Enabled' : 'Whitelist Disabled',\n        error: 'Error ! When Whitelisting',\n    }, {\n        position:position.position,\n        style:style,\n        iconTheme: iconTheme\n    }\n    );\n}\n\n\nexport const Finalise = async (saleAddress,account) =>{\n    const saleContact = await UseSale(saleAddress);\n    const data = saleContact.methods.finalizeSale().send({from: account});\n    await toast.promise(data, {\n        loading: 'Finalizing the sale ...',\n        success: 'Users can Claim their Tokens Now !',\n        error: 'Error ! When Finalising',\n    }, {\n        position:position.position,\n    style:style,\n    iconTheme: iconTheme\n    }\n    );\n\n}\n\nexport const updateTokenInfo = async (saleInfo,saleAddress,account) =>{\n    const DataFromSale = await getSaleInfoCard(saleAddress);\n    let value = [];\n    value.push(saleInfo.description && saleInfo.description ? saleInfo.description : DataFromSale.description);\n    value.push(saleInfo.website && saleInfo.website ? saleInfo.website : DataFromSale.social[0]);\n    value.push(saleInfo.twitter  && saleInfo.twitter ? saleInfo.twitter : DataFromSale.social[1]);\n    value.push(saleInfo.telegram && saleInfo.telegram ? saleInfo.telegram : DataFromSale.social[2]);\n    value.push(saleInfo.logo && saleInfo.logo ? saleInfo.logo : DataFromSale.logo);\n    // value.push(saleInfo.githup && saleInfo.githup ? saleInfo.githup : DataFromSale.social[5]);\n    // value.push(saleInfo.instagram && saleInfo.instagram ? saleInfo.instagram : DataFromSale.social[6]);\n    // value.push(saleInfo.discord && saleInfo.discord ? saleInfo.discord : DataFromSale.social[7]);\n    // value.push(saleInfo.reddit && saleInfo.reddit ? saleInfo.reddit : DataFromSale.social[8]);\n    // value.push(saleInfo.youtube && saleInfo.youtube ? saleInfo.youtube : DataFromSale.social[9]);\n\n    console.log(\"Data : \",value)\n\n    const saleContact = await UseSale(saleAddress);\n    const data = saleContact.methods.updateTokenInfo(value).send({from: account});\n    await toast.promise(data, {\n        loading: 'Updating ...',\n        success: 'Data Updated Successfully',\n        error: 'Error ! When Updating sale data',\n    }, {\n        position:position.position,\n        style:style,\n        iconTheme: iconTheme\n    }\n    );\n\n}\n\nexport const updateVestingInfo = async (saleInfo,saleAddress,account) =>{\n    const DataFromSale = await getSaleInfoCard(saleAddress);\n    const isvest = saleInfo.isVested && saleInfo.isVested ? saleInfo.isVested : DataFromSale.isVested;\n    const vestPercent = saleInfo.vestingPercent && saleInfo.vestingPercent ? saleInfo.vestingPercent*100 : DataFromSale.vestingPercent;\n    const vestInterval = saleInfo.vestingInterval && saleInfo.vestingInterval ? saleInfo.vestingInterval*ONEDAYINSECONDS : DataFromSale.vestingInterval;\n\n    const saleContact = await UseSale(saleAddress);\n    const data = saleContact.methods.setVestingInfo(isvest,vestInterval,vestPercent).send({from: account});\n    await toast.promise(data, {\n        loading: 'Updating ...',\n        success: 'Data Updated Successfully',\n        error: 'Error ! When Updating sale data',\n    }, {\n        position:position.position,\n        style:style,\n        iconTheme: iconTheme\n    }\n    );\n\n}\n\nexport const updatePancakeInfo = async (saleInfo,saleAddress,account) =>{\n    const DataFromSale = await getSaleInfoCard(saleAddress);\n    const saleContact = await UseSale(saleAddress);\n    const liquidityPercentage = await saleContact.methods.liquidityPercent().call()\n    const ispancake = saleInfo.isPancake && saleInfo.isPancake ? saleInfo.isPancake : DataFromSale.isPancake;\n    const pancakeRate = saleInfo.pancakeRate && saleInfo.pancakeRate ? saleInfo.pancakeRate : DataFromSale.pancakeRate;\n    const unlockOn = saleInfo.lpUnlockon && saleInfo.lpUnlockon ? saleInfo.lpUnlockon : DataFromSale.lpUnlockon;\n    const percent = saleInfo.liquidityPercent && saleInfo.liquidityPercent ? saleInfo.liquidityPercent : liquidityPercentage;\n    const data = saleContact.methods.setPancakeInfo(ispancake,pancakeRate,percent,unlockOn).send({from: account});\n    await toast.promise(data, {\n        loading: 'Updating ...',\n        success: 'Data Updated Successfully',\n        error: 'Error ! When Updating sale data',\n    }, {\n        position:position.position,\n    style:style,\n    iconTheme: iconTheme\n    }\n    );\n}\n\nexport const addWhitelistMembers = async (listOfMembers,saleAddress,account) =>{\n\n    var userList = [];\n    var bnbvalues = [];\nconsole.log(\"contract\" , listOfMembers,saleAddress,account);\n    Object.keys(listOfMembers).forEach(function (key) {\n            if((listOfMembers[key].user).length == 42){\n                userList.push(listOfMembers[key].user);\n                const amount = (parseFloat(listOfMembers[key].bnbvalue) * parseInt(10 ** 18)).toString();\n                bnbvalues.push(amount);\n            }\n    })\n      \n    const saleContact = await UseSale(saleAddress);\n    const data = saleContact.methods.addMultipleWhitelistedAddresses(userList,bnbvalues).send({from: account});\n    await toast.promise(data, {\n        loading: 'Adding Whitelist Members ...',\n        success: 'User(s) Whitelisted Successfully',\n        error: 'Error ! When Whitelisting Users',\n    }, {\n        position:position.position,\n    style:style,\n    iconTheme: iconTheme\n    }\n    );\n\n}\n\nexport const UploadCSVWhitelist = async(CSVdata,saleAddress,account) =>{\n    var userList = [];\n    var bnbvalues = [];\n    await CSVdata.map(async(index)=>{\n        var user = Object.values(index);\n        const valid = await IsValidAddress(user[0]);\n        if(!valid){\n            toast.error(`Non Valid Address (${user[0]}) Ignored !`,\n            {\n                position:position.position,\n    style:style,\n    iconTheme: iconTheme\n            });\n            return false;\n        }\n        const amount =toFixedNumber(parseFloat(user[1]) * 10 ** 18)\n        console.log(\"User :\", userList)\n        console.log(\"BNB :\", bnbvalues)\n        if(user[0].length == 42){\n        userList.push(user[0]);\n        bnbvalues.push(amount.toString());\n        }\n    });\n    if(userList.length > 200){\n        toast.error('Maximum 200 entries is restricted !', {\n            position:position.position,\n            style:style,\n            iconTheme: iconTheme\n        })\n        return false;\n    }\n    const saleContact = await UseSale(saleAddress);\n    const data = saleContact.methods.addMultipleWhitelistedAddresses(userList,bnbvalues).send({from: account});\n    await toast.promise(data, {\n        loading: 'Adding Whitelist Members ...',\n        success: 'User(s) Whitelisted Successfully',\n        error: 'Error ! When Whitelisting Users',\n    }, {\n        position:position.position,\n    style:style,\n    iconTheme: iconTheme\n    }\n    );\n}\n\n\nexport const getUnsoldtokentrending = async (saleAddress,account) =>{\n    const saleContact = await UseSale(saleAddress);\n    const data = await saleContact.methods.getUnsoldTokensBalance().call();\n    console.log(\"data\" , data);\n    return data;\n}","/Users/sudhanshusrivastava/Downloads/launchpad/src/hooks/filter.js",["1320","1321","1322","1323","1324","1325","1326","1327","1328","1329","1330","1331","1332","1333","1334","1335","1336","1337","1338","1339","1340","1341","1342","1343","1344","1345","1346","1347","1348","1349","1350","1351","1352","1353","1354","1355","1356","1357","1358","1359","1360","1361"],"import { COINS, HC, STATUS } from \"../config/env\";\nimport { getAccount } from \"./useAccount\";\nimport { getSaleInfoCard, UseTokenInfo } from \"./useContract\";\nimport { isSaleLive, isUpcoming } from \"./useProjects\";\n\n\nexport const tokenfilter = async(data , coin , status)=>{\n    var tokenfilter = [];\n    var hcfilter = [];\n    var coinfilter = [];\n    var statusfilter = [];\n    var coindata = (coin.length > 0) ? coin : COINS;\n    var statusdata = (status.length > 0) ? status : STATUS;\n    console.log(\"coinstatus\" , coindata , statusdata);\n    // data.filter((item)=>{\n    //      coindata.includes(item);\n        // arr1.some(r=> arr2.includes(r))\n    // });\n    var filter = []\n    for(var i = 0 ; i<data.length; i++){\n        var symbol;\n        console.log(\"for\");\n        \n        if(data[i]._usewithToken == \"0x0000000000000000000000000000000000000000\"){\n                symbol = \"BNB\";\n                console.log(\"bnbn\");\n        }\n        else{\n            var tkninfo = await UseTokenInfo(data[i]?._usewithToken);\n            symbol = tkninfo.symbol\n            console.log(\"symbol\");\n        }\n     console.log(\"symbol\" , symbol  , coindata.includes(symbol));\n        if(coindata.includes(symbol)){\n            if(statusdata.includes(\"Upcoming\")){\n                isUpcoming(data[i]._start) && filter.push(data[i]);\n            }\n            if(statusdata.includes(\"Live\")){\n               ( data[i]._end*1000 >= Date.now() &&  data[i]._start*1000 <= Date.now()) && filter.push(data[i]);\n            }\n            if(statusdata.includes(\"Ended\")){\n                data[i]._end*1000 < Date.now() && filter.push(data[i]);\n            }\n        }\n    }\n    \n    console.log(\"statusfilter\" , data);\n    return filter\n}\n\nexport const Sorthc = async(data , type) =>{\n    var HC = data;\n    if(type == \"ascending\"){\n        data.sort(function(a,b) {return (a.title > b.title) ? 1 : ((b.title > a.title) ? -1 : 0);} );\n    }\n    if(type == \"descending\"){\n        data.sort(function(a,b) {return (a.title < b.title) ? 1 : ((b.title < a.title) ? -1 : 0);} );\n    }\n    return data;\n}\n\nexport const Sortcoin = async(data , type) =>{\n    var HC = data;\n    if(type == \"ascending\"){\n        data.sort(function(a,b) {return (a.title > b.title) ? 1 : ((b.title > a.title) ? -1 : 0);} );\n    }\n    if(type == \"descending\"){\n        data.sort(function(a,b) {return (a.title < b.title) ? 1 : ((b.title < a.title) ? -1 : 0);} );\n    }\n    return data;\n}\n\nexport const sortstatus = async(data , type) =>{\n    var HC = data;\n    if(type == \"ascending\"){\n        data.sort(function(a,b) {return (a.title > b.title) ? 1 : ((b.title > a.title) ? -1 : 0);} );\n    }\n    if(type == \"descending\"){\n        data.sort(function(a,b) {return (a.title < b.title) ? 1 : ((b.title < a.title) ? -1 : 0);} );\n    }\n    return data;\n}\n\n\nexport const privatesalefilterby = async(data , type , isuser) => {\n    let SaleInfoCards = [];\n    for(var i = 0 ; i<data?.length ; i++){\n        // let saleInfo = await getSaleInfoCard(data[i]._sale);\n        if(type == \"Upcoming\"){\n            // if(!isuser){\n            //     if(saleInfo.isWhitelisted){\n            //         if(saleInfo?.useWithToken == \"0x0000000000000000000000000000000000000000\"){\n            //             // saleInfo.coin = \"BNB\";\n            //             // Object.assign({coin:\"BNB\"} , saleInfo);\n            //             saleInfo = {...saleInfo, ...{coin:\"BNB\"}};\n            //             // saleInfo[\"coin\"] = \"BNB\"\n            //             if(isUpcoming(saleInfo.startTime))\n            //             SaleInfoCards.push(saleInfo);\n                    \n            //         }\n            //         else{\n            //             const newdata = await UseTokenInfo(saleInfo.useWithToken);\n            //             // saleInfo.coin = newdata.symbol;\n            //             // Object.assign(saleInfo , {coin:newdata.symbol});\n            //             saleInfo = {...saleInfo, ...{coin:newdata.symbol}};\n            //             // saleInfo[\"coin\"] = newdata.symbol\n            //             if(isUpcoming(saleInfo.startTime))\n            //             SaleInfoCards.push(saleInfo);\n                    \n            //         }\n            //     }\n            // }\n\n            // if(isuser){\n            //     const account = getAccount();\n            //     if(saleInfo.isWhitelisted && saleInfo.owner == account){\n            //         if(saleInfo?.useWithToken == \"0x0000000000000000000000000000000000000000\"){\n            //             // saleInfo.coin = \"BNB\";\n            //             // Object.assign({coin:\"BNB\"} , saleInfo);\n            //             saleInfo = {...saleInfo, ...{coin:\"BNB\"}};\n            //             // saleInfo[\"coin\"] = \"BNB\"\n            //             if(isUpcoming(saleInfo.startTime))\n            //             SaleInfoCards.push(saleInfo);\n                    \n            //         }\n            //         else{\n            //             const newdata = await UseTokenInfo(saleInfo.useWithToken);\n            //             // saleInfo.coin = newdata.symbol;\n            //             // Object.assign(saleInfo , {coin:newdata.symbol});\n            //             saleInfo = {...saleInfo, ...{coin:newdata.symbol}};\n            //             // saleInfo[\"coin\"] = newdata.symbol\n            //             if(isUpcoming(saleInfo.startTime))\n            //             SaleInfoCards.push(saleInfo);\n                    \n            //         }\n            //     }\n            // }\n            var valid = isUpcoming(data[i]._start)\n            valid && SaleInfoCards.push(data[i]);\n        }\n        if(type == \"Live\"){\n            var valid = ( data[i]._end*1000 >= Date.now() &&  data[i]._start*1000 <= Date.now());\n            valid && SaleInfoCards.push(data[i]);\n\n            // if(!isuser){\n            //     if(saleInfo.isWhitelisted){\n            //         if(saleInfo?.useWithToken == \"0x0000000000000000000000000000000000000000\"){\n            //             // saleInfo.coin = \"BNB\";\n            //             // Object.assign({coin:\"BNB\"} , saleInfo);\n            //             saleInfo = {...saleInfo, ...{coin:\"BNB\"}};\n            //             // saleInfo[\"coin\"] = \"BNB\"\n            //             if(isSaleLive(saleInfo.startTime , saleInfo.endTime , saleInfo.isPresaleOpen))\n            //             SaleInfoCards.push(saleInfo);\n                    \n            //         }\n            //         else{\n            //             const newdata = await UseTokenInfo(saleInfo.useWithToken);\n            //             // saleInfo.coin = newdata.symbol;\n            //             // Object.assign(saleInfo , {coin:newdata.symbol});\n            //             saleInfo = {...saleInfo, ...{coin:newdata.symbol}};\n            //             // saleInfo[\"coin\"] = newdata.symbol\n            //             if(isSaleLive(saleInfo.startTime , saleInfo.endTime , saleInfo.isPresaleOpen))\n            //             SaleInfoCards.push(saleInfo);\n                    \n            //         }\n            //     }\n            // }\n\n            // if(isuser){\n            //     const account = getAccount();\n            //     if(saleInfo.isWhitelisted && saleInfo.owner == account){\n            //         if(saleInfo?.useWithToken == \"0x0000000000000000000000000000000000000000\"){\n            //             // saleInfo.coin = \"BNB\";\n            //             // Object.assign({coin:\"BNB\"} , saleInfo);\n            //             saleInfo = {...saleInfo, ...{coin:\"BNB\"}};\n            //             // saleInfo[\"coin\"] = \"BNB\"\n            //             if(isSaleLive(saleInfo.startTime , saleInfo.endTime , saleInfo.isPresaleOpen))\n            //             SaleInfoCards.push(saleInfo);\n            //         }\n            //         else{\n            //             const newdata = await UseTokenInfo(saleInfo.useWithToken);\n            //             // saleInfo.coin = newdata.symbol;\n            //             // Object.assign(saleInfo , {coin:newdata.symbol});\n            //             saleInfo = {...saleInfo, ...{coin:newdata.symbol}};\n            //             // saleInfo[\"coin\"] = newdata.symbol\n            //             if(isSaleLive(saleInfo.startTime , saleInfo.endTime , saleInfo.isPresaleOpen))\n            //             SaleInfoCards.push(saleInfo);\n                    \n            //         }\n            //     }\n            // }\n            // var valid = isSaleLive(data[i]._start ,  data[i]._end)\n            // valid && SaleInfoCards.push(data[i]);\n        }\n        if(type == \"Ended\"){\n\n            // if(!isuser){\n            //     if(saleInfo.isWhitelisted){\n            //         if(saleInfo?.useWithToken == \"0x0000000000000000000000000000000000000000\"){\n            //             // saleInfo.coin = \"BNB\";\n            //             // Object.assign({coin:\"BNB\"} , saleInfo);\n            //             saleInfo = {...saleInfo, ...{coin:\"BNB\"}};\n            //             // saleInfo[\"coin\"] = \"BNB\"\n            //             if(saleInfo.endTime*1000 < Date.now())\n            //             SaleInfoCards.push(saleInfo);\n                    \n            //         }\n            //         else{\n            //             const newdata = await UseTokenInfo(saleInfo.useWithToken);\n            //             // saleInfo.coin = newdata.symbol;\n            //             // Object.assign(saleInfo , {coin:newdata.symbol});\n            //             saleInfo = {...saleInfo, ...{coin:newdata.symbol}};\n            //             // saleInfo[\"coin\"] = newdata.symbol\n            //             if(saleInfo.endTime*1000 < Date.now())\n            //             SaleInfoCards.push(saleInfo);\n                    \n            //         }\n            //     }\n            // }\n\n            // if(isuser){\n            //     const account = getAccount();\n            //     if(saleInfo.isWhitelisted && saleInfo.owner == account){\n            //         if(saleInfo?.useWithToken == \"0x0000000000000000000000000000000000000000\"){\n            //             // saleInfo.coin = \"BNB\";\n            //             // Object.assign({coin:\"BNB\"} , saleInfo);\n            //             saleInfo = {...saleInfo, ...{coin:\"BNB\"}};\n            //             // saleInfo[\"coin\"] = \"BNB\"\n            //             if(saleInfo.endTime*1000 < Date.now())\n            //             SaleInfoCards.push(saleInfo);\n            //         }\n            //         else{\n            //             const newdata = await UseTokenInfo(saleInfo.useWithToken);\n            //             // saleInfo.coin = newdata.symbol;\n            //             // Object.assign(saleInfo , {coin:newdata.symbol});\n            //             saleInfo = {...saleInfo, ...{coin:newdata.symbol}};\n            //             // saleInfo[\"coin\"] = newdata.symbol\n            //             if(saleInfo.endTime*1000 < Date.now())\n            //             SaleInfoCards.push(saleInfo);\n                    \n            //         }\n            //     }\n            // }\n            var valid = data[i]._end*1000 < Date.now();\n            valid && SaleInfoCards.push(data[i]);\n        }\n    }\n    return SaleInfoCards;\n}\n\nexport const privatesalesortby = async(data , type) => {\n    var sortedarray = [];\n    console.log(\"sort data\" , data);\n    // data.map((val , i) => {\n        if(type == \"Start Time\"){\n            data.sort(function(a,b) {return (a._start > b._start) ? 1 : ((b._start > a._start) ? -1 : 0);} );\n        }\n\n        if(type == \"End Time\"){\n            data.sort(function(a,b) {return (a._end > b._end) ? 1 : ((b._end > a._end) ? -1 : 0);} );\n        }\n    // })\n    console.log(\"sort data\" , data);\n    return data;\n}\n\n\nexport const tokenfilterlaunchpad = async(data , coin , status , type)=>{\n    var tokenfilter = [];\n    var hcfilter = [];\n    var coinfilter = [];\n    var statusfilter = [];\n    var coindata = (coin.length > 0) ? coin : COINS;\n    var statusdata = (status.length > 0) ? status : STATUS;\n    console.log(\"coinstatus\" , coindata , statusdata);\n    // data.filter((item)=>{\n    //      coindata.includes(item);\n        // arr1.some(r=> arr2.includes(r))\n    // });\n    var filter = []\n    for(var i = 0 ; i<data.length; i++){\n        var symbol;\n        console.log(\"for\");\n        \n        if(data[i]._usewithToken == \"0x0000000000000000000000000000000000000000\"){\n                symbol = \"BNB\";\n                console.log(\"bnbn\");\n        }\n        else{\n            var tkninfo = await UseTokenInfo(data[i]?._usewithToken);\n            symbol = tkninfo.symbol\n            console.log(\"symbol\");\n        }\n     console.log(\"symbol\" , symbol  , coindata.includes(symbol));\n        if(coindata.includes(symbol)){\n            if(statusdata.includes(\"Upcoming\")){\n                isUpcoming(data[i]._start) && filter.push(data[i]);\n            }\n            if(statusdata.includes(\"Live\")){\n               ( data[i]._end*1000 >= Date.now() &&  data[i]._start*1000 <= Date.now()) && filter.push(data[i]);\n            }\n            if(statusdata.includes(\"Ended\")){\n                data[i]._end*1000 < Date.now() && filter.push(data[i]);\n            }\n\n            \n        }\n    }\n    console.log(\"filter \" , filter , type);\n\n    if(type.includes(\"Launchpad\") && !type.includes(\"Fairlaunch\")){\n        var fil = [true];\n        var filterdata = filter.filter(value => ((fil.includes(value._launchpadType)))); \n        console.log(\"filtereddata\" , filterdata);\n        return filterdata; \n    }\n    if(type.includes(\"Fairlaunch\") && !type.includes(\"Launchpad\")){\n        var fil = [false];\n        var filterdata = filter.filter(value => ((fil.includes(value._launchpadType))));  \n        return filterdata;\n    }\n    \n    if(type.includes(\"Launchpad\") && type.includes(\"Fairlaunch\")){\n        return filter;\n    }\n\n    \n    \n    console.log(\"statusfilter\" , data);\n    if(type.length == 0)\n    return filter\n}\n\nexport const admintokenfilterlaunchpad = async(data , coin , status , type)=>{\n    var tokenfilter = [];\n    var hcfilter = [];\n    var coinfilter = [];\n    var statusfilter = [];\n    var coindata = (coin.length > 0) ? coin : COINS;\n    var statusdata = (status.length > 0) ? status : STATUS;\n    console.log(\"coinstatus\" , coindata , statusdata);\n    // data.filter((item)=>{\n    //      coindata.includes(item);\n        // arr1.some(r=> arr2.includes(r))\n    // });\n    var filter = []\n    for(var i = 0 ; i<data.length; i++){\n        var symbol;\n        console.log(\"for\");\n        \n        if(data[i]._usewithToken == \"0x0000000000000000000000000000000000000000\"){\n                symbol = \"BNB\";\n                console.log(\"bnbn\");\n        }\n        else{\n            var tkninfo = await UseTokenInfo(data[i]?._usewithToken);\n            symbol = tkninfo.symbol\n            console.log(\"symbol\");\n        }\n     console.log(\"symbol\" , symbol  , coindata.includes(symbol));\n        if(coindata.includes(symbol)){\n            if(statusdata.includes(\"Upcoming\")){\n                isUpcoming(data[i]._start) && filter.push(data[i]);\n            }\n            if(statusdata.includes(\"Live\")){\n               ( data[i]._end*1000 >= Date.now() &&  data[i]._start*1000 <= Date.now()) && filter.push(data[i]);\n            }\n            if(statusdata.includes(\"Ended\")){\n                data[i]._end*1000 < Date.now() && filter.push(data[i]);\n            }\n\n            \n        }\n    }\n    console.log(\"filter \" , filter , type);\nvar launchpad = [];\nvar fairlaunch = [];\nvar privatesale = [];\n    if(type.includes(\"Launchpad\")){\n        var fil = [true];\n        var fin = [false];\n        var filterdata = filter.filter(value => ((fil.includes(value._launchpadType)))); \n        launchpad = filterdata.filter(value => ((fin.includes(value._isWhitelisted))))\n        console.log(\"filtereddata\" , launchpad);\n        // return filterdata; \n    }\n    if(type.includes(\"Fairlaunch\")){\n        var fil = [false];\n        fairlaunch = filter.filter(value => ((fil.includes(value._launchpadType))));  \n        // return filterdata;\n    }\n    if(type.includes(\"Privatesale\")){\n        var fil = [true];console.log(\"privatesale\");\n        privatesale = filter.filter(value => ((fil.includes(value._isWhitelisted))));  \n        // return filterdata;\n    }\n    \n    if(type.includes(\"Launchpad\") && type.includes(\"Fairlaunch\") && type.includes(\"Privatesale\")){\n        return filter;\n    }\n    let filteredadmindata = launchpad.concat(fairlaunch);\n    let finaldata = filteredadmindata.concat(privatesale)\n      \n\n    \n    \n    console.log(\"statusfilter\" , data);\n    if(type.length == 0)\n    return filter\n    else\n    return finaldata\n}\n\n\n\n\n\n\n\n\n//search\nexport const searchdata = ()=> {\n    // Declare variables\n    var input, filter, table, tr, td, i, txtValue;\n    input = document.getElementById(\"myInput\");\n    filter = input.value.toUpperCase();\n    table = document.getElementById(\"myTable\");\n    tr = table.getElementsByTagName(\"tr\");\n  \n    // Loop through all table rows, and hide those who don't match the search query\n    for (i = 0; i < tr.length; i++) {\n      td = tr[i].getElementsByTagName(\"td\")[0];\n      if (td) {\n        txtValue = td.textContent || td.innerText;\n        if (txtValue.toUpperCase().indexOf(filter) > -1) {\n          tr[i].style.display = \"\";\n        } else {\n          tr[i].style.display = \"none\";\n        }\n      }\n    }\n  }\n\n\n\n\n\n\n\n\n","/Users/sudhanshusrivastava/Downloads/launchpad/src/hooks/useBuy.js",["1362","1363","1364","1365","1366","1367","1368","1369","1370","1371","1372"],"import { ERC20_ABI, ERC20_ADDRESS, DECIMAL } from \"../config/erc20\";\nimport { PROXY_SALE,PROXY_SALE_ABI } from '../config/proxy'\nimport { SALE_ABI } from '../config/presale'\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useWeb3 } from \"./useWeb3\";\nimport { toFixedNumber, UseSale } from \"./useContract\";\nimport { getAccount } from \"./useAccount\";\nimport { userinvestedhook } from \"./usebackend\";\nimport { iconTheme, position, style } from \"./useToast\";\n\nexport const calculateBuy = async(saleAddress,bnbValue)=>{\n    const saleContact = await UseSale(saleAddress);\n    const bnbValues = toFixedNumber(bnbValue * 10 **18);\n    const willGet = await saleContact.methods.getTokensPerEth(bnbValues.toString()).call();\n    return willGet;\n}\n\nexport const BuyToken = async(saleAddress,useramount,isMax,maxNumber,account,decimal , buytoken)=>{\n    console.log(\"buytoken data\" , saleAddress,useramount,isMax,maxNumber,account,decimal);\n    const web3 = await useWeb3();\n    const saleContact = await UseSale(saleAddress);\n    const amount = !isMax? toFixedNumber(useramount * 10 **decimal): maxNumber ;\n    if(buytoken == \"BNB\")\n        var data =  saleContact.methods.contribute(amount.toString()).send({ from: account,value: amount.toString() })\n    else \n    var data =  saleContact.methods.contribute(amount.toString()).send({ from: account})\n    // const data = web3.eth.sendTransaction({ from: account, to: saleAddress, value: amount.toString() })\n    \n    await toast.promise(data, {\n        loading: 'Making a Buy Token Request...',\n        success: 'Bougt Token Successfully',\n        error: 'Error ! When Buying Token',\n    }, {\n        position:position.position,\n    style:style,\n    iconTheme: iconTheme\n    }\n    );\n    let wallet = getAccount();\n    if(wallet){\n        wallet = wallet.toString();\n        wallet = wallet.toLowerCase();\n        console.log(\"wallet\" , wallet);\n        let payload = {\n            walletaddress :wallet,\n            saleaddress : saleAddress,\n            amount : useramount\n        }\n        let usercontribute = await userinvestedhook(payload);\n    }\n}\n\nexport const claimToken = async(saleAddress,account) => {\n    const saleContact = await UseSale(saleAddress);\n    const data = saleContact.methods.claimTokens().send({ from: account });\n    await toast.promise(data, {\n        loading: 'Requesting for Claim Tokens...',\n        success: 'Tokens Claimed Successfully',\n        error: 'Error ! When Claiming Token',\n    }, {\n        position:position.position,\n        style:style,\n        iconTheme: iconTheme\n    }\n    );\n}\n\n","/Users/sudhanshusrivastava/Downloads/launchpad/src/config/env.js",["1373","1374"],"import bsc from \"../images/bsc.png\"\r\nimport polygon from \"../images/polygon.png\"\r\nimport bsctestnet from \"../images/bsctestnet.png\"\r\nimport eth from \"../images/eth.png\"\r\nimport ropsten from \"../images/ropsten.png\"\r\n// export const RPC_URL = \"https://bsc-dataseed1.binance.org/\";\r\n// export const CHAIN_ID = 56;\r\n  \r\nexport const RPC_URL = \"https://data-seed-prebsc-1-s1.binance.org:8545/\";\r\n export const CHAIN_ID = 97;\r\n \r\n export const ONEDAYINSECONDS = 86400;\r\n\r\n export const userFee = 5\r\n\r\n export const userFeeWithtoken = 4\r\n\r\n export const CHAINS = [\r\n    {\r\n        NAME: \"BSC\",\r\n        RPC_URL:\"https://bsc-dataseed1.binance.org/\",\r\n        CHAIN_ID:56,\r\n        IMAGE: bsc,\r\n        // ROUTER: \"0x10ED43C718714eb63d5aA57B78B54704E256024E\" //pancake\r\n        ROUTER: \"0x2a09fba034e26852ff38d5393f3fd15748518791\" \r\n    },\r\n   {\r\n        NAME: \"BSC-TEST\",\r\n        RPC_URL:\"https://data-seed-prebsc-1-s1.binance.org:8545/\",\r\n        CHAIN_ID:97,\r\n        IMAGE: bsctestnet,\r\n        ROUTER: \"0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3\", //pancake\r\n        // ROUTER: \"0x2a09fba034e26852ff38d5393f3fd15748518791\"\r\n        LIQUIDITY_TOKEN_ADDRESS : \"0xe00729604d5365E6C5C4Ca5Ef42Bc69bD703709E\",\r\n        STANDARD_TOKEN_ADDRESS : \"0x634C906261B3c1Bd9cCc2CEBFceE545dc856A847\",\r\n        LOCK_ADDRESS : \"0xC4f0edeB6BB56F145b1bBb9FC1cEe9A557b28358\",\r\n        TRANSACTION : 'https://testnet.bscscan.com/tx/'\r\n    },\r\n    {\r\n        NAME: \"Avalanche-TEST\",\r\n        RPC_URL:\"https://api.avax-test.network/ext/bc/C/rpc\",\r\n        CHAIN_ID:43113,\r\n        IMAGE: bsctestnet,\r\n        ROUTER: \"0x29035dEbC68181B33183E3A7fb9291bC2815644F\", //pancake\r\n        // ROUTER: \"0x2a09fba034e26852ff38d5393f3fd15748518791\"\r\n        LIQUIDITY_TOKEN_ADDRESS : \"0xf6925d546603FB10A88b493DABfA71f341a56d1e\",\r\n        STANDARD_TOKEN_ADDRESS : \"0xAdf85f277B0e1D0A92092724Bb5901Db2FC33155\",\r\n        LOCK_ADDRESS : \"0xa86fcd08e7692Ab47c74D45b7CdDEf98673f8191\", // 0xd915682d1b33e142f0B1F4822502702e11e2F9e8 old\r\n        BNB : \"0x0000000000000000000000000000000000000000\",\r\n        BUSD : \"0xd7613f4F96d039f9F15B75D51232719D220B047e\",\r\n        USDT : \"0xd7613f4F96d039f9F15B75D51232719D220B047e\",\r\n        USDC : \"0xd7613f4F96d039f9F15B75D51232719D220B047e\",\r\n        TRANSACTION : \"https://testnet.snowtrace.io/tx/\"\r\n    },\r\n    // {\r\n    //     NAME: \"BSC\",\r\n    //     RPC_URL:\"https://bsc-dataseed1.binance.org/\",\r\n    //     CHAIN_ID:56,\r\n    //     IMAGE: bsc,\r\n    //     // ROUTER: \"0x10ED43C718714eb63d5aA57B78B54704E256024E\" //pancake\r\n    //     ROUTER: \"0x10ED43C718714eb63d5aA57B78B54704E256024E\" ,\r\n    //     LIQUIDITY_TOKEN_ADDRESS : \"0xa08716AB5eb7694769fa38eAABEE730d2D93EB9c\",\r\n    //     STANDARD_TOKEN_ADDRESS : \"0x6eB5022e05007647E1bC23AEDF2164F3CFb86b36\",\r\n    //     LOCK_ADDRESS : \"0x2e8bAe13157A414AcA1a50E24a08c2357B2d65C0\", // 0xd915682d1b33e142f0B1F4822502702e11e2F9e8 old\r\n    //     BNB : \"0x0000000000000000000000000000000000000000\",\r\n    //     BUSD : \"0xe9e7cea3dedca5984780bafc599bd69add087d56\",\r\n    //     USDT : \"0x55d398326f99059fF775485246999027B3197955\",\r\n    //     USDC : \"0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d\",\r\n    //     TRANSACTION : \"https://bscscan.com/tx/\"\r\n    // },\r\n    {\r\n        NAME: \"POLYGON\",\r\n        RPC_URL:\"https://polygon-rpc.com\",\r\n        CHAIN_ID:137,\r\n        IMAGE: polygon,\r\n        // ROUTER: \"0x10ED43C718714eb63d5aA57B78B54704E256024E\" //pancake\r\n        ROUTER: \"0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff\" //polygon mainnet router address \r\n    },\r\n//  {\r\n//         NAME: \"ETH\",\r\n//         RPC_URL:\"https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\",\r\n//         CHAIN_ID:56,\r\n//         IMAGE: eth,\r\n//         // ROUTER: \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\" //pancake\r\n//         ROUTER: \"0x2a09fba034e26852ff38d5393f3fd15748518791\"\r\n//     },\r\n//   {\r\n//         NAME: \"ROPSTEN\",\r\n//         RPC_URL:\"https://ropsten.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\",\r\n//         CHAIN_ID:3,\r\n//         IMAGE: ropsten,\r\n//         // ROUTER: \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\" //pancake\r\n//         ROUTER: \"0x2a09fba034e26852ff38d5393f3fd15748518791\"\r\n//     }\r\n];\r\n\r\n// export const API_URL = \"http://localhost:7097\"\r\n\r\n// export const API_URL = \"http://43.204.99.101:7097\"\r\n\r\nexport const API_URL = \"https://api.cryptolaunchpad.finance\"\r\n\r\n\r\n\r\n\r\nexport const FUND_RECEIVER = \"0x12ABeD5514FD6F6716F1154a1Be05beD9E1a11dF\"\r\n\r\nexport const COINS = [\"BNB\" , \"BUSD\" , \"USDT\" , \"USDC\" , \"ETH\" , \"MATIC\" , \"AVAX\" , \"CRO\" , \"FTM\"];\r\n\r\nexport const HC = [\"Presale\" , \"Fairlaunch\" , \"Auction\" , \"Subscription\"];\r\n\r\nexport const STATUS = [\"Upcoming\" , \"Live\" , \"Ended\"];\r\n\r\nexport const TOKEN_FEE = 0.01;\r\n\r\nexport const ZEROTH_ADDRESS = \"0x0000000000000000000000000000000000000000\"\r\n\r\n\r\n// export const WBNB_Address = \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"; // BSC Mainet\r\n\r\n// export const WBNB_Address = \"0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd\";  //BSC Testnet\r\n\r\nexport const WBNB_Address = \"0x1d308089a2d1ced3f1ce36b1fcaf815b07217be3\"\r\n","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/Adminheader.js",["1375","1376","1377","1378","1379","1380","1381","1382","1383"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport { Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n\n// import 'font-awesome/css/font-awesome.min.css';\n\n\n\n\n\nimport doc from \"../../images/doc.svg\"\nimport deposit from \"../../images/deposit.svg\"\n\nimport referral from \"../../images/referal.png\"\n\nimport { NavLink } from \"react-router-dom\";\nimport { logouthook } from '../../hooks/usebackend';\nimport Walletmodal from '../Walletmodal';\n\n\n\n\nclass Adminheader extends Component \n{\n   \n    showMobile()\n    {\n      \n        //  document.getElementById(\"mobile_nav_item\").classList.toggle('active');\n        document.getElementById(\"mobile_nav_item\").classList.toggle(\"left_stye\");\n        document.getElementById(\"mobileLayer\").classList.toggle('active');\n        document.getElementById(\"burger\").classList.toggle('clicked');  \n        document.getElementById(\"burger\").classList.toggle(\"burger_stye\")   \n        \n    }\n\n   constructor(props)\n   {\n       super(props);\n       this.state = {location:false,\n      \n        currentChain: 0,\n        settingsModal : false,\n        accountInfo : localStorage.getItem(\"accountInfo\"),\n        walletModal : false\n    }\n   }\n   onDismiss(){\n    this.setState({ walletModal: false });\n}\n  componentDidMount()\n   {\n    localStorage.setItem(\"CHAIN\" , 2)\n    window.addEventListener('scroll', function() {\n        if(window.pageYOffset >100)\n        {\n            document.getElementById(\"header\").classList.add('header-scrolled');\n            \n        }\n        else{\n            document.getElementById(\"header\").classList.remove('header-scrolled');\n\n        }\n    });\n\n   \n   }\n\n   handlelogout = async()=>{\n    await logouthook();\n    window.location.href = window.location.origin+\"/login\";\n   }\n\n\n    render() {\n    const {location} = this.props;\n    const {walletModal, settingsModal } = this.state\n\n\n\n\t\treturn (\n\n\n           <div>\n\n                          \n<div id=\"mobileLayer\">\n                   <div id=\"header\" className=\"fixed-top-navbar d-none d-md-block\">\n               <div className=\"container-fluid\" id=\"mobileshow\">\n               <header className={`${location}`}>\n                   <div className='d-flex headerleft'>\n                        <NavLink to=\"/\" className='mr-lg-5'><span className='logo_img_sm'/></NavLink>                  \n                   </div>\n      \n\n<div className='d-block d-lg-block web_menu'>\n<div className=\"d-flex align-items-center justify-content-between py-0 header_flex\">\n\n  \n      \n       <div className='d-flex align-items-center nav_parnt'>\n\n<div className='nav_parnt_2'>\n    <div className=\"nav-menu\">\n          <ul className=\"pl-0 mb-0\">\n         \n        <Dropdown className='filter_dropdown '>\n        <Dropdown.Toggle id=\"dropdown-basic\" className='table_filter_icon'>\n        <button className=\"get-started-btn rounded_btn_wal\">\n        <i class=\"fa fa-user-o\" aria-hidden=\"true\"></i>\n        </button>\n        {/* <button className=\"get-started-btn rounded_btn_wal\">\n       Connect wallet\n        </button> */}\n        {/* {(!this.state.accountInfo == \"\" || !sessionStorage.getItem(\"accountInfo\"))?\n            <button className=\"get-started-btn rounded_btn_wal\" onClick={() => this.setState({ walletModal: true })}>\n                        <svg viewBox=\"0 0 24 24\" height=\"24\" width=\"24\" color=\"textSubtle\" xmlns=\"http://www.w3.org/2000/svg\" class=\"sc-bdnxRM xpLe\"><path d=\"M19.43 12.98C19.47 12.66 19.5 12.34 19.5 12C19.5 11.66 19.47 11.34 19.43 11.02L21.54 9.37C21.73 9.22 21.78 8.95 21.66 8.73L19.66 5.27C19.54 5.05 19.27 4.97 19.05 5.05L16.56 6.05C16.04 5.65 15.48 5.32 14.87 5.07L14.49 2.42C14.46 2.18 14.25 2 14 2H9.99996C9.74996 2 9.53996 2.18 9.50996 2.42L9.12996 5.07C8.51996 5.32 7.95996 5.66 7.43996 6.05L4.94996 5.05C4.71996 4.96 4.45996 5.05 4.33996 5.27L2.33996 8.73C2.20996 8.95 2.26996 9.22 2.45996 9.37L4.56996 11.02C4.52996 11.34 4.49996 11.67 4.49996 12C4.49996 12.33 4.52996 12.66 4.56996 12.98L2.45996 14.63C2.26996 14.78 2.21996 15.05 2.33996 15.27L4.33996 18.73C4.45996 18.95 4.72996 19.03 4.94996 18.95L7.43996 17.95C7.95996 18.35 8.51996 18.68 9.12996 18.93L9.50996 21.58C9.53996 21.82 9.74996 22 9.99996 22H14C14.25 22 14.46 21.82 14.49 21.58L14.87 18.93C15.48 18.68 16.04 18.34 16.56 17.95L19.05 18.95C19.28 19.04 19.54 18.95 19.66 18.73L21.66 15.27C21.78 15.05 21.73 14.78 21.54 14.63L19.43 12.98ZM12 15.5C10.07 15.5 8.49996 13.93 8.49996 12C8.49996 10.07 10.07 8.5 12 8.5C13.93 8.5 15.5 10.07 15.5 12C15.5 13.93 13.93 15.5 12 15.5Z\"></path></svg>\n                        \n            </button>:\n            <button  onClick={() => {this.setState({ accountInfo: \"\" });\n                localStorage.clear();\n                sessionStorage.clear();\n            }}>\n            {`${this.state.accountInfo.substring(0, 5)}...${this.state.accountInfo.substring(38,42)}`}\n</button>\n           \n    } */}\n\n\n        </Dropdown.Toggle>\n        <Dropdown.Menu className='table_dropdown_menu'>\n        <Dropdown.Item className='link_text_gren' onClick={this.handlelogout}>\n         \n         \n     \n        <Link to=\"/login\" className='link_text' onClick={this.handlelogout}>Logout</Link>\n       </Dropdown.Item>\n        \n        </Dropdown.Menu>\n        </Dropdown>\n\n        {(this.state.accountInfo == \"\" || this.state.accountInfo == null) ?\n              <button className='get-started-btn rounded_btn_wal ml-2' onClick={() => this.setState({ walletModal: true })}>\n        <i class=\"fa fa-credit-card-alt\" aria-hidden=\"true\"></i>\n                \n              </button>\n              :\n              <button  className='get-started-btn ml-2' onClick={() => {\n                this.setState({accountInfo : \"\"});\n                localStorage.clear();\n                sessionStorage.clear();\n               }}>{`${this.state.accountInfo.substring(0, 5)}...${this.state.accountInfo.substring(38,42)}`}</button> \n              \n            }\n          \n        </ul>\n    </div>\n   \n    </div>\n     \n\n</div>\n   \n    \n\n</div>\n</div>\n\n{/* {walletModal && <Walletmodal connect={\"string\"} onDismiss={()=>this.onDismiss()} /> } */}\n\n\n</header>\n</div>\n</div>\n\n<div id=\"header1\" className=\"fixed-top-navbar d-block d-md-none\">\n               <div className=\"container-fluid  h-100\" id=\"mobileshow1\">\n               <header className=\"h-100\">\n               <Link to=\"/\" className='mr-3 logo_mob_mar'><span className='logo_img_sm'/></Link>\n\n                 \n      \n\n               <div className='d-flex align-items-center'>\n\n<div className=''>\n    <div className=\"nav-menu\">\n          <ul className=\"pl-0 mb-0\">\n         \n          <Dropdown className='filter_dropdown '>\n        <Dropdown.Toggle id=\"dropdown-basic\" className='table_filter_icon'>\n        <button className=\"get-started-btn rounded_btn_wal\">\n        <i class=\"fa fa-user-o\" aria-hidden=\"true\"></i>\n        </button>\n        </Dropdown.Toggle>\n        <Dropdown.Menu className='table_dropdown_menu'>\n        <Dropdown.Item className='link_text_gren'>\n         \n         \n     \n        <Link to=\"/login\" className='link_text' >Logout</Link>\n       </Dropdown.Item>\n        \n        </Dropdown.Menu>\n        </Dropdown>\n\n        {(this.state.accountInfo == \"\" || this.state.accountInfo == null) ?\n              <button className='get-started-btn rounded_btn_wal ml-2' onClick={() => this.setState({ walletModal: true })}>\n        <i class=\"fa fa-credit-card-alt\" aria-hidden=\"true\"></i>\n                \n              </button>\n              :\n              <button  className='get-started-btn ml-2' onClick={() => {\n                this.setState({accountInfo : \"\"});\n                localStorage.clear();\n                sessionStorage.clear();\n               }}>{`${this.state.accountInfo.substring(0, 5)}...${this.state.accountInfo.substring(38,42)}`}</button> \n              \n            }\n          \n        </ul>\n    </div>\n   \n    </div>\n    {walletModal && <Walletmodal connect={\"string\"} onDismiss={()=>this.onDismiss()} /> }\n\n</div>\n\n\n\n</header>\n</div>\n</div>\n\n</div>\n\n\n           </div>\n        );\n    }\n}\n\n\n\nexport default Adminheader","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/EditTrendingModal.js",["1384","1385","1386","1387"],"import React, { Component } from 'react';\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Modal, FormControl, InputGroup } from 'react-bootstrap';\r\nimport { trendingvalidate } from '../../hooks/kycvalidation';\r\nimport { edittrendinghook } from '../../hooks/usebackend';\r\n\r\nimport proof from \"../../images/proof.webp\"\r\n\r\nclass EditTrendingModal extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {          \r\n            edittrendingModal: true,\r\n            saleaddress : \"\",\r\n            status : \"\",\r\n            displayname : \"\",\r\n            errors : {},\r\n            position : \"\",\r\n            date : \"\",\r\n            type : \"Launchpad\"\r\n           \r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.editdata();\r\n    }\r\n\r\n    editdata = async() => {\r\n        this.setState({saleaddress : this.props.data.saleaddress})\r\n        this.setState({status : this.props.data.status})\r\n        this.setState({displayname : this.props.data.displayname})\r\n        this.setState({type : this.props.data.saletype})\r\n        this.setState({position : this.props.data.position})\r\n        this.setState({date : this.props.data.date})   \r\n        console.log(\"datessss\" , this.props.data, new Date(parseFloat(this.props.data.date)));\r\n    }\r\n\r\n    handleedit = async() => {\r\n        let payload = {\r\n            saleaddress : this.state.saleaddress,\r\n            status : this.state.status,\r\n            displayname : this.state.displayname,\r\n            id : this.props.data._id,\r\n            type : this.state.type,\r\n            position : this.state.position.toString(),\r\n            date : this.state.date.toString()\r\n        }\r\n\r\n        let validate = await trendingvalidate(payload);\r\n        if(validate.isValid){\r\n            let settingresult = await edittrendinghook(payload);\r\n            console.log(\"trending result\" , settingresult);\r\n            this.props.onDismiss();\r\n            this.props.getset();\r\n        }\r\n        else{\r\n            this.setState({\"errors\" : validate.errors})\r\n        }\r\n    }\r\n\r\n    filterPassedTime = (time) => {\r\n        const currentDate = new Date();\r\n        const selectedDate = new Date(time);\r\n    \r\n        return currentDate.getTime() < selectedDate.getTime();\r\n      };\r\n\r\n\r\n   render() {\r\n        \r\n  \r\n        const {edittrendingModal} = this.state\r\n\r\n        \r\n      return (\r\n\r\n        \r\n\r\n        <Modal className=\"wallet-modal\" show={edittrendingModal} centered size=\"md\">\r\n        <Modal.Header className='pt-3 header_odal_head'>\r\n        <h3 className=\"sec-head \">Edit Trending</h3>\r\n            <button type=\"button\" class=\"close\" onClick={() => this.props.onDismiss()}><span aria-hidden=\"true\">×</span><span class=\"sr-only\">Close</span></button>\r\n\r\n        </Modal.Header>\r\n        <Modal.Body className=\"select-wallet modal_body pt-0 pb-0 px-0\">\r\n\r\n        <div className=\"wallet-lists px-2\">\r\n                              \r\n        <div className='mod_pad_space pt-0'>\r\n        <div className='row'>\r\n                <div className='col-12 col-md-12 px-1 mb-3'>\r\n                        \r\n                        \r\n                        \r\n                       </div>\r\n                        <div className='col-12 col-md-12 px-1 mb-3'>\r\n                    <p className='input_desc_sm'>Sale Address</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"saleaddress\"  placeholder=\"Sale Address\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                value = {this.state.saleaddress}\r\n                                onChange = {(e)=>this.setState({saleaddress : e.target.value})}\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.saleaddress}</span>\r\n                    </div>                    \r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 px-1 mb-3'>\r\n                    <p className='input_desc_sm'>Display Name</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"displayname\"  placeholder=\"Display Name\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                value = {this.state.displayname}\r\n                                onChange = {(e)=>this.setState({displayname : e.target.value})}\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.displayname}</span>\r\n                    </div>\r\n                        </div> \r\n\r\n                        <div className='col-12 col-md-12 px-1 mb-3'>\r\n                    <p className='input_desc_sm'>Sale type</p>\r\n\r\n                        <select className=\"form-control custm_sel\" id=\"exampleFormControlSelect3\" \r\n                         value={this.state.type}\r\n                         onChange = {(e)=>{\r\n                            console.log(\"status\" , e.target.value);\r\n                            this.setState({type : e.target.value})}}\r\n                         placeholder=\"Select Status\"\r\n                        >\r\n                            {/* <option value=\"\">Select Status</option> */}\r\n                         <option value=\"Launchpad\">Launchpad</option>\r\n                            <option value=\"Privatesale\">Privatesale</option>                      \r\n\r\n                        </select>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.status}</span>\r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 px-1 mb-3'>\r\n                    <p className='input_desc_sm'>Status</p>\r\n\r\n                        <select className=\"form-control custm_sel\" id=\"exampleFormControlSelect3\" \r\n                         value={this.state.status}\r\n                         onChange = {(e)=>{\r\n                            console.log(\"status\" , e.target.value);\r\n                            this.setState({status : e.target.value})}}\r\n                         placeholder=\"Select Status\"\r\n                        >\r\n                            <option value=\"\">Select Status</option>\r\n                         <option value=\"Active\">Active</option>\r\n                            <option value=\"Inactive\">Inactive</option>                      \r\n\r\n                        </select>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.status}</span>\r\n                        </div>\r\n\r\n\r\n                        <div className='col-12 col-md-12 px-1 mb-3'>\r\n                    <p className='input_desc_sm'>Position</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"displayname\" placeholder=\"Position\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                value = {this.state.position}\r\n                                onChange = {(e)=>this.setState({position : e.target.value})}\r\n                                readOnly = {true}\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.position}</span>\r\n                    </div>\r\n                        </div> \r\n                   \r\n\r\n\r\n\r\n                    <div className='col-12 col-md-12 px-1 mb-3'>\r\n                    <p className='input_desc_sm'>End Date</p>\r\n                    <div className=\"inputs input-groups themeinputgroup\">\r\n                    <InputGroup className=\"datepicker_input\" >\r\n                        <DatePicker\r\n                         minDate={new Date()}\r\n                                                    filterTime={this.filterPassedTime.bind(this)}\r\n                                                   showTimeSelect\r\n                                                //    new Date(timestamp.seconds*1000)\r\n                                                //    selected={new Date(this.state.date)}\r\n                                                selected = {this.state.date && new Date(parseFloat(this.state.date))}\r\n                                                   onChange={(date)=> {\r\n                                                      let newdate = Date.parse(date);\r\n                                                      console.log(\"newdate\" , newdate);\r\n                                                      this.setState({date : newdate})\r\n                                                   }\r\n                                                    }\r\n                                                   dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                                 />\r\n                          \r\n                        </InputGroup>\r\n                        <InputGroup.Append className='cur_pointer'>\r\n                                <button variant=\"outline-secondary\" className=\"trans_cal_btn\">\r\n                                <i class=\"far fa-calendar-alt\"></i>\r\n                                </button>\r\n                            </InputGroup.Append>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.displayname}</span>\r\n                    </div>\r\n                        </div> \r\n                       \r\n          \r\n         \r\n                    <div className='col-12 col-md-12 px-1 text-center'>\r\n                        <button className=\"get-started-btn mt-2\" onClick={this.handleedit}>\r\n                           Edit\r\n                        </button>\r\n                        \r\n                        </div>\r\n                </div>\r\n\r\n            </div>\r\n    </div>\r\n        </Modal.Body>\r\n    </Modal>\r\n\r\n\r\n\r\n      )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default EditTrendingModal","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/AddTrendingModal.js",["1388","1389","1390","1391"],"import React, { Component } from 'react';\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Modal, FormControl, InputGroup } from 'react-bootstrap';\r\nimport { trendingvalidate } from '../../hooks/kycvalidation';\r\nimport { addtrendinghook } from '../../hooks/usebackend';\r\n\r\nimport proof from \"../../images/proof.webp\"\r\n\r\nclass AddTrendingModal extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {          \r\n            addtrendingModal: true,\r\n            saleaddress : \"\",\r\n            status : \"\",\r\n            displayname : \"\",\r\n            type : \"Launchpad\",\r\n            position : \"\",\r\n            date : \"\",\r\n            errors : {}\r\n           \r\n        };\r\n    }\r\n\r\n    handleadd = async() => {\r\n        let payload = {\r\n            saleaddress : this.state.saleaddress,\r\n            status : this.state.status,\r\n            displayname : this.state.displayname,\r\n            type : this.state.type,\r\n            position : this.state.position,\r\n            date : this.state.date.toString()\r\n        }\r\n\r\n        let validate = await trendingvalidate(payload);\r\n        console.log(\"validate \" , validate);\r\n        if(validate.isValid){\r\n            let settingresult = await addtrendinghook(payload);\r\n            console.log(\"trending result\" , settingresult);\r\n            this.props.onDismiss();\r\n            this.props.getset();\r\n        }\r\n        else{\r\n            this.setState({\"errors\" : validate.errors})\r\n        }\r\n    }\r\n\r\n    filterPassedTime = (time) => {\r\n        const currentDate = new Date();\r\n        const selectedDate = new Date(time);\r\n    \r\n        return currentDate.getTime() < selectedDate.getTime();\r\n      };\r\n\r\n\r\n   render() {\r\n        \r\n  \r\n        const {addtrendingModal} = this.state\r\n\r\n        \r\n      return (\r\n\r\n        \r\n\r\n        <Modal className=\"wallet-modal\" show={addtrendingModal} centered size=\"md\">\r\n        <Modal.Header className='pt-3 header_odal_head'>\r\n        <h3 className=\"sec-head \">Add Trending</h3>\r\n            <button type=\"button\" class=\"close\" onClick={() => this.props.onDismiss()}><span aria-hidden=\"true\">×</span><span class=\"sr-only\">Close</span></button>\r\n\r\n        </Modal.Header>\r\n        <Modal.Body className=\"select-wallet modal_body pt-0 pb-0 px-0\">\r\n\r\n        <div className=\"wallet-lists px-2\">\r\n                              \r\n        <div className='mod_pad_space pt-0'>\r\n        <div className='row'>\r\n                <div className='col-12 col-md-12 px-1 mb-3'>\r\n                        \r\n                        \r\n                        \r\n                       </div>\r\n                        <div className='col-12 col-md-12 px-1 mb-3'>\r\n                    <p className='input_desc_sm'>Sale Address</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"saleaddress\" placeholder=\"Sale Address\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                value = {this.state.saleaddress}\r\n                                onChange = {(e)=>this.setState({saleaddress : e.target.value})}\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.saleaddress}</span>\r\n                    </div>                    \r\n                        </div>\r\n                       \r\n                        <div className='col-12 col-md-12 px-1 mb-3'>\r\n                    <p className='input_desc_sm'>Display Name</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"displayname\" placeholder=\"Display Name\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                value = {this.state.displayname}\r\n                                onChange = {(e)=>this.setState({displayname : e.target.value})}\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.displayname}</span>\r\n                    </div>\r\n                        </div> \r\n\r\n                        <div className='col-12 col-md-12 px-1 mb-3'>\r\n                    <p className='input_desc_sm'>Sale Type</p>\r\n\r\n                        <select className=\"form-control custm_sel\" id=\"exampleFormControlSelect3\" \r\n                         \r\n                         placeholder=\"Select Status\"\r\n                         onChange = {(e)=>{\r\n                            console.log(\"status\" , e.target.value);\r\n                            this.setState({type : e.target.value})}}\r\n                        >\r\n                            \r\n                            <option value=\"Launchpad\">Launchpad</option>\r\n                            <option value=\"Privatesale\">Privatesale</option>                      \r\n\r\n                        </select>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.status}</span>\r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 px-1 mb-3'>\r\n                    <p className='input_desc_sm'>Status</p>\r\n\r\n                        <select className=\"form-control custm_sel\" id=\"exampleFormControlSelect3\" \r\n                         \r\n                         placeholder=\"Select Status\"\r\n                         onChange = {(e)=>{\r\n                            console.log(\"status\" , e.target.value);\r\n                            this.setState({status : e.target.value})}}\r\n                        >\r\n                            <option value=\"\">Select Status</option>\r\n                            <option value=\"Active\">Active</option>\r\n                            <option value=\"Inactive\">Inactive</option>                      \r\n\r\n                        </select>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.status}</span>\r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 px-1 mb-3'>\r\n                    <p className='input_desc_sm'>Position</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"displayname\" placeholder=\"Position\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                value = {this.state.position}\r\n                                onChange = {(e)=>this.setState({position : e.target.value})}\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.position}</span>\r\n                    </div>\r\n                        </div> \r\n                   \r\n\r\n\r\n\r\n                    <div className='col-12 col-md-12 px-1 mb-3'>\r\n                    <p className='input_desc_sm'>End Date</p>\r\n                    <div className=\"inputs input-groups themeinputgroup\">\r\n                    <InputGroup className=\"datepicker_input\" >\r\n                        <DatePicker\r\n                         minDate={new Date()}\r\n                                                    filterTime={this.filterPassedTime.bind(this)}\r\n                                                   showTimeSelect\r\n                                                   selected={this.state.date}\r\n                                                   onChange={(date)=> {\r\n                                                      let newdate = Date.parse(date);\r\n                                                      console.log(\"newdate\" , newdate);\r\n                                                      this.setState({date : newdate})\r\n                                                   }\r\n                                                    }\r\n                                                   dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                                 />\r\n                          \r\n                        </InputGroup>\r\n                        <InputGroup.Append className='cur_pointer'>\r\n                                <button variant=\"outline-secondary\" className=\"trans_cal_btn\">\r\n                                <i class=\"far fa-calendar-alt\"></i>\r\n                                </button>\r\n                            </InputGroup.Append>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.displayname}</span>\r\n                    </div>\r\n                        </div> \r\n                        \r\n                       \r\n          \r\n         \r\n                    <div className='col-12 col-md-12 px-1 text-center'>\r\n                        <button className=\"get-started-btn mt-2\" onClick={this.handleadd}>\r\n                           Add\r\n                        </button>\r\n                        \r\n                        </div>\r\n                </div>\r\n\r\n            </div>\r\n    </div>\r\n        </Modal.Body>\r\n    </Modal>\r\n\r\n\r\n\r\n      )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default AddTrendingModal","/Users/sudhanshusrivastava/Downloads/launchpad/src/hooks/useWallet.js",["1392","1393","1394","1395","1396","1397","1398"],"import WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3 from \"web3\";\nimport { CURRENT_CHAIN_ID,CURRENT_RPC_URL } from \"./useWeb3\";\nimport toast, { Toaster } from 'react-hot-toast';\nimport { createuserhook, getuserdatahook } from \"./usebackend\";\nimport { iconTheme, position, style } from \"./useToast\";\n\n \nexport const MetamaskWallet = async (e) => {\n  const RPC_URL =  CURRENT_RPC_URL();\n  const CHAIN_ID = CURRENT_CHAIN_ID();\n    try{\n        if (window.ethereum) {\n            const web3 = new Web3(window.ethereum);\n            // const chainId = await web3.eth.getChainId();\n            // if(parseInt(chainId) != parseInt(CHAIN_ID)){\n            //     chainIdCheck()\n            //     return true\n            // }\n             try {\n                await window.ethereum.enable().then(async () => {\n                    // User has allowed account access to DApp...\n                    const accounts = await web3.eth.getAccounts();\n                    const account = accounts[0].toString();\n                    console.log(\"account in : \",account)\n                    localStorage.setItem(\"accountInfo\",accounts[0]);\n                    \n                    sessionStorage.setItem(\"accountInfo\",accounts[0])\n                    let user = await createuserhook(account.toLowerCase())\n                    // window.location.href = window.location.origin + \"/wallet\"\n                    await getuserdata(account)\n                    console.log(\"data in walletconnect \",JSON.stringify(window.ethereum))\n                    return web3;\n                });\n            } catch (e) {\n                // User has denied account access to DApp...\n            }\n        }\n        // Legacy DApp Browsers\n        else if (window.web3) {\n           const web3 = new Web3(window.web3.currentProvider);\n           const chainId = await web3.eth.getChainId();\n            // if(parseInt(chainId) != parseInt(CHAIN_ID)){\n            //     chainIdCheck()\n            //     return true\n            // }\n           const accounts = await web3.eth.getAccounts();\n           const account = accounts[0].toString();\n           let user = await createuserhook(account.toLowerCase())\n           localStorage.setItem(\"accountInfo\",accounts[0]);\n           sessionStorage.setItem(\"accountInfo\",accounts[0])\n        //    if(window.location.pathname.split('/')[2]){\n            \n        //    }\n        await getuserdata(account)\n        //    window.location.href = window.location.origin + \"/wallet\"\n           return web3;\n        }\n        // Non-DApp Browsers\n        else {\n            //alert('No Dapp Supported Wallet Found');\n            console.log(\"No Dapp Supported Wallet Found\")\n            toast.error(`No Dapp Supported Wallet Found !`,\n            {\n                position:position.position,\n                style:style,\n                iconTheme: iconTheme\n            });\n        }\n    }catch(e){\n      toast.error(`Error : ${e}`,\n      {\n        position:position.position,\n        style:style,\n        iconTheme: iconTheme\n      });\n    }\n    \n \n}\n\nexport const WalletConnect = async (e) => {\n  const RPC_URL =  CURRENT_RPC_URL();\n  const CHAIN_ID = (CURRENT_CHAIN_ID());\n    //Create WalletConnect Provider\n    console.log(\"Wallet connect\");\n    const RPC_DATA = {};\n    RPC_DATA[CHAIN_ID] = RPC_URL\n    const provider = new WalletConnectProvider({\n        rpc: RPC_DATA,\n        network: 'binance',\n        chainId: CHAIN_ID,\n        // infuraId: \"69de03b5c7194095980c9233f9cf71df\",\n    }\n    );\n    await provider.enable().then(function (error, result) {\n        console.log('error: ' + error);\n        console.log(result);\n\n    })\n        .catch(e => {\n            //try again\n            toast.error(`Error : ${e}`,\n      {\n        position:position.position,\n        style:style,\n        iconTheme: iconTheme\n      });\n        });\n    const web3 = new Web3(provider);\n    const accounts = await web3.eth.getAccounts();\n    console.log(\"Account : \", accounts[0]);\n    const account = accounts[0].toString();\n    localStorage.setItem(\"accountInfo\",accounts[0])\n    sessionStorage.setItem(\"accountInfo\",accounts[0])\n    console.log(\"user\" , account.toLowerCase());\n    let user = await createuserhook(account.toLowerCase())\n    await getuserdata(account)\n    // window.location.href = window.location.origin + \"/wallet\"\n    // localStorage.setItem(\"provider\",JSON.stringify(provider))\n                   \n\n   return provider;\n}\n\n\nconst getuserdata = async(account)=>{\n    let userdata = await getuserdatahook(account.toLowerCase());\n    console.log(\"userdata\" , userdata.data.data);\n    // this.setState({investedpools : userdata.data.data.investedpools})\n    // this.setState({wishlist : userdata.data.data.wishlist})\n    // this.setState({viewlist : userdata.data.data.viewlist})\n    // this.setState({investedamount : userdata.data.data.investedamount})\n    // let dollar = await Userdollar(userdata.data.data.investedamount);\n    // this.setState({dollar : dollar});\n    // this.handleactivities();\n  }\n\n","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/TokenModal.js",["1399","1400","1401","1402","1403","1404","1405","1406","1407","1408","1409","1410","1411","1412","1413","1414","1415"],"import React, { Component } from \"react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Dropdown,\n  Row,\n  Col,\n  Card,\n  ProgressBar,\n  InputGroup,\n  Form,\n  Tab,\n  Nav,\n  FormControl,\n  Modal\n} from \"react-bootstrap\";\nimport { CreateLiquidityToken, CreateStandardToken, GetAdminfee, Getbalance, toFixedNumber } from \"../../hooks/useContract\";\nimport { validliquiditytoken, validstandardtoken } from \"../../hooks/kycvalidation\";\n\n\nclass TokenModal extends Component {\n \n  \n\n\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n        tokenModal: true,\n        tokentype : \"Standard Token\",\n      name : \"\",\n      symbol : \"\",\n      decimal : \"\",\n      tokensupply : \"\",\n      errors : {},\n      yieldfee : \"\",\n      liquidityfee : \"\",\n      exchangethresold : \"\",\n      maximumtransaction : \"\",\n      userbalance : Getbalance(),\n      poolfee : 0\n    };\n  }\n\n  componentDidMount() {\n    document.getElementById(\"launchpad_parent\").classList.add(\"active\");\n    // this.hideLoader();\n    this.getfee();\n  }\n\n\n  handlecreatetoken = async()=>{\n    if(this.state.tokentype == \"Standard Token\"){\n      let payload = {\n        name : this.state.name,\n        symbol : this.state.symbol,\n        decimal : this.state.decimal,\n        totalsupply : this.state.tokensupply\n      }\n      let validate = await validstandardtoken(payload);\n      if(validate?.isValid){\n        let arg = [];\n        arg[0] = this.state.name;\n        arg[1] = this.state.symbol;\n        arg[2] = this.state.decimal;\n        arg[3] = (toFixedNumber(this.state.tokensupply*10**this.state.decimal)).toString()\n        let tokendata = await CreateStandardToken(arg);\n        console.log(\"tokendata\" , tokendata);\n        sessionStorage.setItem(\"HASH\" , JSON.stringify(tokendata))\n        // this.props.history.push(\"/tokensuccess\")\n        this.props.address(JSON.parse(sessionStorage.getItem(\"TKNDATA\")).tokenAddres)\n        this.props.onDismiss();\n        // this.props.handlesetaddress()\n      }\n      else{\n        this.setState({errors : validate?.errors})\n      }\n    }\n\n    if(this.state.tokentype == \"Liquidity Generator Token\"){\n      let payload = {\n        name : this.state.name,\n        symbol : this.state.symbol,\n        decimal : this.state.decimal,\n        totalsupply : this.state.tokensupply,\n        yieldfee : this.state.yieldfee,\n        liquidityfee  : this.state.liquidityfee,\n        maximumtransaction : this.state.maximumtransaction,\n        exchangethresold : this.state.exchangethresold\n      }\n      console.log(\"payload\" , payload);\n      let validate = await validliquiditytoken(payload);\n      if(validate?.isValid){\n        let arg = [];\n        arg[0] = this.state.name;\n        arg[1] = this.state.symbol;\n        arg[2] = this.state.decimal;\n        arg[3] = (toFixedNumber(this.state.tokensupply)).toString();\n        arg[4] = this.state.yieldfee;\n        arg[5] = this.state.liquidityfee;\n        arg[6] = this.state.maximumtransaction;\n        arg[7] = this.state.exchangethresold;\n        let tokendata = await CreateLiquidityToken(arg);\n        console.log(\"tokendata\" , tokendata);\n        localStorage.setItem(\"HASH\" , JSON.stringify(tokendata))\n        // this.props.history.push(\"/liquidity-tokensuccess\")\n        this.props.address(JSON.parse(sessionStorage.getItem(\"TKNDATA\")).tokenAddress)\n        this.props.onDismiss();\n      }\n      else{\n        this.setState({errors : validate?.errors})\n      }\n    }\n  }\n\n  getfee = async()=>{\n    let fee = await GetAdminfee();\n    console.log(\"fee\" , fee);\n    this.setState({poolfee : fee.tokenfee/10**18})\n}\n\n  \n\n\n\n \n  render() {\n    \n    const {tokenModal, settingsModal } = this.state\n\n\n    return (\n      \n          \n        <Modal className=\"wallet-modal\" show={tokenModal} centered size=\"md\">\n        <Modal.Header className=\"pb-0 modal_header\">\n            \n            <button type=\"button\" class=\"close\" onClick={() => this.props.onDismiss()}><span aria-hidden=\"true\">×</span><span class=\"sr-only\">Close</span></button>\n\n        </Modal.Header>\n        <Modal.Body className=\"select-wallet modal_body pt-0 pb-0 px-0\">\n\n        \n                <div className=''>\n<div className=\"tab_img\">\n      <div className='card_bg card'>\n <div className='card-body pt-0'>\n <div>\n <div className='row'>\n                <div className='col-12 col-md-12 mb-3'>\n                        \n                        \n                        \n                       </div>\n                        <div className='col-12 col-md-12 mb-0'>\n                    <p className='input_desc_sm'>Token Type <span className=\"text-success\">*</span> </p>\n                    <div className=\"inputs input-groups\">\n\n                    <select className=\"form-control custm_sel\" id=\"exampleFormControlSelect3\" \n                          value={this.state.tokentype}\n                          onChange={(e)=>this.setState({ \"tokentype\": e.target.value }) } placeholder=\"Standard Token\"\n                        >\n                         <option value=\"Standard Token\">Standard Token</option>\n                            <option value=\"Liquidity Generator Token\">Liquidity Generator Token</option>                      \n\n                        </select>\n                        {/* <InputGroup className=\"\">\n                          \n                            <FormControl value={this.state.tokentype} onChange={(e)=>this.setState({ \"tokentype\": e.target.value }) } id=\"softcap\" placeholder=\"Standard Token\"\n                                aria-describedby=\"basic-addon2\" as = \"select\"\n                            >\n                              <option value=\"Standard Token\">Standard Token</option>\n                              <option value=\"Liquidity Generator Token\">Liquidity Generator Token</option>\n                            </FormControl>\n                          \n                        </InputGroup> */}\n                    </div>\n                    <div className='note_desc mt-1 mb-0'>\n                    <p>{this.state.poolfee} BNB</p>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Name <span className=\"text-success\">*</span></p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"hardcap\" value={this.state.name} onChange={(e)=>{this.setState({ name: e.target.value }); }} placeholder=\"Ex:Ethereum\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.name}</span>\n                    </div>\n                        </div> \n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Symbol <span className=\"text-success\">*</span></p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"mincontribution\" value={this.state.Symbol} onChange={(e)=>this.setState({ symbol: e.target.value }) } placeholder=\"Ex:ETH\"\n                                aria-describedby=\"basic-addon2\"\n                                \n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.symbol}</span>\n                    </div>\n                        </div>\n                        \n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Decimals <span className=\"text-success\">*</span></p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"decimals\" placeholder=\"Ex: 18\"\n                                aria-describedby=\"basic-addon2\"\n                                onChange={(e)=>this.setState({decimal : e?.target?.value})}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.decimal}</span>\n                    </div>\n                        </div> \n\n                  <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Total Supply <span className=\"text-success\">*</span></p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"totalsupply\" placeholder=\"Ex: 100000000000\"\n                                aria-describedby=\"basic-addon2\"\n                                onChange={(e)=>this.setState({tokensupply : e?.target?.value})}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.totalsupply}</span>\n                    </div>\n                  </div>\n\n                {this.state.tokentype == \"Liquidity Generator Token\" && \n                  <>\n                    <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Transaction fee to generate yield (%) <span className=\"text-success\">*</span></p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"totalsupply\" placeholder=\"Ex: 4\"\n                                aria-describedby=\"basic-addon2\"\n                                onChange={(e)=>this.setState({yieldfee : e?.target?.value})}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.yieldfee}</span>\n                    </div>\n                  </div>\n\n                  <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Transaction fee to generate liquidity (%) <span className=\"text-success\">*</span></p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"totalsupply\" placeholder=\"Ex: 4\"\n                                aria-describedby=\"basic-addon2\"\n                                onChange={(e)=>this.setState({liquidityfee : e?.target?.value})}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.liquidityfee}</span>\n                    </div>\n                  </div>\n\n                  <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Maximum Transaction Amount %<span className=\"text-success\">*</span></p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"hardcap\" value={this.state.maximumtransaction} onChange={(e)=>{this.setState({ maximumtransaction: e.target.value }); }} placeholder=\"Ex:1\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.maximumtransaction}</span>\n                    </div>\n                        </div> \n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Exchange Thersold %<span className=\"text-success\">*</span></p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"hardcap\" value={this.state.exchangethresold} onChange={(e)=>{this.setState({ exchangethresold: e.target.value }); }} placeholder=\"Ex:1\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.exchangethresold}</span>\n                    </div>\n                        </div> \n                  </>\n                }\n                  \n\n                        \n\n                      \n                       \n                        \n                      \n\n                       \n            \n\n               {/* <div className='col-12 col-md-12'>\n               <div className=\"custom-control custom-checkbox\">\n  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n  <label className=\"custom-control-label\" for=\"customCheck1\">Implement Pink Anti - Bot System?</label>\n</div></div>     */}\n         \n                    <div className='col-12 col-md-12 text-center'>\n                        <button className=\"get-started-btn mt-2\" \n                        disabled = {this.state.userbalance < 0.01}\n                        onClick={\n                          // ()=>{this.setState({ currentStep: 1})}\n                          this.handlecreatetoken\n                          \n                          }>\n                           Create Token\n                        </button>\n                        \n                        </div>\n                </div>\n            </div>\n      </div>\n      </div>\n      </div>\n      </div>\n        </Modal.Body>\n    </Modal>\n    );\n  }\n}\n\nexport default TokenModal;\n","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Settingsmodal.js",["1416","1417","1418","1419","1420","1421","1422","1423","1424","1425"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport { Modal, InputGroup,FormControl,ProgressBar } from 'react-bootstrap';\n\nimport { CHAINS } from '../config/env'\nimport { getAccount, getChainId, setChainId } from '../hooks/useAccount'\n\n\nclass Settingsmodal extends Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {          \n            settingsModal: true          \n           \n        };\n    }\n\n  \n\n\n\n\n\n\n    render() {\n        \n  \n        const {settingsModal} = this.state\n        \n      return (\n\n\n                    <Modal className=\"buy-modal settings_modal\" dialogClassName=\"modal-90w modal-dialog-lg\" show={settingsModal} centered>\n                    <Modal.Header className='pt-3 header_odal_head'>\n                    <h3 className=\"sec-head \">Choose Network</h3>\n                            <button type=\"button\" class=\"close\" onClick={() => this.props.onDismiss()} ><span aria-hidden=\"true\">×</span><span class=\"sr-only\">Close</span></button>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <div className=\"modal-cont pb-4\">\n                            <p class=\"bottom_text\">Choose your network</p>\n                                <div className='dropdown_yelo dropdown_yelo_mdl px-0'>\n\n                                <div className=\"d-flex badge_cur_modal\">\n                                { CHAINS.map((index,i)=> \n                                    <div className=\"currency_badge mr-2\">\n                                         <a href=\"\"  onClick={()=> setChainId(i)}><img src={index.IMAGE} /> {index.NAME}</a>\n                                    </div>\n                                    )}\n                                    \n                                    </div>\n                                 \n                           </div>\n                            </div>\n                        </Modal.Body>\n                        \n                </Modal>\n      )\n    }\n\n}\n\n\nexport default Settingsmodal","/Users/sudhanshusrivastava/Downloads/launchpad/src/config/proxy.js",[],"/Users/sudhanshusrivastava/Downloads/launchpad/src/config/erc20.js",[],"/Users/sudhanshusrivastava/Downloads/launchpad/src/config/presale.js",[],"/Users/sudhanshusrivastava/Downloads/launchpad/src/config/lock.js",[],"/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Lock/TransfertokenModal.js",["1426","1427","1428","1429","1430","1431","1432","1433","1434","1435","1436","1437","1438"],"import React, { Component } from \"react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Dropdown,\n  Row,\n  Col,\n  Card,\n  ProgressBar,\n  InputGroup,\n  Form,\n  Tab,\n  Nav,\n  FormControl,\n  Modal\n} from \"react-bootstrap\";\nimport { Checkowneraddress, Transferlockownership } from \"../../hooks/useContract\";\n\n\n\n\nclass TransfertokenModal extends Component {\n \n  \n\n\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n        transfertokenModal: true,\n        newowneraddress : \"\",\n        errors : \"\",\n    };\n  }\n\n\n  transferownership = async()=>{\n    let payload = {\n      lpaddress : this.props.tokenaddress,\n      newowneraddress : this.state.newowneraddress\n    }\n    await Transferlockownership(payload);\n    window.location.href = window.location.origin + \"/tokenlock\"\n    this.props.onDismiss();\n  }\n \n  render() {\n    \n    const {transfertokenModal } = this.state\n\n\n    return (\n      \n          \n        <Modal className=\"wallet-modal\" show={transfertokenModal} centered size=\"md\">\n       <Modal.Header className='pt-3 header_odal_head'>\n                    <h3 className=\"sec-head \">Transfer Ownership</h3>\n                            <button type=\"button\" class=\"close\" onClick={() => this.props.onDismiss()} ><span aria-hidden=\"true\">×</span><span class=\"sr-only\">Close</span></button>\n                        </Modal.Header>\n        <Modal.Body className=\"select-wallet modal_body pt-0 pb-0 px-0\">\n\n        \n                <div className=''>\n<div className=\"tab_img\">\n      <div className='card_bg card'>\n <div className='card-body pt-0'>\n <div>\n                <div className='row'>\n                <div className='col-12 col-md-12 mb-3'>\n                <p class=\"bottom_text mb-0\">(*) is required field.</p>\n                        \n                        \n                        \n                       </div>\n                    \n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>New Owner Address <span >*</span></p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"hardcap\"  placeholder=\"Owner Address\"\n                                aria-describedby=\"basic-addon2\"\n                                value = {this.state.newowneraddress}\n                                onChange={async(e)=>{\n                                  this.setState({newowneraddress : e?.target.value});\n                                  let valid = await Checkowneraddress(e?.target.value)\n                                 \n                                  if(valid){\n                                    this.setState({errors : \"\"})\n                                  }\n                                  else{\n                                    this.setState({errors : \"Invalid owner address !..\"})\n                                  }\n                                }}\n                            />\n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors}</span>\n                    </div>\n                        </div> \n         \n         \n                    <div className='col-12 col-md-12 text-center mt-0 pb-3'>\n                        <button className=\"get-started-btn mt-2\"\n                          disabled = {!this.state.newowneraddress || this.state.errors}\n                          onClick ={this.transferownership}\n                        >\n                        Transfer Ownership\n                        </button>\n                        \n                        </div>\n                </div>\n            </div>\n      </div>\n      </div>\n      </div>\n      </div>\n        </Modal.Body>\n    </Modal>\n    );\n  }\n}\n\nexport default TransfertokenModal;\n","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Admin/Kycmodal.js",["1439","1440","1441","1442","1443","1444","1445","1446","1447"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport { Modal, Toast } from 'react-bootstrap';\nimport { API_URL } from '../../config/env';\nimport { approvekychook, rejectkychook } from '../../hooks/usebackend';\nimport folderimage from \"../../images/folder_zip.png\";\n\nimport proof from \"../../images/proof.webp\"\n\nclass Kycmodal extends Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {          \n            kycModal: true,\n            kycdetail : {}\n           \n        };\n    }\n// componentDidMount(){\n//   console.log(\"this?.props?.detail\" , this?.props?.detail);\n//   if(!this.state.kycdetail){\n//     console.log(\"set\")\n//     this.setState({\"kycdetail\" : this?.props?.detail})\n//   }\n// }\n\nhandleapprove = async()=>{\n  let payload = {\n    walletaddress : this?.props?.detail?.walletaddress,\n    id : this?.props?.detail?.proof[0]?.id\n  }\n  let approve = await approvekychook(payload);\n  console.log(\"approve\" , approve);\n  if(approve?.data?.type == \"success\"){\n    // Toast.error(\"Error Try Again !\")\n  }\n  else{\n    // Toast.error(\"Error Try Again !\")\n  }\n  this.props.onDismiss();\n}\n\nhandlereject = async()=>{\n  let payload = {\n    walletaddress : this?.props?.detail?.walletaddress,\n    id : this?.props?.detail?.proof[0]?.id\n  }\n  let reject = await rejectkychook(payload);\n  this.props.onDismiss();\n}\n\n   render() {\n        \n  \n        const {kycModal} = this.state\n\n        \n      return (\n\n        \n\n        <Modal className=\"wallet-modal\" show={kycModal} centered size=\"md\">\n        <Modal.Header className='pt-3 header_odal_head'>\n        <h3 className=\"sec-head \">KYC</h3>\n            <button type=\"button\" class=\"close\" onClick={() => this.props.onDismiss()}><span aria-hidden=\"true\">×</span><span class=\"sr-only\">Close</span></button>\n\n        </Modal.Header>\n        <Modal.Body className=\"select-wallet modal_body pt-0 pb-0 px-0\">\n\n        <div className=\"wallet-lists px-2\">\n                              \n                                <div className='mod_pad_space'>\n                                \n                                <div className='row'>\n                                <div className='col-12 col-md-12 mb-0'>\n                    <p className='input_desc_sm bold_text_proof'>{this?.props?.detail?.proof[0]?.idtype}</p>\n                  \n                        </div>\n                        <div className='col-12 col-sm-6 mb-3 mt-1'>\n                        <p className='input_desc_sm'>Kyc Document</p>\n                        <div className=\"icon_align_border\">\n                          {/* <img src={API_URL+this?.props?.detail?.proof[0]?.path + this?.props?.detail?.proof[0]?.image[0]} className=\"img-fluid p-3\" /> */}\n                          {/* {API_URL +\"/\"+ this.state.kyc.path +\"/\"+ this.state.kyc.image} */}\n                          <a href={API_URL +\"/\"+ this?.props?.detail?.proof[0]?.path +\"/\"+ this?.props?.detail?.proof[0]?.image} download >\n                    {/* <a href={\"/images/myw3schoolsimage.jpg\"} download> */}\n                    <img src={folderimage} alt=\"W3Schools\" width=\"104\" height=\"142\"></img>\n\n                    </a>\n                        </div>\n                        </div>\n                        {/* <div className='col-12 col-sm-6 mb-3 mt-1'>\n                        <p className='input_desc_sm'>Back Side Image</p>\n                        <div className=\"icon_align_border\">\n                          <img src={API_URL+this?.props?.detail?.proof[0]?.path + this?.props?.detail?.proof[0]?.image[1]} className=\"img-fluid p-3\" />\n                        </div>\n                        </div> */}\n                                </div>\n                                {/* <hr className='hr_green' />\n                                <div className='row'>\n                                <div className='col-12 col-md-12 mb-0'>\n                    <p className='input_desc_sm bold_text_proof'>Driving License</p>\n                  \n                        </div>\n                        <div className='col-12 col-sm-6 mb-3 mt-1'>\n                        <p className='input_desc_sm'>Front Side Image</p>\n                        <div className=\"icon_align_border\">\n                          <img src={proof} className=\"img-fluid p-3\" />\n                        </div>\n                        </div>\n                        <div className='col-12 col-sm-6 mb-3 mt-1'>\n                        <p className='input_desc_sm'>Back Side Image</p>\n                        <div className=\"icon_align_border\">\n                          <img src={proof} className=\"img-fluid p-3\" />\n                        </div>\n                        </div>\n                                </div> */}\n                                <div className='text-center mt-4'>\n\n                                <button className='get-started-btn mr-2'\n                                onClick={this.handleapprove}\n                                disabled = {this?.props?.detail?.proof[0].status != \"Pending\"}\n                                >\n                                    Approve</button>\n                                    <button className='get-started-btn'\n                                    onClick={this.handlereject}\n                                    disabled = {this?.props?.detail?.proof[0].status != \"Pending\"}\n                                    >\n                                    Reject</button>\n                                </div>\n\n                                    </div>\n                            </div>\n        </Modal.Body>\n    </Modal>\n\n\n\n      )\n    }\n\n}\n\n\nexport default Kycmodal","/Users/sudhanshusrivastava/Downloads/launchpad/src/config/liquiditytoken.js",[],"/Users/sudhanshusrivastava/Downloads/launchpad/src/config/standard.js",[],"/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Privatesale/LaunchpadBuycard.js",["1448","1449","1450","1451","1452","1453","1454","1455","1456","1457","1458"],"import React, { Component } from 'react';\nimport { useContext, useEffect, useState } from \"react\";\nimport { ProgressBar } from 'react-bootstrap';\nimport { isSaleLive, isUpcoming, Salediffernce, UpcomingDiffernce } from '../../hooks/useProjects';\nimport Countdown from 'react-countdown';\nimport coin from \"../../images/coin.png\";\n\nimport img1 from \"../../images/img1.jpg\";\nimport img2 from \"../../images/img2.jpg\";\nimport img3 from \"../../images/img3.jpg\";\nimport { CHAINS } from '../../config/env'\nimport { getAccount, getChainId, setChainId } from '../../hooks/useAccount'\nimport { UseTokenInfo } from '../../hooks/useContract';\nimport { gettrendingdisplayhook, getuserdatahook, viewlisthook, wishlisthook } from '../../hooks/usebackend';\n\nconst renderer = ({ days, Month, Year, hours, minutes, seconds, completed }) => {\n    if (completed) {\n      return  <div>\n      <div>{days}d </div>\n      <div>{hours}h</div>\n      <div>{minutes}m</div>   \n      <div>{seconds}s </div>         \n   </div>\n    } else {\n      // Render a countdown\n      return <div>\n                {/* <span>{days}<span>Days</span> </span>\n                <span>{hours}<span>Hours</span></span>\n                <span>{minutes}<span>Minuits</span></span>   \n                <span>{seconds}<span>Seconds</span> </span>    */}\n                 <div>{days}d </div>\n      <div>{hours}h</div>\n      <div>{minutes}m</div>   \n      <div>{seconds}s </div>\n            </div>;\n    }\n  };\n\nclass LaunchpadBuycard extends Component\n{\n    constructor(props) {\n        super(props);\n        this.state={\n            currentChain: 0,\n            wishlist : [],\n            accountInfo : getAccount(),\n            trending : [],\n            singletrending : {}\n        }\n    }\n\n    getuserdata = async()=>{\n        let userdata = await getuserdatahook(this.state.accountInfo.toLowerCase());\n        console.log(\"userdata\" , userdata.data.data);\n        // this.setState({investedpools : userdata.data.data.investedpools})\n        this.setState({wishlist : userdata.data.data.wishlist})\n        // this.setState({viewlist : userdata.data.data.viewlist})\n        // this.setState({investedamount : userdata.data.data.investedamount})\n        // let dollar = await Userdollar(userdata.data.data.investedamount);\n        // this.setState({dollar : dollar});\n        // this.handleactivities();\n      }\n\n    componentDidMount()\n    {\n    this.setState( { currentChain: getChainId() });\n    this.gettrending();\n    this.GetBuytokeninfo()\n    console.log(\"props\" , this.props.saleData);\n    getAccount() &&  this.getuserdata();\n    }\n\n    async gettrending(){\n        const {saleData} = this.props\n        let data = await gettrendingdisplayhook();\n        console.log(\"dataa trending\" , data?.data?.data);\n        if(data?.data?.data?.length > 0)\n        this.setState({trending : data?.data?.data}) \n        let finddata = data?.data?.data?.find((e)=> e?.saleaddress == saleData.saleAddress)\n        this.setState({singletrending : finddata})\n    }\n\n\n    GetBuytokeninfo(){\n        const {saleData} = this.props\n    if(saleData && saleData?.useWithToken === \"0x0000000000000000000000000000000000000000\"){\n       this.setState( { buyToken: \"BNB\"});\n    }else{\n        console.log(\"saledaata info\" , saleData);\n        const token =  UseTokenInfo(saleData && saleData?.useWithToken);\n        this.setState({ buyToken: token?.symbol });\n        \n    }\n    }\n\n    componentDidUpdate(){\n        console.log(\"didupdarte\");\n    }\n\n\n    async handleheart(){\n        console.log(\"handleheart\");\n        let account = getAccount();\n        if(account){\n        let payload = {\n            walletaddress : account.toLowerCase(),\n            saleaddress : this.props.saleData.saleAddress\n        }\n        let wishlist = await wishlisthook(payload);\n        console.log(\"wishlist respponsr\" , wishlist);\n        this.setState({wishlist : wishlist.data.data.wishlist})\n        this.getuserdata();\n    }\n    }\n\n    async handleview(){\n        console.log(\"handleview\");\n        // this.props.history.push(`/privatesaledetail/${this.props.saleData.saleAddress}`)\n        let account = getAccount();\n       \n        if(account){\n            let payload = {\n                walletaddress : account.toString().toLowerCase(),\n                saleaddress : this?.props?.saleData?.saleAddress\n            }\n            let viewlist = await viewlisthook(payload).then(()=>{\n                window.location.href = window.location.origin + `/privatesaledetail/${this.props.saleData.saleAddress}`\n            });\n        }\n        else{\n            window.location.href = window.location.origin + `/privatesaledetail/${this.props.saleData.saleAddress}`\n        }\n    }\n\n    render() {\n  \n        const { saleData } = this.props\n      return (\n          \n          <div className='col-12 col-xl-4 col-lg-6 col-md-6 col-lg-6-custom mb-4 projects'>\n              {/* <a href={`/privatesaledetail/${saleData.saleAddress}`}> */}\n                  \n        <div className='card card_style_1 ribbox'>\n            {saleData && saleData.isWithoutToken  ? \n        <div className='ribbon'>NO TOKEN</div>:<></>\n            }\n            <div className='card-body'>\n                \n                <div className='pt-5 px-3 pb-2'>\n                <div className='grid_img_div'>\n                    <div className='profimg'>\n                        {console.log(\"saledataaaaaaaa\" , saleData.logo)}\n                       <img src={saleData && saleData.logo} alt={saleData && saleData.symbol} />\n                       {/* <img src={this.state.currentChain && CHAINS[this.state.currentChain].IMAGE} alt={saleData && saleData.symbol} className=\"tokenimg\" /> */}\n                   </div>\n                   <div>\n                    <div className=\"btn-group btn_grp_yel mb-2 d-block d-xl-flex d-md-block d-sm-flex flex_cont_end_flex\" role=\"group\" aria-label=\"Basic example\">\n                       \n                        <div className='d-sm-flex d-block mt-3 mt-xl-0 mt-md-3 mt-sm-0 text-right-xss'>\n                        <p className=' mb-0'>\n                        {saleData && isSaleLive(saleData.startTime,saleData.endTime,saleData.isPresaleOpen)  ?\n                                \n                                <span className=\"badge badge_live\">                      \n                               \n                                    <span className='stats_txt'>Sales Live</span>\n                                </span>:\n                                ( saleData && isUpcoming(saleData.startTime) ?\n                                <span className=\"badge badge_upcoming\">\n                              \n        \n                                <span className='stats_txt'>Upcoming</span>\n                                </span>: \n                              \n                                \n                                <span className=\"badge badge_finish\">\n                           \n                                    <span className='stats_txt'>Sales End</span>\n                                </span>\n                                )\n                        }\n                        {/* {saleData && isSaleLive(saleData.startTime,saleData.endTime,saleData.isPresaleOpen)  ?\n                                \n                        <span className=\"badge badge_live\">                      \n                       \n                            <span className='stats_txt'>Sales Live</span>\n                        </span>:\n                        ( saleData && isUpcoming(saleData.startTime) ?\n                        <span className=\"badge badge_upcoming\">\n                      \n\n                        <span className='stats_txt'>Upcoming</span>\n                        </span>: \n                      \n                        \n                        <span className=\"badge badge_finish\">\n                   \n                            <span className='stats_txt'>Sales End</span>\n                        </span>\n                        )\n                        } */}\n                        </p>\n                </div>\n                    </div>\n                    \n                   \n                    <p className='text-right'>\n                    <span className=\"badge badge-green-rect mt-0 mr-2\">\n                        <span className='blk_txt'>Audit</span>\n                        </span>\n                        <span className=\"badge badge-kyc-rect mt-0\">\n                        <span className='blk_txt'>KYC</span>\n                        </span>\n                    <span className=\"badge badge-yellow-fill mt-0\">\n                        {/* <span className='blk_txt'>{saleData && saleData.symbol}</span> */}\n                        </span> \n                     </p>\n                </div>\n \n           \n                </div>\n      \n               \n                {/* <p className='yellow_txt_sm'>{saleData && (saleData.description).substring(0,130)}...</p> */}\n                <p className='text-white cardhead font_16 mb-1'>{saleData && saleData.name}</p>\n                {this.state.singletrending && this.props.user && <span class=\"badge badge-kyc-rect mt-0 mb-2 badge_trend\"><span class=\"blk_txt\">#OnTop{this.state.singletrending?.position}</span></span>}\n                <p className='desc_grey_txt pb-0 mb-0'>1 {this.state.buyToken} = {saleData && saleData.presaleRate} {saleData && saleData.symbol}</p>\n                <p className=' text-gray mb-1 purple_head mt-2 font_13'>Soft</p>\n                <p className='green_txt_big pb-0 mb-0'>\n                {saleData && (saleData.softCap / 10 ** 18).toFixed(2)} {this.state.buyToken}\n                    {/* {saleData && (saleData.hardCap/10**18).toFixed(2)} BNB */}\n                    </p>\n\n                    \n            <p className=' purple_head d-flex justify-content-between mt-2 mb-2'>\n               <span className='desc_grey_txt'>Progress</span>\n               {/* <span className='orangetext'>Participants<b className='pl-2'>{saleData && saleData.participants}</b></span> */}\n               {console.log(\"saleDatasaleDatasaleData\" , parseFloat(parseInt(saleData.earnedCap)/parseInt(saleData.hardCap) * 100))}\n                </p>\n            <ProgressBar now={saleData && parseFloat(parseInt(saleData.earnedCap)/parseInt(saleData.hardCap) * 100)} className='yellow_bar'/>\n            <p className='white_txt_sm d-flex justify-content-between mt-1'>\n               <span className='desc_grey_txt'>{saleData && parseInt(parseInt(saleData.earnedCap)/parseInt(saleData.hardCap) * 100)} %</span>\n               <span className='desc_grey_txt'>{saleData && ((saleData.earnedCap)/10**18).toFixed(3)}</span>\n                </p>\n\n                <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n               <span className='desc_grey_txt'>Total Users Participated:</span>\n               <span className='desc_grey_txt font_12'>{saleData && saleData?.participants}</span>\n                </p>\n\n                {saleData && saleData?.isPancake ? \n                <>\n                <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n               <span className='desc_grey_txt'>Pancake Rate:</span>\n               <span className='desc_grey_txt font_12'>{saleData && saleData?.pancakeRate}</span>\n                </p>\n\n                <p className='white_txt_sm d-flex justify-content-between mt-0'>\n               <span className='desc_grey_txt'>lockup Time :</span>\n               <span className='desc_grey_txt font_12'>{saleData && (saleData?.lpUnlockon*1000)/(1000*60*60*24)} Days</span>\n                </p>\n                </> : <></>}\n\n   \n   <hr className='hr_green mb-0' />\n        \n                <div className='white_txt_sm d-flex justify-content-between mt-0 align-items-center webr_res_div'>\n                    <div>\n                    {  saleData && isUpcoming(saleData.startTime) ?\n                        <p class=\"mt-2 countup countbtn ml-sm-0 mb-2\">\n                        <span class=\"btn_timer\">\n                            <div className='countdown'>\n                            <span className='desc_grey_txt'>Sale Starts in</span> <br /> <Countdown date={Date.now() + (UpcomingDiffernce(saleData.startTime))} renderer={renderer} className=\"countdown_grey\" />\n                        </div> \n                                    </span>\n                        </p>: \n                        (saleData && isSaleLive(saleData.startTime,saleData.endTime,saleData.isPresaleOpen)  ?\n                        <p class=\"mt-2 countbtn mb-2\">\n                            <span class=\"btn_timer\">\n                                \n                                <span class=\"\">\n                                <div className='countdown'>\n                           <span className='desc_grey_txt'>Sale Ends in</span> <br /> <Countdown date={Date.now() + Salediffernce(saleData.endTime)} renderer={renderer} className=\"countdown_grey\" />\n                        </div> \n                                    </span></span>\n                        </p>:\n                         <p className='countdown_grey mt-2'>\n                         <span className='desc_grey_txt'>The Sale Is Ended</span> <br /> \n                        \n                    </p>)\n                        }\n                        </div>\n                        <div className='pb_card_buy'>\n                        {/* <button className='btn_social mr-1'>\n                        <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\n                        </button> */}\n                        \n                        <button className='btn_social mr-2' onClick={()=>this.handleheart()}>\n                        <i class={this.state.wishlist.includes(this.props.saleData.saleAddress) ? \"fa fa-heart\" : \"fa fa-heart-o\"} aria-hidden=\"true\" ></i>\n                        </button>\n                        <a href={`/privatesaledetail/${saleData.saleAddress}`} >\n                        <button className=\"get-started-btn\" \n                        // onClick={async()=> await this.handleview()}\n                        >\n                            View Pool\n                        </button>\n                        </a>\n                        </div>\n                        </div>\n                </div>\n            </div>\n        </div>\n            {/* </a> */}\n         \n\n    </div>\n    \n      )\n    }\n\n}\n\n\nexport default LaunchpadBuycard","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Launchpad/CreatetabFair.js",["1459","1460","1461","1462","1463","1464","1465","1466","1467","1468","1469","1470","1471","1472","1473","1474","1475","1476","1477","1478","1479","1480","1481","1482","1483","1484","1485","1486","1487","1488","1489","1490","1491","1492","1493","1494","1495","1496","1497","1498","1499","1500","1501","1502","1503","1504","1505","1506","1507","1508","1509","1510","1511","1512","1513","1514","1515","1516","1517","1518","1519","1520","1521","1522","1523","1524","1525","1526","1527","1528","1529","1530","1531","1532","1533","1534","1535","1536","1537","1538","1539","1540","1541","1542","1543","1544","1545","1546","1547","1548","1549","1550","1551","1552","1553"],"import React, { Component } from 'react';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { InputGroup, FormControl,Form, Container } from 'react-bootstrap';\r\nimport isEmpty from 'is-empty';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport { ONEDAYINSECONDS, CHAINS, userFeeWithtoken, userFee } from '../../config/env'\r\nimport { UseTokenInfo,IsValidAddress,createPresale,toFixedNumber,getSaleAddress,depositTokens, isFloat, getSalecreationFee, Checkaddress, Approvetoken, GetAdminfee } from '../../hooks/useContract'\r\nimport { getAccount } from '../../hooks/useAccount'\r\nimport {CURRENT_CHAIN_ID,CURRENT_RPC_URL} from '../../hooks/useWeb3'\r\nimport { Link } from 'react-router-dom';\r\nimport TokenModal from \"./TokenModal\"\r\nimport { urlvalidation } from '../../hooks/kycvalidation';\r\n\r\n\r\n\r\n  \r\nclass CreatetabFair extends Component\r\n{\r\n\r\n       \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {   \r\n          logo: '',       \r\n          name: '',\r\n          symbol: '',\r\n          address: '',\r\n          decimal: '',\r\n          presaleRate: \"0\",\r\n          softCap: 0,\r\n          hardCap: 0,\r\n          min: 0,\r\n          max : 0,\r\n          isVested: false,\r\n          isPancake: true,\r\n          pancakeRate:0,\r\n          liquidityPercent:0,\r\n          unlockOn: 0,\r\n          startDate: '',\r\n          endDate: '',\r\n          vestPercent: 0,\r\n          vestInterval: 0,\r\n          isWithoutToken: false,\r\n          description: '',\r\n          website: '',\r\n          twitter: '',\r\n          telegram: '',\r\n          facebook: '',\r\n          githup: '',\r\n          instagram:'',\r\n          discord:'',\r\n          reddit:'',\r\n          youtube:'',\r\n          deposit: 0,\r\n          decimals: 0,\r\n          createdSale: '',\r\n          isDeposited: false,\r\n          isWhitelisted: false,\r\n          currentStep:1,\r\n          tokenModal: false,  \r\n          \r\n          //fairlaunch\r\n          title : \"\",\r\n          currency : \"BNB\",\r\n          \r\n          currency : \"BNB\",\r\n          isToken : false,\r\n          userFee : 0,\r\n          WithTokenaddress : \"\",\r\n          LaunchpadType: false, // fair\r\n          Fee:0,\r\n          tokenaddress : \"\",\r\n          tokeninfo : {},\r\n          errors : {},\r\n          button1: true,\r\n   button2 : true,\r\n   button3 : true,\r\n   fee : 5,\r\n//   isToken : false,\r\n  userFee : 0,\r\n  approvebutton : false,\r\n  poolfee : \"\"\r\n         \r\n        };\r\n    }\r\n\r\n    handledisable = () =>{\r\n        // console.log(\"vest\" , isvalid);\r\n        this.setState({button2 : false})\r\n        var isvalid = true;\r\n        var i = 1;\r\n        // let pancake = this.state.isPancake ? \r\n        if(isEmpty(this.state.error) && this.state.presaleRate && this.state.softCap\r\n        && this.state.hardCap && this.state.min && this.state.max  && this.state.startDate &&\r\n        this.state.endDate && this.state.unlockOn &&this.state.liquidityPercent){\r\n            isvalid = false\r\n            console.log(\"vest1\" , isvalid);\r\n                // if(this.state.isPancake){\r\n                //     isvalid = true;\r\n                //     console.log(\"vest2\" , isvalid);\r\n                //     if(this.state.unlockOn &&\r\n                //         this.state.liquidityPercent && this.state.pancakeRate){\r\n                //             console.log(\"vest3\" , isvalid);\r\n                //             isvalid = false;\r\n                //             console.log(\"vest3\" , isvalid);\r\n                //         }\r\n                // }\r\n                // else if(!this.state.ispancake && this.state.isvested){\r\n                //     isvalid = true;\r\n                // }\r\n                // else{\r\n                //     isvalid = false;\r\n                // }\r\n                if(this.state.isVested){\r\n                    isvalid = true;\r\n                    console.log(\"vest4\" , isvalid);\r\n                    if(this.state.vestInterval && this.state.vestPercent){\r\n                        isvalid = false\r\n                        console.log(\"vest5\" , isvalid);\r\n                    }\r\n                }\r\n                // else if(this.state.ispancake && !this.state.isvested){\r\n                //     isvalid = true;\r\n                // }\r\n                // else{\r\n                //     isvalid = false;\r\n                // }\r\n                // else{\r\n                //     isvalid = false;\r\n                // }\r\n                // if(!this.state.isvested || !this.state.isPancake){\r\n                //     isvalid = false;\r\n                // }\r\n        }\r\n            this.setState({button2 : isvalid}) ;\r\n            console.log(\"isvalid\" , isvalid);\r\n            return isvalid;\r\n    }\r\n\r\n    handledisableurlbutton = () => {\r\n        var isvalid = true;\r\n        if(this.state.logo && this.state.website && this.state.facebook && this.state.twitter && \r\n            this.state.github && this.state.telegram && this.state.instagram && this.state.discord\r\n            && this.state.reddit && this.state.youtubevideo && this.state.description){\r\n                isvalid = false;\r\n            }\r\n            this.setState({button3 : isvalid})\r\n    }\r\n\r\n    // componentDidMount(){\r\n    //     const CHAIN_ID = CURRENT_CHAIN_ID();\r\n    //     const CURRENT_RPC = CURRENT_RPC_URL();\r\n    //     console.log(\"current chain id\",CHAIN_ID);\r\n    //     let ROUTER;\r\n    //     CHAINS.map((data)=>{\r\n    //         ROUTER = ((data.CHAIN_ID==CHAIN_ID)&&(data.RPC_URL == CURRENT_RPC))&&data.ROUTER;\r\n    //         console.log((data.CHAIN_ID==CHAIN_ID)&&data.ROUTER,\"data in map\");\r\n    //     })\r\n    // }\r\n\r\n    componentDidMount(){\r\n        this.GetTokenAddress(\"BNB\")\r\n        this.getData()\r\n        this.getfee();\r\n    }\r\n    \r\n    async getData(){\r\n        var fee = await getSalecreationFee();\r\n        this.setState({Fee : Number(fee)})\r\n\r\n    }\r\n    getfee = async()=>{\r\n        let fee = await GetAdminfee();\r\n        this.setState({poolfee : fee.deploymentfee/10**18})\r\n    }\r\n\r\n\r\n\r\n    \r\n  // Presale Creation\r\n  async CreateSale(){\r\n    console.log(\"call\");\r\n     let Addresses = [];\r\n     let Values = [];\r\n     let Details = [];\r\n     let isSetter = [];\r\n\r\n     const account= getAccount()\r\n    \r\n\r\n     const startTime = this.state.startDate;\r\n     const endTime = this.state.endDate;\r\n\r\n       // let startDiff = 0;\r\n     // let endDiff = 0;\r\n     // var now = new Date();\r\n       \r\n     // if(startTime > now.getTime())\r\n     //     startDiff = parseInt((new Date(startTime).getTime() - now.getTime())/86400/1000) ;\r\n     \r\n     // endDiff =  parseInt(((new Date(endTime).getTime() - now.getTime())/86400/1000)-startDiff) ;\r\n\r\n     const CHAIN_ID = CURRENT_CHAIN_ID();\r\n     const CURRENT_RPC = CURRENT_RPC_URL();\r\n     let ROUTER;\r\n     CHAINS.map((data)=>{\r\n     if((((data.CHAIN_ID==CHAIN_ID)&&(data.RPC_URL == CURRENT_RPC))&&data.ROUTER)!=false)\r\n         ROUTER = ((data.CHAIN_ID==CHAIN_ID)&&(data.RPC_URL == CURRENT_RPC))&&data.ROUTER;\r\n         \r\n     })\r\n     \r\n     const startDiff = parseInt(parseInt((new Date(startTime).getTime()))/1000);\r\n     const endDiff =  parseInt(parseInt((new Date(endTime).getTime()))/1000);\r\n    \r\n      // _token 0\r\n     //_router 1\r\n     //owner 2\r\n     //UsewithToken 3\r\n    Addresses.push(this.state.tokenaddress); \r\n    Addresses.push(ROUTER);\r\n    Addresses.push(account);\r\n    Addresses.push(this.state.WithTokenaddress)\r\n \r\n\r\n\r\n       //_min 0 \r\n     //_max 1\r\n     //_rate 2\r\n     // _soft  3\r\n     // _hard 4\r\n     //_pancakeRate  5\r\n     //_unlockon  6\r\n     // _percent 7\r\n     // _start 8\r\n     //_end 9\r\n     //_vestPercent 10\r\n     //_vestInterval 11\r\n     //_useFee 12\r\n     Values.push(toFixedNumber(this.state.min*10**18).toString());\r\n     Values.push(toFixedNumber(this.state.max*10**18).toString());\r\n     Values.push(this.state.presaleRate);\r\n     Values.push(toFixedNumber(this.state.softCap*10**18).toString());\r\n     Values.push(toFixedNumber(this.state.hardCap*10**18).toString());\r\n     Values.push(this.state.pancakeRate.toString());\r\n     Values.push(this.state.unlockOn.toString());\r\n     Values.push(this.state.liquidityPercent.toString());\r\n     Values.push(startDiff.toString());\r\n     Values.push(endDiff.toString());\r\n     Values.push((this.state.vestPercent*100).toString());\r\n     Values.push((this.state.vestInterval * ONEDAYINSECONDS).toString());\r\n     Values.push((this.state.userFee).toString())\r\n\r\n      // isAuto 0\r\n     //_isvested 1\r\n     // isWithoutToken 2\r\n     // isWhitelisted 3\r\n     // buyType isBNB or not 4\r\n     // isToken isToken or not 5\r\n     // launchpadtype isnormal or fair\r\n     isSetter.push(this.state.isPancake);\r\n     isSetter.push(this.state.isVested);\r\n     isSetter.push(this.state.isWithoutToken);\r\n     isSetter.push(this.state.isWhitelisted);\r\n     isSetter.push(this.state.currency === \"BNB\" ? true : false)\r\n     isSetter.push(this.state.isToken)\r\n     isSetter.push(this.state.LaunchpadType)\r\n      // description 0 \r\n     // website,twitter,telegram 1,2,3\r\n     //logo 4\r\n     //name 5\r\n     //symbol 6\r\n     // githup 7\r\n     // instagram 8\r\n     // discord 9\r\n     // reddit 10\r\n     // youtube 11\r\n     Details.push(this.state.description);\r\n     Details.push(this.state.website);\r\n     Details.push(this.state.twitter);\r\n     Details.push(this.state.telegram);\r\n     Details.push(this.state.logo);\r\n     Details.push(this.state.name);\r\n     Details.push(this.state.symbol);\r\n     Details.push(this.state.githup);\r\n     Details.push(this.state.instagram);\r\n     Details.push(this.state.discord);\r\n     Details.push(this.state.reddit);\r\n     Details.push(this.state.youtube);\r\n\r\n     const data = this.validate()\r\n     if(data)\r\n         return false;\r\n\r\n\r\n     console.log(\"DATA : \",Addresses,Values,isSetter,Details)\r\n     const sale = await createPresale(Addresses,Values,isSetter,Details,account)\r\n     this.setState({createdSale: sale});\r\n    \r\n }\r\n\r\n\r\n\r\n    goToSale(){\r\n        window.location.href = `${window.location.origin}/launchpaddetail/${this.state.createdSale}`;\r\n    }\r\n\r\n    \r\n    GetTokenAddress(value){\r\n       \r\n        let Withtokenaddress;\r\n        \r\n        if(value === \"BUSD\"){\r\n            Withtokenaddress = CHAINS[localStorage.getItem(\"CHAIN\")].BUSD\r\n        }else if(value === \"USDT\"){\r\n            Withtokenaddress = CHAINS[localStorage.getItem(\"CHAIN\")].USDT\r\n        }else if(value=== \"USDC\"){\r\n            Withtokenaddress = CHAINS[localStorage.getItem(\"CHAIN\")].USDC  \r\n        }else if(value === \"BNB\"){\r\n            Withtokenaddress = CHAINS[localStorage.getItem(\"CHAIN\")].BNB\r\n        }\r\n       \r\n       console.log(\"WithTokenaddress\",Withtokenaddress);\r\n            this.setState({ WithTokenaddress: Withtokenaddress});\r\n           \r\n    }\r\n\r\n    async getTokenInfo(tokenAddress){\r\n        const isValid = await IsValidAddress(tokenAddress);\r\n        if(tokenAddress.length == 42 && !isValid){}\r\n    //         toast.error(\"This is not a Valid Address !\",\r\n    // {\r\n    //     style: {\r\n    //     minWidth: '300px',\r\n    //     minHeight: '55px'\r\n    //     }\r\n    // })\r\n       \r\n        console.log(\"IS valid \",isValid)\r\n        if(tokenAddress.length == 42 && isValid){\r\n            const token = await UseTokenInfo(tokenAddress);\r\n            this.setState({ name: token.name });\r\n            this.setState({ symbol: token.symbol });\r\n            this.setState({ decimals: token.decimals });\r\n        }\r\n    }\r\n\r\n    // calculateDepositTokens(){\r\n    //     this.forceUpdate() \r\n    //     let topancakeTokens =0;\r\n    //     let pancakeTokens = 0;\r\n    //     const presalePrice = 1/this.state.presaleRate;\r\n    //     if(this.state.isPancake){\r\n    //         const pancakePrice = 1/this.state.pancakeRate;\r\n    //         topancakeTokens = (this.state.hardCap) * this.state.liquidityPercent / 100;\r\n    //         pancakeTokens = topancakeTokens/pancakePrice;\r\n    //         console.log(\"pancake tokens : \",pancakeTokens)\r\n    //     }\r\n    //      const netTokens = (this.state.hardCap)/presalePrice;\r\n    //      console.log(\"net Token : \",pancakeTokens + netTokens)\r\n    //      this.setState({ deposit: pancakeTokens + netTokens });\r\n        \r\n    // }\r\n\r\n    calculateDepositTokens(hardCap,liquidityPercent){\r\n        \r\n        this.forceUpdate() \r\n       \r\n        if(this.state.isPancake){\r\n            var DepositToken = (hardCap / liquidityPercent) * 100;\r\n        }\r\n         console.log(\"DepositToken\",this.state.hardCap,this.state.liquidityPercent,DepositToken);\r\n         this.setState({ deposit: DepositToken.toFixed(3) });\r\n        \r\n    }\r\n\r\n    async DepositTokens(){\r\n        const account= getAccount()\r\n        const tokenAmount = toFixedNumber(this.state.deposit * 10 ** this.state.tokeninfo?.decimals).toString()\r\n        const isDeposit = await depositTokens(this.state.tokenaddress,this.state.createdSale,tokenAmount,account)\r\n        this.setState({ isDeposited : isDeposit});\r\n        \r\n    }   \r\n\r\n    renderDeposit(){\r\n        return( this.state.deposit > 0 ?\r\n              <button onClick={this.DepositTokens.bind(this)} className=\"get-started-btn\">Deposit {this.state.deposit} {this.state.symbol}</button>:\r\n               <button onClick={() => this.calculateDepositTokens(this.state.hardCap,this.state.liquidityPercent)} className=\"get-started-btn\">Calculate</button>)\r\n    }\r\n\r\n    validate(){\r\n        console.log(\"this.state.hardCap\",typeof this.state.hardCap,\"this.state.softCap\",typeof this.state.softCap,(this.state.hardCap) < (this.state.softCap),\"10<8\",10<8);\r\n        if(parseFloat(this.state.hardCap) < parseFloat(this.state.softCap)){\r\n            toast.error(\"Hard Cap must be Higher than Soft Cap !\",\r\n            {\r\n                style: {\r\n                minWidth: '300px',\r\n                minHeight: '55px'\r\n                }\r\n            })\r\n        }\r\n        if((parseFloat(this.state.presaleRate) < 0)){\r\n            toast.error(\"Price must be greater than 0\",\r\n            {\r\n                style: {\r\n                minWidth: '300px',\r\n                minHeight: '55px'\r\n                }\r\n            })\r\n        }\r\n        if((parseFloat(this.state.pancakeRate) < 0)){\r\n            toast.error(\"Pancake price must be greater than 0\",\r\n            {\r\n                style: {\r\n                minWidth: '300px',\r\n                minHeight: '55px'\r\n                }\r\n            })\r\n        }\r\n\r\n        return (parseFloat(this.state.hardCap) < parseFloat(this.state.softCap)) || (parseFloat(this.state.presaleRate) < 0) || (parseFloat(this.state.pancakeRate) < 0) ;\r\n    }\r\n\r\n    filterPassedTime = (time) => {\r\n        const currentDate = new Date();\r\n        const selectedDate = new Date(time);\r\n    \r\n        return currentDate.getTime() < selectedDate.getTime();\r\n      };\r\n\r\n      keypress = (event)=>{\r\n        if (!/[0-9]/.test(event.key)) {\r\n            event.preventDefault();\r\n          }\r\n      }\r\n\r\n      async settokenaddress(value){\r\n        this.setState({ tokenaddress: value });\r\n        // this.getTokenInfo(e.target.value);\r\n        const tokendata = await Checkaddress(value);\r\n      console.log(\"tokendata\" , tokendata);\r\n      if(tokendata.isValid){\r\n        this.setState({tokeninfo : tokendata.tokeninfo})\r\n        this.setState({errors : {}});\r\n        this.setState({approvebutton : tokendata.allowance})\r\n        this.setState({button1 : false})\r\n      }\r\n      else{\r\n        let formData = { ...this.state.errors, [\"tokenaddress\"]: \"Invalid token address !\" };\r\n        this.setState({errors : formData});\r\n        this.setState({tokeninfo : {}})\r\n      }\r\n}\r\n\r\nasync approvetoken(){\r\n    await Approvetoken(this.state.tokenaddress);\r\n    this.setState({approvebutton : true})\r\n}\r\n      \r\n\r\n\r\n      onDismiss(){\r\n        this.setState({ tokenModal: false });\r\n    }\r\n\r\n    render() {\r\n        \r\n  \r\n        const {tokenModal } = this.state\r\n\r\n        \r\n      return (\r\n        <div>\r\n   {/* Wizard */}\r\n   <div className='d-none d-xl-block container px-1'>\r\n           <div className='row mt-5'>\r\n             <div className='col-3'>\r\n               <div className={this.state.currentStep ==1 ? \"card_bg_wizard active card\":\"card_bg_wizard card\"} >\r\n               {/* onClick={()=>{this.setState({ currentStep: 1})}} */}\r\n                 <div className='card-body'>\r\n                   <div className='d-flex align-items-center h-100'>\r\n                     <div className='wizard_badge_num'>\r\n                       1\r\n                     </div>\r\n                     <div className='pl-3 create_wiz_desc'>\r\n                       <h5>Verify Token</h5>\r\n                       <p className='mb-0'>Enter the token address and verify</p>\r\n                     </div>\r\n                   </div>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n             <div className='col-3'>\r\n               <div className={this.state.currentStep ==2 ? \"card_bg_wizard active card\":\"card_bg_wizard card\"} >\r\n               {/* onClick={()=>{this.setState({ currentStep: 2})}} */}\r\n                 <div className='card-body'>\r\n                   <div className='d-flex align-items-center h-100'>\r\n                     <div className='wizard_badge_num'>\r\n                       2\r\n                     </div>\r\n                     <div className='pl-3 create_wiz_desc'>\r\n                       <h5>Defi Launchpad Info</h5>\r\n                       <p className='mb-0'>Enter the launchpad information that you want to raise, that should be enter all details about your presale</p>\r\n                     </div>\r\n                   </div>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n             <div className='col-3'>\r\n               <div className={this.state.currentStep ==3 ? \"card_bg_wizard active card\":\"card_bg_wizard card\"} >\r\n               {/* onClick={()=>{this.setState({ currentStep: 3})}} */}\r\n                 <div className='card-body'>\r\n                   <div className='d-flex align-items-center h-100'>\r\n                     <div className='wizard_badge_num'>\r\n                       3\r\n                     </div>\r\n                     <div className='pl-3 create_wiz_desc'>\r\n                       <h5>Add Additional Info</h5>\r\n                       <p className='mb-0'>Let people know who you are</p>\r\n                     </div>\r\n                   </div>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n             <div className='col-3'>\r\n               <div className={this.state.currentStep ==4 ? \"card_bg_wizard active card\":\"card_bg_wizard card\"} >\r\n               {/* onClick={()=>{this.setState({ currentStep: 4})}} */}\r\n                 <div className='card-body'>\r\n                   <div className='d-flex align-items-center h-100'>\r\n                     <div className='wizard_badge_num'>\r\n                       4\r\n                     </div>\r\n                     <div className='pl-3 create_wiz_desc'>\r\n                       <h5>Finish</h5>\r\n                       <p className='mb-0'>Review your information</p>\r\n                     </div>\r\n                   </div>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n\r\n         </div>\r\n           </div>\r\n          \r\n           {/* end Wizard */}\r\n      {/* ongoing_sec */}\r\n          <div className='ongoing_sec form_sec'>\r\n      \r\n      \r\n       <div className=\"inner_bg mt-5\">\r\n         <div className='row'>\r\n           <div className='col-12 col-md-10 col-lg-9 mx-auto'>\r\n           <div className=\"tab_img\">\r\n                 <div className='card_bg card'>\r\n            <div className='card-body'>\r\n              <div className='row align-items-center pb-4'>\r\n                <div className='col-12 col-md-6 mb-3 mb-md-0'>\r\n                  <p className='bottom_text mb-0'>(*) is required field.</p>\r\n                  \r\n                </div>\r\n                <div className={this.state.currentStep ==1 ? \"col-12 col-md-6 text-md-right d-block\":\"col-12 col-md-6 text-md-right d-none\"}>\r\n                <button className=\"get-started-btn\" onClick={() => this.setState({ tokenModal: true })}>+ Create</button>\r\n                </div>\r\n              </div>\r\n              <div id=\"firststep\" className={this.state.currentStep ==1 ? \"d-block\":\"d-none\"}>\r\n                <div className='row'>                     \r\n                      <div className='col-12 col-md-12'>\r\n                    <p className='input_desc_sm'>Token Address*</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl value={this.state.tokenaddress} onChange={(e)=> this.settokenaddress(e.target.value)} id=\"tokenaddress\" placeholder=\"\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.tokenaddress}</span>\r\n                    </div>\r\n                    <div className='note_desc mt-1 mb-1'>\r\n                    <p>Pool creation fee: {this.state.poolfee} BNB</p>\r\n                    </div>\r\n                        </div>\r\n\r\n                        <div className={isEmpty(this.state.tokeninfo) ? \"d-none\" : 'col-12 col-md-12 mb-3'}>\r\n                        <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n                            <span className='desc_grey_txt'>Name :</span>\r\n                            <span className='desc_grey_txt font_12'>{this.state.tokeninfo?.name}</span>\r\n                                </p>\r\n\r\n                        \r\n                                <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n                            <span className='desc_grey_txt'>Symbol :</span>\r\n                            <span className='desc_grey_txt font_12'>{this.state.tokeninfo?.symbol}</span>\r\n                                </p>\r\n\r\n                                <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n                            <span className='desc_grey_txt'>Decimals :</span>\r\n                            <span className='desc_grey_txt font_12'>{this.state.tokeninfo?.decimals}</span>\r\n                                </p>\r\n                      </div>\r\n\r\n                        <div className='col-12 col-md-12 mb-1'>\r\n                        <p className='input_desc_sm'>Currency</p>\r\n                        <div className='d-flex'>\r\n                            <div className={this.state.currency === \"BNB\"?'currency_badge active mr-2' : \"currency_badge mr-2\"}  value = \"BNB\"\r\n                                onClick = {(e)=>{console.log(e.target.getAttribute(\"value\"));\r\n                                    this.setState({\"currency\" :e.target.getAttribute(\"value\")})\r\n                                    this.GetTokenAddress(e.target.getAttribute(\"value\"))\r\n                                }}\r\n                            >BNB</div>\r\n                            <div className={this.state.currency == \"BUSD\"?'currency_badge active mr-2' : \"currency_badge mr-2\"} value = \"BUSD\" onClick = {(e)=>{\r\n                                this.setState({\"currency\" : e.target.getAttribute(\"value\")});\r\n                                this.GetTokenAddress(e.target.getAttribute(\"value\"));\r\n                                \r\n                            }}>BUSD</div>\r\n                            <div className={this.state.currency == \"USDT\"?'currency_badge active mr-2' : \"currency_badge mr-2\"} value = \"USDT\"\r\n                                onClick = {(e)=>{\r\n                                    this.setState({\"currency\" :e.target.getAttribute(\"value\")});\r\n                                    this.GetTokenAddress(e.target.getAttribute(\"value\"));\r\n                                   \r\n                                }}\r\n                            >USDT</div>\r\n                            <div className={this.state.currency == \"USDC\"?'currency_badge active mr-2' : \"currency_badge mr-2\"} value = \"USDC\"\r\n                            onClick = {(e)=>{\r\n                                this.setState({\"currency\" : e.target.getAttribute(\"value\")});\r\n                                this.GetTokenAddress(e.target.getAttribute(\"value\"))\r\n                            }}\r\n                            >USDC</div>\r\n\r\n                        </div>\r\n                        <div className='note_desc mt-1 mb-1'>\r\n                    <p>Users will pay with {this.state.currency} for your token</p>\r\n                    </div>\r\n                    {/* <p className='input_desc_sm'>Token Symbol</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl value={this.state.symbol} onChange={(e)=>this.setState({ symbol: e.target.value }) } id=\"tokensymbol\" placeholder=\"\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                    </div> */}\r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                        <p className='input_desc_sm'>Fee Options</p>\r\n                      \r\n                        <div className=\"custom-control custom-radio mb-2\">\r\n                    <input type=\"checkbox\" id=\"customRadio1\" name=\"customRadio\" className=\"custom-control-input\"  value ={5}\r\n                    // checked\r\n                    checked ={this.state.fee == 5 ? true : false}\r\n                    onChange ={(e)=>{\r\n                        console.log(\"val\" , 5);\r\n                        this.setState({fee : e.target.value})\r\n                        this.setState({isToken : true});\r\n                        this.setState({userFee : userFee})\r\n                    }}\r\n                    />\r\n                    <label className=\"custom-control-label\" for=\"customRadio1\">{userFee}% {this.state.currency} raised only <span>(recommended)</span></label>\r\n                    </div>   \r\n\r\n                    <div className=\"custom-control custom-radio\">\r\n                    <input type=\"checkbox\" id=\"customRadio2\" name=\"customRadio\" value={2} className=\"custom-control-input\" \r\n                    checked ={this.state.fee == 2 ? true : false}\r\n                         onChange ={(e)=>{\r\n                            console.log(\"val\" , 2);\r\n                            this.setState({fee : e.target.value})\r\n                            this.setState({isToken : false});\r\n                            this.setState({userFee : userFeeWithtoken})\r\n                        }}\r\n                    />\r\n                    <label className=\"custom-control-label\" for=\"customRadio2\">{2}% {this.state.currency} raised + 2% token sold</label>\r\n                    </div>                  \r\n                        </div>\r\n\r\n                        {/* <div className='col-12 col-md-12 mb-3'>\r\n                        <p className='input_desc_sm'>Listing Options</p>\r\n                        <div className='d-flex'>\r\n                            <div className='currency_badge active mr-2'>Auto</div>\r\n                            <div className='currency_badge mr-2'>Manual</div>                           \r\n\r\n                        </div>\r\n                    \r\n                        </div> */}\r\n{this.state.currency == \"USDC\" ? \r\n                        <div className='col-12 col-md-12 mb-4 mt-4'>\r\n                            <div className='card_footer_form'>\r\n                                <div className='d-flex align-items-center justify-content-center'>\r\n                                <i class=\"fa fa-exclamation-circle text-danger-war\" aria-hidden=\"true\"></i>\r\n                                <p className='mb-0 pl-3'>Do not use this currency for auto liquidity tokens, or tokens that depend on WETH pair. It will lead to error when finalizing the pool or transferring the tokens (for example Liquidity Generator Token, BabyToken, BuyBack Baby Token) <br />\r\n                            Contact Crypto Launchpad for more information.</p>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div> :<></>}\r\n\r\n                        <div className='col-12 col-md-12 mb-4'>\r\n                            <div className='card_footer_form'>\r\n                            <p className='mb-0'>For auto listing, after you finalize the pool your token will be auto listed on DEX.</p>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        \r\n\r\n                        <div className='col-12 col-md-12 text-center'>\r\n                        {/* <button className=\"get-started-btn\" onClick={()=>{this.setState({ currentStep: 2})}}\r\n                        disabled = {this.state.button1}\r\n                        >\r\n                           Next\r\n                        </button> */}\r\n\r\n                    {this.state.approvebutton && \r\n                             <button className=\"get-started-btn\" onClick={()=>{this.setState({ currentStep: 2})}}\r\n                             disabled = {this.state.button1}\r\n                             >\r\n                                Next\r\n                             </button> \r\n                            }\r\n\r\n                        {!this.state.approvebutton &&\r\n                        <button className=\"get-started-btn\" onClick={()=>{this.approvetoken()}}\r\n                        disabled = {this.state.button1}\r\n                        >\r\n                           Approve\r\n                        </button> \r\n                        }\r\n                        </div>\r\n\r\n             </div>\r\n             </div>\r\n             <div id=\"secondstep\" className={this.state.currentStep ==2 ? \"d-block\":\"d-none\"}>\r\n                <div className='row'>\r\n                {/* <div className='col-12 col-md-12 mb-3'>\r\n                        \r\n                        <p className='input_desc_sm'>Presale Rate*</p>\r\n                        <div className=\"inputs input-groups\">\r\n                            <InputGroup className=\"\">\r\n                                <FormControl pattern=\"^[1-9]+[0-9]*$\" id=\"presalerate\" value={this.state.presaleRate} onChange={(e)=>{ if(!isFloat(e.target.value)){ this.setState({ presaleRate: e.target.value })} }} placeholder=\"\"\r\n                                    aria-describedby=\"basic-addon2\"\r\n                                />\r\n                              \r\n                            </InputGroup>\r\n                        </div>\r\n                        <div className='note_desc mt-1 mb-1'>\r\n                    <p>If I spend 1 {this.state.currency} how many tokens will I receive?</p>\r\n                    </div>\r\n                            </div> */}\r\n\r\n\r\n\r\n<div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Total Selling Amount</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"hardcap\" value={this.state.hardCap} onChange={(e)=>{\r\n                                \r\n                                const formvalue = {...this.state.errors , [\"hardcap\"]: \"\"}\r\n                                this.setState({errors : formvalue});\r\n                                this.setState({ hardCap: e.target.value }); \r\n                                // if (!e.target.value || isNaN(parseFloat(e.target.value))) {\r\n                                //     console.log(\"invalid\");\r\n                                //     const formvalue = {...this.state.errors , [\"hardcap\"]: \"Invalid hardcap !\"}\r\n                                //     this.setState({errors : formvalue});\r\n                                //   }\r\n                                //   else if(e.target.value < this.state.softCap ){\r\n                                //     const formvalue = {...this.state.errors , [\"hardcap\"]: \"Hardcap must be greater than softcap !\"}\r\n                                //     this.setState({errors : formvalue});\r\n                                //   }\r\n                                //   else{\r\n                                //     const formvalue = {...this.state.errors , [\"hardcap\"]: \"\"}\r\n                                //     this.setState({errors : formvalue});\r\n                                //   }\r\n                                //   if(this.state.softCap < (parseFloat(e.target.value)/2)){\r\n                                //     const formvalue = {...this.state.errors , [\"softcap\"]: \"Softcap must be >= 50% of Hardcap\"}\r\n                                //     this.setState({errors : formvalue});\r\n                                //   }\r\n                                var rd = new RegExp(/^\\d+$/);\r\n                                if(!rd.test(parseFloat(e.target.value))){\r\n                                    const formvalue = {...this.state.errors , [\"hardcap\"]: \"Invalid Total Selling Amount\"}\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                else if(isNaN(e.target.value)){\r\n                                    const formvalue = {...this.state.errors , [\"hardcap\"]: \"Invalid Total Selling Amount\"}\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                else if(!e.target.value || e.target.value == 0){\r\n                                    const formvalue = {...this.state.errors , [\"hardcap\"]: \"Total Selling Amount field is required\"}\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                               \r\n\r\n                                  this.handledisable();\r\n                                  console.log(\"condition\" , e.target.value < this.state.softcap)\r\n                                  \r\n                            }} placeholder=\"\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.hardcap}</span>\r\n                    </div>\r\n                        </div> \r\n                            <div className='col-12 col-md-12 mb-3'>\r\n                        <p className='input_desc_sm'>Whitelist</p>\r\n                      \r\n                        <div className=\"custom-control custom-radio mb-2\">\r\n                    <input type=\"radio\"\r\n                    checked ={ !this.state.isWhitelisted  ? true : false}\r\n                    onChange={(e)=> this.setState({isWhitelisted : false})} id=\"customRadio3\" name=\"customRadio\" className=\"custom-control-input\" />\r\n                    <label className=\"custom-control-label\" for=\"customRadio3\">Disable</label>\r\n                    </div>   \r\n\r\n                    <div className=\"custom-control custom-radio\">\r\n                    <input type=\"radio\" \r\n                     checked ={this.state.isWhitelisted  ? true : false}\r\n                    onChange={(e)=> this.setState({isWhitelisted : true})} id=\"customRadio4\" name=\"customRadio\" className=\"custom-control-input\" />\r\n                    <label className=\"custom-control-label\" for=\"customRadio4\">Enable</label>\r\n                    </div>                 \r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 mb-0'>\r\n                    <p className='input_desc_sm'>Soft Cap (BNB)*</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl value={this.state.softCap} onChange={(e)=>{\r\n                                this.setState({ softCap: e.target.value });\r\n                                const formvalue = {...this.state.errors , [\"softcap\"]: \"\"}\r\n                                this.setState({errors : formvalue});\r\n                                var rd = new RegExp(/^\\d+$/);\r\n                                var rx = new RegExp(/^[-+]?[0-9]+\\.[0-9]+$/)\r\n                                if(!rd.test(parseFloat(e.target.value)) || rx.test(parseFloat(e.target.value))){\r\n                                    const formvalue = {...this.state.errors , [\"softcap\"]: \"Invalid softcap !\"}\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                else if(isNaN(e.target.value)){\r\n                                    const formvalue = {...this.state.errors , [\"softcap\"]: \"Invalid softcap\"}\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                else if(!e.target.value || e.target.value == 0){\r\n                                    const formvalue = {...this.state.errors , [\"softcap\"]: \"Softcap field is required\"}\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                else{\r\n                                    const formvalue = {...this.state.errors , [\"softcap\"]: \"\"}\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                // if (!e.target.value || isNaN(e.target.value)) {\r\n                                //     const formvalue = {...this.state.errors , [\"softcap\"]: \"Invalid softcap !\"}\r\n                                //     this.setState({errors : formvalue});\r\n                                //   }\r\n                                //   else{\r\n                                //     const formvalue = {...this.state.errors , [\"softcap\"]: \"\"}\r\n                                //     this.setState({errors : formvalue});\r\n                                //   }\r\n                                  this.handledisable();\r\n                            \r\n                            } } id=\"softcap\" placeholder=\"\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.softcap}</span>\r\n                    </div>\r\n                    <div className='note_desc mt-1 mb-0'>\r\n                   \r\n                    </div>\r\n                        </div>\r\n\r\n                       \r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Minimum Buy (BNB)*</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"mincontribution\" value={this.state.min} onChange={(e)=>{\r\n                                const formvalue = {...this.state.errors , [\"min\"]: \"\"}\r\n                                this.setState({errors : formvalue});\r\n                                this.setState({ min: e.target.value });\r\n                                if(isNaN(e.target.value)){\r\n                                    const formvalue = {...this.state.errors , [\"min\"]: \"Invalid Minimum Buy \"}\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                if(!e.target.value){\r\n                                    const formvalue = {...this.state.errors , [\"min\"]: \"Minimum Buy field is required\"}\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                               if(this.state.max){\r\n                                if(e.target.value > this.state.max){\r\n                                    const formvalue = {...this.state.errors , [\"min\"]: \"Minimum Buy  must be < Maximum Buy\"}\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                else{\r\n                                    const formvalue = {...this.state.errors , [\"min\"]: \"\"}\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                               }\r\n                               this.handledisable();\r\n                            } } placeholder=\"\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.min}</span>\r\n                    </div>\r\n                        </div>\r\n                        \r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Maximum Buy ({this.state.currency})*</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"maxcontribution\" value={this.state.max} onChange={(e)=>{\r\n                                const formvalue = {...this.state.errors , [\"max\"]: \"\"}\r\n                                this.setState({errors : formvalue});\r\n                                this.setState({ max: e.target.value });\r\n                                if(isNaN(e.target.value)){\r\n                                    const formvalue = {...this.state.errors , [\"max\"]: \"Invalid Maximum Buy \"}\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                if(!e.target.value){\r\n                                    const formvalue = {...this.state.errors , [\"max\"]: \"Maximum Buy field is required\"}\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                if(this.state.min){\r\n                                    if(e.target.value < this.state.min){\r\n                                        const formvalue = {...this.state.errors , [\"max\"]: \"Maximum Buy  must be > Minimum Buy\"}\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    else{\r\n                                        const formvalue = {...this.state.errors , [\"max\"]: \"\"}\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                   }\r\n                                   this.handledisable();\r\n                            } } placeholder=\"\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.max}</span>\r\n                    </div>\r\n                        </div> \r\n\r\n                        {/* <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Refund Type</p>\r\n                    <select className=\"form-control custm_sel\" id=\"exampleFormControlSelect3\">\r\n                        <option>Burn</option>                       \r\n                        </select>\r\n                        </div> */}\r\n\r\n                        {/* <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Select Router Exchange</p>\r\n                    <select className=\"form-control custm_sel\" id=\"exampleFormControlSelect4\">\r\n                        <option>Pancakeswap</option>                       \r\n                        </select>\r\n                        </div> */}\r\n                              {/* <div className='col-12 col-md-12 mb-3'>\r\n                        <p className='input_desc_sm'>Listing Options</p>\r\n                        <div className='d-flex'>\r\n                            <div className={`currency_badge  mr-2 ${this.state.isPancake === true? \"active\" : \"\"} `} onClick={(e)=> {\r\n                                this.setState({isPancake : true});\r\n                                \r\n                                // this.forceUpdate();\r\n                                this.handledisable();\r\n                                }}>Auto</div>\r\n                            <div className={`currency_badge  mr-2 ${this.state.isPancake === false? \"active\" : \"\"} `} onClick={(e)=> {\r\n                                this.setState({isPancake : false});\r\n                                // this.forceUpdate();\r\n                                this.handledisable();\r\n                                }}>Manual</div>                           \r\n                        </div>\r\n                    \r\n                        </div> */}\r\n                        {this.state.isPancake ?\r\n                        <>\r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Locking Days</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"liquidity\" value={this.state.unlockOn} onChange={(e)=>{\r\n                                this.setState({ unlockOn: e.target.value });\r\n                                var rx = new RegExp(/^\\d+$/);\r\n                                if(!rx.test(e.target.value)){\r\n                                    const formvalue = {...this.state.errors , [\"lockingday\"] : \"Invalid Locking Days !\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                else{\r\n                                    const formvalue = {...this.state.errors , [\"lockingday\"] : \"\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                this.handledisable();\r\n                                } } placeholder=\"0\" aria-describedby=\"basic-addon2\" />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.lockingday}</span>\r\n                    </div>\r\n                        </div> \r\n\r\n                      \r\n\r\n                        {/* <div className='col-12 col-md-12 mb-0'>\r\n                    <p className='input_desc_sm'>Listing Rate per {this.state.currency}</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"maxcontribution\" value={this.state.pancakeRate} onChange={(e)=>{\r\n                                if(!isFloat(e.target.value)){  \r\n                                    this.setState({ pancakeRate: e.target.value })\r\n                                    var rx = new RegExp(/^\\d+$/);\r\n                                if(!rx.test(e.target.value)){\r\n                                    const formvalue = {...this.state.errors , [\"listingrate\"] : `Invalid Listing Rate per ${this.state.currency} !`};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                    else {\r\n                                        const formvalue = {...this.state.errors , [\"listingrate\"] : \"\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                }\r\n                                this.handledisable();\r\n                                }} placeholder=\"0\" aria-describedby=\"basic-addon2\" />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.listingrate}</span>\r\n                    </div>\r\n                    <div className='note_desc mt-1 mb-1'>\r\n                    <p>1 {this.state.currency} = {this.state.presaleRate} {this.state.name}</p>\r\n                    </div>\r\n                        </div>  */}\r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Pancakeswap Liquidity</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"liquidity\" value={this.state.liquidityPercent} onChange={(e)=>{\r\n                                if(!isFloat(e.target.value)){ \r\n                                    this.setState({ liquidityPercent: e.target.value });\r\n                                    if(isNaN(e.target.value) || e.target.value <51 || e.target.value > 100){\r\n                                        const formvalue = {...this.state.errors , [\"liquidity\"] : \"Invalid Pancakeswap Liquidity !\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    } \r\n                                    else {\r\n                                        const formvalue = {...this.state.errors , [\"liquidity\"] : \"\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    }\r\n                                    this.handledisable();\r\n                                    }} placeholder=\"0\" aria-describedby=\"basic-addon2\" />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.liquidity}</span>\r\n                    </div>\r\n                        </div> \r\n                        </>:<></>}\r\n                        {this.state.isPancake ?\r\n                        <div className='col-12 col-md-12 mb-2'>\r\n                        <div className='note_desc mt-1 mb-0'>\r\n                    <p>Enter the percentage of raised funds that sholud be allocated to Liquidity on (Min 51%, Max 100%)</p>\r\n                    <p>If I spend 1 BNB on how many tokens will I receive? Usually the amount is lower than presale rate to allow for a higher listing price on</p>\r\n                    \r\n                    </div>\r\n                        </div> : <></>}\r\n                        <div className='col-12 col-md-12 mb-0'>\r\n                    <p className='input_desc_sm'>Select Start time & End time (UTC)*</p>\r\n                    </div>\r\n                    <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Start Time (UTC)*</p>\r\n                    <div className=\"inputs input-groups date_inoput_grps\">\r\n                        <InputGroup className=\"datepicker_input\">\r\n                        <DatePicker\r\n                         minDate={new Date()}\r\n                                                    filterTime={this.filterPassedTime.bind(this)}\r\n                                                   showTimeSelect\r\n                                                   selected={this.state.startDate}\r\n                                                   onChange={(date)=> {\r\n                                                    this.setState({startDate: date})\r\n                                                    // if(Date.parse(date) < Date.now()){\r\n                                                    //     let formData = { ...this.state.errors, [\"startdate\"]: \"Start Time needs to be after now\" };\r\n                                                    //      this.setState({ errors: formData });\r\n                                                    //   }\r\n                                                    //   else{\r\n                                                    //     let formData = { ...this.state.errors, [\"startdate\"]: \"Start Time needs to be after now\" };\r\n                                                    //      this.setState({ errors: formData });\r\n                                                    //   }\r\n                                                      if(this.state.endDate){\r\n                                                        if(Date.parse(date) > this.state.endDate){\r\n                                                            let formData = { ...this.state.errors, [\"startdate\"]: \"Start Time must be < End Time\" };\r\n                                                            this.setState({ errors: formData });\r\n                                                        }\r\n                                                        if(this.state.endDate > Date.parse(date)){\r\n                                                            let formData = { ...this.state.errors, [\"enddate\"]: \"\" };\r\n                                                            this.setState({ errors: formData });\r\n                                                        }\r\n                                                        // else{\r\n                                                        //     let formData = { ...this.state.errors, [\"startdate\"]: \"Start Time needs to be after now\" };\r\n                                                        //      this.setState({ errors: formData });\r\n                                                        //   }\r\n                                                      }\r\n                                                      this.handledisable();\r\n                                                }\r\n                                            \r\n                                            }\r\n                                                   dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                                 />\r\n                          \r\n                        </InputGroup>\r\n                        <InputGroup.Append className='cur_pointer'>\r\n                                <button variant=\"outline-secondary\" className=\"trans_cal_btn\">\r\n                                <i class=\"far fa-calendar-alt\"></i>\r\n                                </button>\r\n                            </InputGroup.Append>\r\n                    </div>\r\n                     <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.startdate}</span>\r\n                        </div>\r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>End Time (UTC)*</p>\r\n                    <div className=\"inputs input-groups date_inoput_grps\">\r\n                        <InputGroup className=\"datepicker_input\">\r\n                        <DatePicker\r\n                                                 minDate={new Date()}\r\n                                                 filterTime={this.filterPassedTime.bind(this)}\r\n                                                   showTimeSelect\r\n                                                   selected={this.state.endDate}\r\n                                                   onChange={(date)=> {\r\n                                                    this.setState({endDate: date});\r\n                                                   \r\n                                                    // if(Date.parse(date) > Date.now()){\r\n                                                    //     let formData = { ...this.state.errors, [\"enddate\"]: \"\" };\r\n                                                    //     this.setState({ errors: formData });\r\n                                                    //   }\r\n                                                    //   else{\r\n                                                    //     let formData = { ...this.state.errors, [\"enddate\"]: \"End Time needs to be after now\" };\r\n                                                    //      this.setState({ errors: formData });\r\n                                                    //   }\r\n                                                      if(this.state.startDate){\r\n                                                        if(Date.parse(date) <= this.state.startDate){\r\n                                                            let formData = { ...this.state.errors, [\"enddate\"]: \"End Time must be > Start Time\" };\r\n                                                            this.setState({ errors: formData });\r\n                                                        }\r\n                                                        if(this.state.startDate < Date.parse(date)){\r\n                                                            let formData = { ...this.state.errors, [\"startdate\"]: \"\" };\r\n                                                            this.setState({ errors: formData });\r\n                                                            let formdata = { ...this.state.errors, [\"enddate\"]: \"\" };\r\n                                                             this.setState({ errors: formdata });\r\n                                                        }\r\n                                                        // else{\r\n                                                        //     let formData = { ...this.state.errors, [\"enddate\"]: \"\" };\r\n                                                        //      this.setState({ errors: formData });\r\n                                                        //   }\r\n                                                      }\r\n                                                      this.handledisable();\r\n                                                }}\r\n                                                   dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                                 />\r\n                          \r\n                        </InputGroup>\r\n                        <InputGroup.Append className='cur_pointer'>\r\n                                <button variant=\"outline-secondary\" className=\"trans_cal_btn\">\r\n                                <i class=\"far fa-calendar-alt\"></i>\r\n                                </button>\r\n                            </InputGroup.Append>\r\n                    </div>\r\n                    <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.enddate}</span>\r\n                        </div>  \r\n\r\n                   \r\n\r\n               <div className='col-12 col-md-12'>\r\n               <div className=\"custom-control custom-checkbox\">\r\n  <input type=\"checkbox\" checked={this.state.isVested} onChange={(e)=> this.setState({isVested : e.target.checked})} className=\"custom-control-input\" id=\"customCheck1\" />\r\n  <label className=\"custom-control-label\" for=\"customCheck1\">Using Vesting Contributor?</label>\r\n</div></div>  \r\n\r\n{this.state.isVested ?\r\n            <>\r\n            <div className='col-12 col-md-12 mb-3 mt-4'>\r\n                    <p className='input_desc_sm'>Vesting Period Days</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"liquiditylockingdays\" value={this.state.vestInterval} onChange={(e)=>{\r\n                                this.setState({ vestInterval: e.target.value });\r\n                                var rx = new RegExp(/^\\d+$/);\r\n                                if(!rx.test(e.target.value)){\r\n                                    const formvalue = {...this.state.errors , [\"vestinterval\"] : \"Invalid Vesting Period Days !\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                else{\r\n                                    const formvalue = {...this.state.errors , [\"vestinterval\"] : \"\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                this.handledisable();\r\n                            } }  placeholder=\"\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.vestinterval}</span>\r\n                    </div>\r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 mb-3 mt-4'>\r\n                    <p className='input_desc_sm'>Rewards % per Vesting Period</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"liquiditylockingdays\"value={this.state.vestPercent} onChange={(e)=>{\r\n                                if(!isFloat(e.target.value)){ \r\n                                    this.setState({ vestPercent: e.target.value }) ;\r\n                                    if(isNaN(e.target.value) || e.target.value <0 || e.target.value > 100){\r\n                                        const formvalue = {...this.state.errors , [\"vestpercent\"] : \"Invalid Rewards % per Vesting Period !\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    } \r\n                                    else {\r\n                                        const formvalue = {...this.state.errors , [\"vestpercent\"] : \"\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    this.handledisable();\r\n                                }} }placeholder=\"\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.vestpercent}</span>\r\n                    </div>\r\n                        </div>\r\n\r\n               </>:<></>     }   \r\n\r\n\r\n\r\n                    \r\n                    <div className='col-12 col-md-12 text-center'>\r\n                        <button className=\"get-started-btn mr-2\" onClick={()=>{this.setState({ currentStep: 1})}}>\r\n                           Back\r\n                        </button>\r\n                        <button className=\"get-started-btn\"  onClick={()=>{\r\n                            console.log(\"disable\" , this.handledisable());\r\n                            if( this.handledisable()){\r\n                                \r\n                            }\r\n                            else{\r\n                                this.setState({ currentStep: 3})\r\n                            }\r\n                            // else{\r\n                            //     toast.error(\"\")\r\n                            // }\r\n                            }}>\r\n                           Next\r\n                        </button>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"thirdstep\" className={this.state.currentStep ==3 ? \"d-block\":\"d-none\"}>\r\n            <div className='row'>\r\n                <div className='col-12 col-md-12 mb-0'>\r\n                        \r\n                        <p className='input_desc_sm'>Logo URL*</p>\r\n                        <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"file\" value={this.state.logo} onChange={(e)=>{\r\n                                this.setState({ logo: e.target.value });\r\n                                if(urlvalidation(e.target.value)){\r\n                                    const formvalue = {...this.state.errors , [\"logo\"] : \"\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                else{\r\n                                    const formvalue = {...this.state.errors , [\"logo\"] : \"Invalid Logo Url!\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                this.handledisableurlbutton();\r\n                            } } placeholder=\"\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.logo}</span>\r\n                    </div>\r\n                        <div className='note_desc mt-1 mb-0'>\r\n                    <p>URL must be end with a supported image extension .png, .jpg,</p>\r\n                    </div>\r\n                            </div>\r\n\r\n                            <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Website*</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl value={this.state.website} onChange={(e)=>{\r\n                                this.setState({ website: e.target.value });\r\n                                if(urlvalidation(e.target.value)){\r\n                                    const formvalue = {...this.state.errors , [\"website\"] : \"\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                else{\r\n                                    const formvalue = {...this.state.errors , [\"website\"] : \"Invalid Website Url!\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                this.handledisableurlbutton();\r\n                            } } id=\"logolink1\" placeholder=\"https://cryptolaunchpad.app\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.website}</span>\r\n                    </div>\r\n                        </div>\r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Facebook</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl  id=\"logolinkfb\" placeholder=\"https://facebook.com\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                onChange={(e)=>{\r\n                                    this.setState({\"facebook\" : e.target.value}); \r\n                                    if(urlvalidation(e.target.value)){\r\n                                        const formvalue = {...this.state.errors , [\"facebook\"] : \"\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    else{\r\n                                        const formvalue = {...this.state.errors , [\"facebook\"] : \"Invalid Facebook Url!\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    this.handledisableurlbutton();\r\n                                }}\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.facebook}</span>\r\n                    </div>\r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Twitter</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl value={this.state.twitter} onChange={(e)=>{\r\n                                this.setState({ twitter: e.target.value });\r\n                                if(urlvalidation(e.target.value)){\r\n                                    const formvalue = {...this.state.errors , [\"twitter\"] : \"\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                else{\r\n                                    const formvalue = {...this.state.errors , [\"twitter\"] : \"Invalid Twitter Url!\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                this.handledisableurlbutton();\r\n                            } } id=\"logolink2\" placeholder=\"https://twitter.com\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.twitter}</span>\r\n                    </div>\r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Github</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl id=\"logolinkgit\" placeholder=\"https://github.com\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                onChange={(e)=>{\r\n                                    this.setState({\"github\" : e.target.value})\r\n                                    if(urlvalidation(e.target.value)){\r\n                                        const formvalue = {...this.state.errors , [\"github\"] : \"\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    else{\r\n                                        const formvalue = {...this.state.errors , [\"github\"] : \"Invalid Github Url!\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    this.handledisableurlbutton();\r\n                                }}\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.github}</span>\r\n                    </div>\r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Telegram</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl value={this.state.telegram} onChange={(e)=>{\r\n                                this.setState({ telegram: e.target.value });\r\n                                if(urlvalidation(e.target.value)){\r\n                                    const formvalue = {...this.state.errors , [\"telegram\"] : \"\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                else{\r\n                                    const formvalue = {...this.state.errors , [\"telegram\"] : \"Invalid Telegram Url!\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                this.handledisableurlbutton();\r\n                            } } id=\"logolink3\" placeholder=\"https://telegram.com\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.telegram}</span>\r\n                    </div>\r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Instagram</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl  id=\"logolinkinsta\" placeholder=\"https://instagram.com\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                onChange={(e)=>{\r\n                                    this.setState({instagram : e.target.value});\r\n                                    if(urlvalidation(e.target.value)){\r\n                                        const formvalue = {...this.state.errors , [\"instagram\"] : \"\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    else{\r\n                                        const formvalue = {...this.state.errors , [\"instagram\"] : \"Invalid Instagram Url!\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    this.handledisableurlbutton();\r\n                                }}\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.instagram}</span>\r\n                    </div>\r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Discord</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl  id=\"logolinkdiscord\" placeholder=\"https://discord.com\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                onChange={(e)=>{\r\n                                    this.setState({discord : e.target.value});\r\n                                    if(urlvalidation(e.target.value)){\r\n                                        const formvalue = {...this.state.errors , [\"discord\"] : \"\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    else{\r\n                                        const formvalue = {...this.state.errors , [\"discord\"] : \"Invalid Discord Url!\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    this.handledisableurlbutton();\r\n                                }}\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.discord}</span>\r\n                    </div>\r\n                        </div>\r\n                        \r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Reddit</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl  id=\"logolinkreddit\" placeholder=\"https://reddit.com\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                onChange={(e)=>{\r\n                                    this.setState({reddit : e.target.value});\r\n                                    if(urlvalidation(e.target.value)){\r\n                                        const formvalue = {...this.state.errors , [\"reddit\"] : \"\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    else{\r\n                                        const formvalue = {...this.state.errors , [\"reddit\"] : \"Invalid Reddit Url!\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    this.handledisableurlbutton();\r\n                                }}\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.reddit}</span>\r\n                    </div>\r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 mb-0'>\r\n                    <p className='input_desc_sm'>Youtube Video</p>\r\n                    <div className=\"inputs input-groups\">\r\n                        <InputGroup className=\"\">\r\n                            <FormControl  id=\"logolinkyoutube\" placeholder=\"https://youtube.com\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                onChange={(e)=>{\r\n                                    this.setState({youtubevideo : e.target.value});\r\n                                    if(urlvalidation(e.target.value)){\r\n                                        const formvalue = {...this.state.errors , [\"youtube\"] : \"\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    else{\r\n                                        const formvalue = {...this.state.errors , [\"youtube\"] : \"Invalid Youtube Video Url!\"};\r\n                                        this.setState({errors : formvalue});\r\n                                    }\r\n                                    this.handledisableurlbutton();\r\n                                }}\r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.youtube}</span>\r\n                    </div>\r\n\r\n                    <div className='note_desc mt-1 mb-0'>\r\n                    <p>Input your youtube URL</p>\r\n                    </div>\r\n                        </div>\r\n\r\n                        <div className='col-12 col-md-12 mb-3'>\r\n                    <p className='input_desc_sm'>Description</p>\r\n                    <div className=\"inputs input-groups text_are_grp\">\r\n                        <InputGroup className=\"\" >\r\n                            <textarea value={this.state.description} onChange={(e)=>{\r\n                                this.setState({ description: e.target.value });\r\n                                if(!e.target.value){\r\n                                    const formvalue = {...this.state.errors , [\"description\"] : \"Invalid Description!\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                else{\r\n                                    const formvalue = {...this.state.errors , [\"description\"] : \"\"};\r\n                                    this.setState({errors : formvalue});\r\n                                }\r\n                                this.handledisableurlbutton();\r\n                            } } id=\"description\" rows=\"3\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                \r\n                            />\r\n                          \r\n                        </InputGroup>\r\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.description}</span>\r\n                    </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    \r\n                    <div className='col-12 col-md-12 text-center'>\r\n                        <button className=\"get-started-btn mr-2\" onClick={()=>{this.setState({ currentStep: 2})}}>\r\n                           Back\r\n                        </button>\r\n                        <button className=\"get-started-btn\" onClick={()=>{\r\n                            this.setState({ currentStep: 4});\r\n                            this.calculateDepositTokens();\r\n                        }}\r\n                         disabled={this.state.button3}\r\n                        >\r\n                           Next\r\n                        </button>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"fourthstep\" className={this.state.currentStep ==4 ? \"d-block\":\"d-none\"}>\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            {/* <span className='desc_grey_txt'>Deposit Token :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.deposit} {this.state.name}</span> */}\r\n            </p>\r\n\r\n            {/* <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Factory Address :</span>\r\n            <span className='desc_grey_txt font_12'>0xf4567uyht8956 \r\n            <i class=\"fa fa-files-o pl-2 copy_hover\" aria-hidden=\"true\"></i>\r\n            </span>\r\n            </p> */}\r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Token Name :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.tokeninfo?.name ? this.state.tokeninfo?.name : \"\"}\r\n            </span>\r\n            </p>\r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Token Symbol :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.tokeninfo?.symbol ? this.state.tokeninfo?.symbol : \"\"}\r\n            </span>\r\n            </p>\r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Token Decimals :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.tokeninfo?.decimals ? this.state.tokeninfo?.decimals : \"\"}\r\n            </span>\r\n            </p>\r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Presale Rate :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.presaleRate ? this.state.presaleRate : \"\"} {this.state.symbol ? this.state.symbol : \"\"}\r\n            </span>\r\n            </p>\r\n\r\n             \r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Sale Method :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.isWhitelisted === true ? \"Public\" : \"Private\" }\r\n            </span>\r\n            </p> \r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Softcap :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.softCap ? this.state.softCap : \" \"} {this.state.currency ? this.state.currency : \"\"}\r\n            </span>\r\n            </p> \r\n\r\n            {/* <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Hardcap :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.hardCap ? this.state.hardCap : \" \"} {this.state.currency ? this.state.currency : \"\"}\r\n            </span>\r\n            </p>  */}\r\n\r\n\r\n            \r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Minimum Buy :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.min} {this.state.currency}\r\n            </span>\r\n            </p> \r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Maximum Buy :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.max} {this.state.currency}\r\n            </span>\r\n            </p> \r\n{this.state.isPancake ? \r\n\r\n\r\n<>\r\n\r\n\r\n{/* <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Listing Rate :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.pancakeRate ? this.state.pancakeRate : \"\"} {this.state.name}\r\n            </span>\r\n            </p> */}\r\n             <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Liquidity :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.liquidityPercent}%\r\n            </span>\r\n            </p>   \r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Liquidity Lockup Time :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.unlockOn}\r\n            </span>\r\n            </p> \r\n            </> : <></>}\r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Start Time :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.startDate ? new Date(this.state.startDate).toLocaleDateString()+\"  \"\r\n             +new Date(this.state.startDate).getHours()+\":\"+new Date(this.state.startDate).getMinutes()+\":\"\r\n             +new Date(this.state.startDate).getSeconds()+\"(GMT)\"  : \"\" }\r\n            </span>\r\n            </p>   \r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>End Time :</span>\r\n            <span className='desc_grey_txt font_12'>{this.state.endDate ? new Date(this.state.endDate).toLocaleDateString()+\"  \"\r\n             +new Date(this.state.endDate).getHours()+\":\"+new Date(this.state.endDate).getMinutes()+\":\"\r\n             +new Date(this.state.endDate).getSeconds()+\"(GMT)\"  : \"\"}\r\n            </span>\r\n            </p> \r\n\r\n           \r\n\r\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\r\n            <span className='desc_grey_txt'>Website :</span>\r\n            <span className='desc_grey_txt font_12'><a href=\"#\" target=\"_blank\" className='link_grn_new link_brk_word'>{this.state.website ? this.state.website : \"\"}</a>\r\n            </span>\r\n            </p> \r\n                   \r\n            <div className='mb-4 mt-4'>\r\n                            <div className='card_footer_form'>\r\n                                <div className='d-flex align-items-center justify-content-center'>\r\n                                <i class=\"fa fa-exclamation-circle text-danger-war\" aria-hidden=\"true\"></i>\r\n                                <p className='mb-0 pl-3'>For tokens with burns, rebase or other special transfers please ensure that you have a way to whitelist multiple addresses or turn off the special transfer events (By setting fees to 0 for example for the duration of the presale)</p>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                       \r\n\r\n                        {this.state.deposit > 0 ?\r\n                        <div className='col-12'>\r\n<div className='note_desc mt-1 mb-1 text-center'>\r\n                    <p>Need {this.state.deposit} {this.state.name} to create launchpad.</p>\r\n                    </div>\r\n</div> : <></> }\r\n\r\n\r\n                        <div className='col-12 col-md-12 text-center'>\r\n                        <button className=\"get-started-btn mr-2\" onClick={()=>{this.setState({ currentStep: 3})}}>\r\n                           Back\r\n                        </button>\r\n\r\n\r\n                        {/* <Link to=\"/launchpaddetail\" className=\"get-started-btn\" onClick={()=>{this.setState({ currentStep: 3})}}>\r\n                           Submit\r\n                        </Link> */}\r\n                        { !this.state.isDeposited ? \r\n                        (this.state.createdSale == '' ?\r\n                        <a  onClick={() => this.CreateSale()} className=\"get-started-btn\">\r\n                           Create\r\n                        </a> : \r\n                        this.renderDeposit()):<a onClick={this.goToSale.bind(this)} className=\"get-started-btn\">Proceed to Sale</a>\r\n                        }\r\n                        </div>\r\n                        </div>\r\n                      \r\n             </div>\r\n             </div>\r\n            </div>\r\n            </div>\r\n        \r\n\r\n                \r\n               \r\n        </div>\r\n           </div>\r\n         </div>\r\n\r\n        \r\n         {tokenModal && <TokenModal connect={\"string\"} address = {(val)=>this.settokenaddress(val)} onDismiss={()=>this.onDismiss()} /> }\r\n        \r\n       </div>\r\n     \r\n\r\n\r\n    \r\n       \r\n      )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default CreatetabFair","/Users/sudhanshusrivastava/Downloads/launchpad/src/routes/adminroutesfront.js",[],"/Users/sudhanshusrivastava/Downloads/launchpad/src/routes/userroutefront.js",[],"/Users/sudhanshusrivastava/Downloads/launchpad/src/components/PlaceholdingLoader.js",["1554","1555"],"import React from 'react'\n\nconst PlaceholdingLoader = (props) => {\n  const [valueone, setValueOne] = React.useState([30]);\n\n\n\n   \n    return (\n        <div className={props.parentclassname}>\n          <div className={props.subclassnames?props.subclassnames:\"\"}>\n        <div className='content'>\n        <div className={props.classnames}>\n        </div>\n        </div>\n        </div>\n        </div>\n                \n    \n    \n    \n      \n       \n    )\n}\n\nexport default PlaceholdingLoader\n","/Users/sudhanshusrivastava/Downloads/launchpad/src/components/Privatesale/CreatePrivatesaletab.js",["1556","1557","1558","1559","1560","1561","1562","1563","1564","1565","1566","1567","1568","1569","1570","1571","1572","1573","1574","1575","1576","1577","1578","1579","1580","1581","1582","1583","1584","1585","1586","1587","1588","1589","1590","1591","1592","1593","1594","1595","1596","1597","1598","1599","1600","1601","1602","1603","1604","1605","1606","1607","1608","1609","1610","1611","1612","1613","1614","1615","1616","1617","1618","1619","1620","1621","1622","1623","1624","1625","1626","1627","1628","1629","1630","1631","1632","1633","1634","1635","1636","1637","1638","1639","1640","1641","1642","1643","1644","1645","1646","1647","1648","1649","1650","1651","1652","1653","1654","1655","1656","1657","1658"],"import React, { Component } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useContext, useEffect, useState } from \"react\";\nimport { InputGroup, FormControl,Form } from 'react-bootstrap';\nimport isEmpty from 'is-empty';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport { ONEDAYINSECONDS, CHAINS, userFeeWithtoken, userFee } from '../../config/env'\nimport { UseTokenInfo,IsValidAddress,createPresale,toFixedNumber,getSaleAddress,depositTokens, isFloat, Checkaddress, Approvetoken, GetAdminfee } from '../../hooks/useContract'\nimport { getAccount } from '../../hooks/useAccount'\nimport {CURRENT_CHAIN_ID,CURRENT_RPC_URL} from '../../hooks/useWeb3'\n\nimport TokenModal from \"../Launchpad/TokenModal\"\n\nimport { Link } from 'react-router-dom';\nimport { urlvalidation } from '../../hooks/kycvalidation';\nimport { getkychook } from '../../hooks/usebackend';\n\nconst  formvalue = {   \n    logo: '',       \n    name: '',\n    symbol: '',\n    address: '',\n    decimal: '',\n    presaleRate: 0,\n    softCap: 0,\n    hardCap: 0,\n    min: 0,\n    max : 0,\n    isVested: false,\n    isPancake: false,\n    pancakeRate:0,\n    liquidityPercent:0,\n    unlockOn: 0,\n    startDate: '',\n    endDate: '',\n    vestPercent: 0,\n    vestInterval: 0,\n    isWithoutToken: false,\n    description: '',\n    website: '',\n    twitter: '',\n    telegram: '',\n    deposit: 0,\n    decimals: 0,\n    createdSale: '',\n    isDeposited: false,\n    isWhitelisted: true,\n    currentStep:1,\n    tokenModal: false,           \n   //private sale\n\n  //  title : \"\",\n   currency : \"BNB\",\n   tokenaddress : \"\",\n   tokeninfo : {},\n   errors : {},\n   fee : 5,\n   facebook : \"\",\n   github : \"\",\n   instagram : \"\",\n   discord : \"\",\n   reddit : \"\",\n   youtubevideo : \"\",\n   button1: true,\n   button2 : true,\n   button3 : true,\n   isToken : false,\n   userFee : 0,\n   WithTokenaddress : \"\",\n   LaunchpadType: true,\n   kyc : \"\",\n   approvebutton : false,\n   poolfee : 0\n  \n  };  \nclass CreatePrivatesaletab extends Component\n{\n\n       \n    constructor(props) {\n        super(props);\n        this.state = formvalue\n    }\n\n    componentDidUpdate(){\n        console.log(\"update\");\n        \n    }\n\n    // const saledetail = isEmpty(this.state.error) && this.state.presaleRate && this.state.softCap\n    // && this.state.hardCap && this.state.min && this.state.max  && this.state.startDate &&\n    // this.state.endDate;\n\n    // const panck = this.state.isPancake ? this.state.unlockOn &&\n    // this.state.liquidityPercent && this.state.pancakeRate ? true\n    // const vestdetail = this.state.isVested ? this.state.vestInterval && this.state.vestPercent : true\n\n\n    handledisable = () =>{\n        // console.log(\"vest\" , isvalid);\n        this.setState({button2 : false})\n        var isvalid = true;\n        var i = 1;\n        // let pancake = this.state.isPancake ? \n        if(isEmpty(this.state.error) && this.state.presaleRate && this.state.softCap\n        && this.state.hardCap && this.state.min && this.state.max  && this.state.startDate &&\n        this.state.endDate){\n            isvalid = false\n            console.log(\"vest1\" , isvalid);\n                if(this.state.isPancake){\n                    isvalid = true;\n                    console.log(\"vest2\" , isvalid);\n                    if(this.state.unlockOn &&\n                        this.state.liquidityPercent && this.state.pancakeRate){\n                            console.log(\"vest3\" , isvalid);\n                            isvalid = false;\n                            console.log(\"vest3\" , isvalid);\n                        }\n                }\n                // else if(!this.state.ispancake && this.state.isvested){\n                //     isvalid = true;\n                // }\n                // else{\n                //     isvalid = false;\n                // }\n                if(this.state.isVested){\n                    isvalid = true;\n                    console.log(\"vest4\" , isvalid);\n                    if(this.state.vestInterval && this.state.vestPercent){\n                        isvalid = false\n                        console.log(\"vest5\" , isvalid);\n                    }\n                }\n                // else if(this.state.ispancake && !this.state.isvested){\n                //     isvalid = true;\n                // }\n                // else{\n                //     isvalid = false;\n                // }\n                // else{\n                //     isvalid = false;\n                // }\n                // if(!this.state.isvested || !this.state.isPancake){\n                //     isvalid = false;\n                // }\n        }\n            this.setState({button2 : isvalid}) ;\n            console.log(\"isvalid\" , isvalid);\n            return isvalid;\n    }\n\n    handledisableurlbutton = () => {\n        var isvalid = true;\n        if(this.state.logo && this.state.website && this.state.facebook && this.state.twitter && \n            this.state.github && this.state.telegram && this.state.instagram && this.state.discord\n            && this.state.reddit && this.state.youtubevideo && this.state.description){\n                isvalid = false;\n            }\n            this.setState({button3 : isvalid})\n    }\n\n    // componentDidMount(){\n    //     const CHAIN_ID = CURRENT_CHAIN_ID();\n    //     const CURRENT_RPC = CURRENT_RPC_URL();\n    //     console.log(\"current chain id\",CHAIN_ID);\n    //     let ROUTER;\n    //     CHAINS.map((data)=>{\n    //         ROUTER = ((data.CHAIN_ID==CHAIN_ID)&&(data.RPC_URL == CURRENT_RPC))&&data.ROUTER;\n    //         console.log((data.CHAIN_ID==CHAIN_ID)&&data.ROUTER,\"data in map\");\n    //     })\n    // }\n\n    // Presale Creation\n     CreateSale = async() => {\n        console.log(\"call\" , this?.state?.startDate);\n       \n        let Addresses = [];\n        let Values = [];\n        let Details = [];\n        let isSetter = [];\n\n        const account= getAccount()\n       \n// console.log(\"state\" , this.state);\n        const startTime = this?.state?.startDate;\n        const endTime = this?.state?.endDate;\n\n                                // let startDiff = 0;\n                                // let endDiff = 0;\n                                // var now = new Date();\n                                \n                                // if(startTime > now.getTime())\n                                //     startDiff = parseInt((new Date(startTime).getTime() - now.getTime())/86400/1000) ;\n                                \n                                // endDiff =  parseInt(((new Date(endTime).getTime() - now.getTime())/86400/1000)-startDiff) ;\n\n        const CHAIN_ID = CURRENT_CHAIN_ID();\n        const CURRENT_RPC = CURRENT_RPC_URL();\n        let ROUTER;\n        CHAINS.map((data)=>{\n        if((((data.CHAIN_ID==CHAIN_ID)&&(data.RPC_URL == CURRENT_RPC))&&data.ROUTER)!=false)\n            ROUTER = ((data.CHAIN_ID==CHAIN_ID)&&(data.RPC_URL == CURRENT_RPC))&&data.ROUTER;\n            console.log(\"router inside map :\",ROUTER);\n        })\n        console.log(\"router address:\",ROUTER);\n        const startDiff = parseInt(parseInt((new Date(startTime).getTime()))/1000);\n        const endDiff =  parseInt(parseInt((new Date(endTime).getTime()))/1000);\n                                        \n                                            // _token 0\n                                            //_router 1\n       Addresses.push(this?.state?.tokenaddress); \n       Addresses.push(ROUTER);\n       Addresses.push(account);\n       Addresses.push(this.state.WithTokenaddress)\n          //_min 0 \n        //_max 1\n        //_rate 2\n        // _soft  3\n        // _hard 4\n        //_pancakeRate  5\n        //_unlockon  6\n        // _percent 7\n        // _start 8\n        //_end 9\n        //_vestPercent 10\n        //_vestInterval 11\n        Values.push(toFixedNumber(this?.state?.min*10**18).toString());\n        Values.push(toFixedNumber(this?.state?.max*10**18).toString());\n        Values.push(this?.state?.presaleRate);\n        Values.push(toFixedNumber(this?.state?.softCap*10**18).toString());\n        Values.push(toFixedNumber(this?.state?.hardCap*10**18).toString());\n        Values.push(this?.state?.pancakeRate.toString());\n        Values.push(this?.state?.unlockOn.toString());\n        Values.push(this?.state?.liquidityPercent.toString());\n        Values.push(startDiff.toString());\n        Values.push(endDiff.toString());\n        Values.push((this?.state?.vestPercent*100).toString());\n        Values.push((this?.state?.vestInterval * ONEDAYINSECONDS).toString());\n\n        Values.push((this?.state?.userFee)?.toString())\n\n         // isAuto 0\n        //_isvested 1\n        // isWithoutToken 2\n        isSetter.push(this?.state?.isPancake);\n        isSetter.push(this?.state?.isVested);\n        isSetter.push(this?.state?.isWithoutToken);\n        isSetter.push(this?.state?.isWhitelisted);\n        isSetter.push(this?.state?.currency == \"BNB\" ? true : false)\n        isSetter.push(this?.state?.isToken)\n        isSetter.push(this.state.LaunchpadType)\n         // description 0 \n        // website,twitter,telegram 1,2,3\n        //logo 4\n        //name 5\n        //symbol 6\n        Details.push(this?.state?.description);\n        Details.push(this?.state?.website);\n        Details.push(this?.state?.twitter);\n        Details.push(this?.state?.telegram);\n        Details.push(this?.state?.logo);\n        Details.push(this?.state?.tokeninfo?.name);\n        Details.push(this?.state?.tokeninfo?.symbol);\n        Details.push(this?.state?.github);\n        Details.push(this?.state?.instagram);\n        Details.push(this?.state?.discord);\n        Details.push(this?.state?.reddit);\n        Details.push(this?.state?.youtubevideo);\n\n        // const data = this.validate()\n        // if(data)\n        //     return false;\n\n\n        console.log(\"DATA : \",Addresses,Values,isSetter,Details)\n        const sale = await createPresale(Addresses,Values,isSetter,Details,account)\n        this.setState({createdSale: sale});\n        console.log(\"createdSale : \",sale);\n    }\n    componentDidMount(){\n        this.GetTokenAddress(\"BNB\")\n        this.handlegetkyc();\n        this.getfee();\n    }\n\n    getfee = async()=>{\n        let fee = await GetAdminfee();\n        this.setState({poolfee : fee.deploymentfee /10**18})\n    }\n\n    GetTokenAddress(value){\n       \n        let Withtokenaddress;\n        if(value === \"BUSD\"){\n            Withtokenaddress = CHAINS[localStorage.getItem(\"CHAIN\")].BUSD\n            this.setState({ WithTokenaddress: CHAINS[localStorage.getItem(\"CHAIN\")].BUSD});\n        }else if(value === \"USDT\"){\n            Withtokenaddress = CHAINS[localStorage.getItem(\"CHAIN\")].USDT\n            this.setState({ WithTokenaddress: CHAINS[localStorage.getItem(\"CHAIN\")].USDT});\n        }else if(value === \"USDC\"){\n            Withtokenaddress = CHAINS[localStorage.getItem(\"CHAIN\")].USDC  \n            this.setState({ WithTokenaddress: CHAINS[localStorage.getItem(\"CHAIN\")].USDC});\n        }else if(value === \"BNB\"){\n            Withtokenaddress = CHAINS[localStorage.getItem(\"CHAIN\")].BNB\n            this.setState({ WithTokenaddress: CHAINS[localStorage.getItem(\"CHAIN\")].BNB});\n        }\n       \n            // this.setState({ WithTokenaddress: Withtokenaddress});\n           \n    }\n\n    async approvetoken(){\n        await Approvetoken(this.state.tokenaddress);\n        this.setState({approvebutton : true})\n    }\n\n    handlegetkyc = async()=>{\n        if(isEmpty(this.state.kyc)){\n          let walletaddress = localStorage.getItem(\"accountInfo\");\n          let result = await getkychook(walletaddress.toLowerCase());\n          console.log(\"result\" , result?.data?.data);\n          if(result?.data?.data?.record?.status == 'Approved' || result?.data?.data?.record?.status == \"Pending\"){\n            this.setState({kyc : result?.data?.data?.status})\n          }\n        }\n      }\n\n\n     goToSale = ()=>{\n        window.location.href = `${window.location.origin}/privatesaledetail/${this.state.createdSale}`;\n    }\n\n    // async getTokenInfo(tokenaddress){\n    //     const isValid = await IsValidAddress(tokenaddress);\n    //     if(tokenaddress.length == 42 && !isValid)\n    //     {\n    //         this.setState({errors : \"tokendata.errors\"});\n    //         this.setState({tokeninfo : {}})\n    //     }\n    // //         toast.error(\"This is not a Valid Address !\",\n    // // {\n    // //     style: {\n    // //     minWidth: '300px',\n    // //     minHeight: '55px'\n    // //     }\n    // // })\n       \n    //     console.log(\"IS valid \",isValid)\n    //     if(tokenaddress.length == 42 && isValid){\n    //         const token = await UseTokenInfo(tokenaddress);\n    //         this.setState({ name: token.name });\n    //         this.setState({ symbol: token.symbol });\n    //         this.setState({ decimals: token.decimals });\n    //     }\n    // }\n\n    calculateDepositTokens(){\n        this.forceUpdate() \n        let topancakeTokens =0;\n        let pancakeTokens = 0;\n        const presalePrice = 1/parseFloat(this.state.presaleRate);\n        if(this.state.isPancake){\n            const pancakePrice = 1/parseFloat(this.state.pancakeRate);\n            topancakeTokens = parseFloat(this.state.hardCap) * parseFloat(this.state.liquidityPercent) / 100;\n            pancakeTokens = topancakeTokens/pancakePrice;\n            console.log(\"pancake tokens : \",pancakeTokens)\n        }\n         const netTokens = parseFloat(this.state.hardCap)/presalePrice;\n         console.log(\"net Token : \",pancakeTokens + netTokens)\n         this.setState({ deposit: pancakeTokens + netTokens });\n        \n    }\n\n    async DepositTokens(){\n        const account= getAccount()\n        const tokenAmount = toFixedNumber(this.state.deposit * 10 ** this.state.tokeninfo.decimals).toString()\n        const isDeposit = await depositTokens(this.state.tokenaddress,this.state.createdSale,tokenAmount,account)\n        this.setState({ isDeposited : isDeposit});\n    }   \n\n    renderDeposit(){\n        return( this.state.deposit > 0 ?\n              <button onClick={this.DepositTokens.bind(this)} className=\"get-started-btn\">Deposit {this.state.deposit} {this.state.symbol}</button>:\n               <button onClick={this.calculateDepositTokens.bind(this)} className=\"get-started-btn\">Calculate</button>)\n    }\n\n    validate(){\n        console.log(\"this.state.hardCap\",typeof this.state.hardCap,\"this.state.softCap\",typeof this.state.softCap,(this.state.hardCap) < (this.state.softCap),\"10<8\",10<8);\n        if(parseFloat(this.state.hardCap) < parseFloat(this.state.softCap)){\n            toast.error(\"Hard Cap must be Higher than Soft Cap !\",\n            {\n                style: {\n                minWidth: '300px',\n                minHeight: '55px'\n                }\n            })\n        }\n        if((parseFloat(this.state.presaleRate) < 0)){\n            toast.error(\"Price must be greater than 0\",\n            {\n                style: {\n                minWidth: '300px',\n                minHeight: '55px'\n                }\n            })\n        }\n        if((parseFloat(this.state.pancakeRate) < 0)){\n            toast.error(\"Pancake price must be greater than 0\",\n            {\n                style: {\n                minWidth: '300px',\n                minHeight: '55px'\n                }\n            })\n        }\n\n        return (parseFloat(this.state.hardCap) < parseFloat(this.state.softCap)) || (parseFloat(this.state.presaleRate) < 0) || (parseFloat(this.state.pancakeRate) < 0) ;\n    }\n\n    filterPassedTime = (time) => {\n        const currentDate = new Date();\n        const selectedDate = new Date(time);\n    \n        return currentDate.getTime() < selectedDate.getTime();\n      };\n\n\n      onDismiss(){\n        this.setState({ tokenModal: false });\n    }\n\n    async settokenaddress(value){\n            this.setState({ tokenaddress: value });\n            // this.getTokenInfo(e.target.value);\n            const tokendata = await Checkaddress(value);\n          console.log(\"tokendata\" , tokendata);\n          if(tokendata.isValid){\n            this.setState({tokeninfo : tokendata.tokeninfo})\n            this.setState({errors : {}});\n            // this.setState({lockbutton : tokendata.allowance})\n            this.setState({approvebutton : tokendata.allowance})\n            this.setState({button1 : false})\n          }\n          else{\n            let formData = { ...this.state.errors, [\"tokenaddress\"]: \"Invalid token address !\" };\n            this.setState({errors : formData});\n            this.setState({tokeninfo : {}})\n          }\n    }\n    render() {\n        \n        const {tokenModal } = this.state\n     \n\n        \n      return (\n        <div>\n\n           {/* Wizard */}\n           <div className='d-none d-xl-block container px-1'>\n           <div className='row mt-5'>\n             <div className='col-3'>\n               <div className={this.state.currentStep ==1 ? \"card_bg_wizard active card\":\"card_bg_wizard card\"} >\n                {/* onClick={()=>{this.setState({ currentStep: 1})}} */}\n                 <div className='card-body'>\n                   <div className='d-flex align-items-center h-100'>\n                     <div className='wizard_badge_num'>\n                       1\n                     </div>{console.log(\"strt time\" , this.state.startDate)}\n                     <div className='pl-3 create_wiz_desc'>\n                       <h5>Before you start</h5>\n                       <p className='mb-0'>Input your awesome title and choose the currency</p>\n                     </div>\n                   </div>\n                 </div>\n               </div>\n             </div>\n             <div className='col-3'>\n               <div className={this.state.currentStep ==2 ? \"card_bg_wizard active card\":\"card_bg_wizard card\"} >\n               {/* onClick={()=>{this.setState({ currentStep: 2})}} */}\n                 <div className='card-body'>\n                   <div className='d-flex align-items-center h-100'>\n                     <div className='wizard_badge_num'>\n                       2\n                     </div>\n                     <div className='pl-3 create_wiz_desc'>\n                       <h5>Private Sale</h5>\n                       <p className='mb-0'>Enter the launchpad information that you want to raise, that should be enter all details about your presale</p>\n                     </div>\n                   </div>\n                 </div>\n               </div>\n             </div>\n             <div className='col-3'>\n               <div className={this.state.currentStep ==3 ? \"card_bg_wizard active card\":\"card_bg_wizard card\"} >\n               {/* onClick={()=>{this.setState({ currentStep: 3})}} */}\n                 <div className='card-body'>\n                   <div className='d-flex align-items-center h-100'>\n                     <div className='wizard_badge_num'>\n                       3\n                     </div>\n                     <div className='pl-3 create_wiz_desc'>\n                       <h5>Add Additional Info</h5>\n                       <p className='mb-0'>Let people know who you are</p>\n                     </div>\n                   </div>\n                 </div>\n               </div>\n             </div>\n             <div className='col-3'>\n               <div className={this.state.currentStep ==4 ? \"card_bg_wizard active card\":\"card_bg_wizard card\"} >\n               {/* onClick={()=>{this.setState({ currentStep: 4})}} */}\n                 <div className='card-body'>\n                   <div className='d-flex align-items-center h-100'>\n                     <div className='wizard_badge_num'>\n                       4\n                     </div>\n                     <div className='pl-3 create_wiz_desc'>\n                       <h5>Finish</h5>\n                       <p className='mb-0'>Review your information</p>\n                     </div>\n                   </div>\n                 </div>\n               </div>\n             </div>\n\n         </div>\n           </div>\n          \n           {/* end Wizard */}\n      {/* ongoing_sec */}\n          <div className='ongoing_sec form_sec'>\n      \n      \n       <div className=\"inner_bg mt-5\">\n         <div className='row'>\n           <div className='col-12 col-md-10 col-lg-9 mx-auto'>\n           <div className=\"tab_img\">\n                 <div className='card_bg card'>\n            <div className='card-body'>\n              <div className='row align-items-center pb-4'>\n                <div className='col-12 col-md-6 mb-3 mb-md-0'>\n                  <p className='bottom_text mb-0'>(*) is required field.</p>\n                  \n                </div>\n                <div className={this.state.currentStep ==1 ? \"col-12 col-md-6 text-md-right d-block\":\"col-12 col-md-6 text-md-right d-none\"}>\n                <button className=\"get-started-btn\" onClick={() => this.setState({ tokenModal: true })}>+ Create</button>\n                </div>\n              </div>\n              <div id=\"firststep\" className={this.state.currentStep ==1 ? \"d-block\":\"d-none\"}>\n                <div className='row'>                     \n                      <div className='col-12 col-md-12'>\n                    <p className='input_desc_sm'>Token address*</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl value={this.state.tokenaddress} onChange={(e)=> this.settokenaddress(e.target.value)\n                            } id=\"tokenaddress\" placeholder=\"\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.tokenaddress}</span>\n                    </div>\n                    <div className='note_desc mt-1 mb-1'>\n                    <p>Pool creation fee: {this.state.poolfee} BNB</p>\n                    </div>\n                        </div>\n\n                        <div className={isEmpty(this.state.tokeninfo) ? \"d-none\" : 'col-12 col-md-12 mb-3'}>\n                        <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n                            <span className='desc_grey_txt'>Name :</span>\n                            <span className='desc_grey_txt font_12'>{this.state.tokeninfo?.name}</span>\n                                </p>\n\n                        \n                                <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n                            <span className='desc_grey_txt'>Symbol :</span>\n                            <span className='desc_grey_txt font_12'>{this.state.tokeninfo?.symbol}</span>\n                                </p>\n\n                                <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n                            <span className='desc_grey_txt'>Decimals :</span>\n                            <span className='desc_grey_txt font_12'>{this.state.tokeninfo?.decimals}</span>\n                                </p>\n                      </div>\n\n                        <div className='col-12 col-md-12 mb-1'>\n                        <p className='input_desc_sm'>Currency</p>\n                        <div className='d-flex'>\n                            <div className={this.state.currency === \"BNB\"?'currency_badge active mr-2' : \"currency_badge mr-2\"}  value = \"BNB\"\n                                onClick = {(e)=>{console.log(e.target.getAttribute(\"value\"));\n                                    this.setState({\"currency\" :e.target.getAttribute(\"value\")})\n                                    this.GetTokenAddress(e.target.getAttribute(\"value\"))\n                                }}\n                            >BNB</div>\n                            <div className={this.state.currency == \"BUSD\"?'currency_badge active mr-2' : \"currency_badge mr-2\"} value = \"BUSD\" onClick = {(e)=>{\n                                this.setState({\"currency\" : e.target.getAttribute(\"value\")});\n                                this.GetTokenAddress(e.target.getAttribute(\"value\"));\n                                \n                            }}>BUSD</div>\n                            <div className={this.state.currency == \"USDT\"?'currency_badge active mr-2' : \"currency_badge mr-2\"} value = \"USDT\"\n                                onClick = {(e)=>{\n                                    this.setState({\"currency\" :e.target.getAttribute(\"value\")});\n                                    this.GetTokenAddress(e.target.getAttribute(\"value\"));\n                                   \n                                }}\n                            >USDT</div>\n                            <div className={this.state.currency == \"USDC\"?'currency_badge active mr-2' : \"currency_badge mr-2\"} value = \"USDC\"\n                            onClick = {(e)=>{\n                                this.setState({\"currency\" : e.target.getAttribute(\"value\")});\n                                this.GetTokenAddress(e.target.getAttribute(\"value\"))\n                            }}\n                            >USDC</div>\n\n                        </div>\n                        <div className='note_desc mt-1 mb-1'>\n                    <p>Users will pay with {this.state.currency} for your token</p>\n                    </div>\n                   \n                        </div>\n\n\n\n                        <div className='col-12 col-md-12 mb-3'>\n                        <p className='input_desc_sm'>Fee Options</p>\n                      \n                        <div className=\"custom-control custom-radio mb-2\">\n                    <input type=\"checkbox\" id=\"customRadio1\" name=\"customRadio\" className=\"custom-control-input\"  value ={5}\n                    // checked\n                    checked ={this.state.fee == 5 ? true : false}\n                    onChange ={(e)=>{\n                        console.log(\"val\" , 5);\n                        this.setState({fee : e.target.value})\n                        this.setState({isToken : true});\n                        this.setState({userFee : userFee})\n                    }}\n                    />\n                    <label className=\"custom-control-label\" for=\"customRadio1\">{userFee}% {this.state.currency} raised only <span>(recommended)</span></label>\n                    </div>   \n\n                    <div className=\"custom-control custom-radio\">\n                    <input type=\"checkbox\" id=\"customRadio2\" name=\"customRadio\" value={2} className=\"custom-control-input\" \n                    checked ={this.state.fee == 2 ? true : false}\n                         onChange ={(e)=>{\n                            console.log(\"val\" , 2);\n                            this.setState({fee : e.target.value})\n                            this.setState({isToken : false});\n                            this.setState({userFee : userFeeWithtoken})\n                        }}\n                    />\n                    <label className=\"custom-control-label\" for=\"customRadio2\">{2}% {this.state.currency} raised + 2% token sold</label>\n                    </div>                 \n                        </div>\n\n                        \n{this.state.currency != \"BNB\" ?\n                        <div className='col-12 col-md-12 mb-4 mt-4'>\n                            <div className='card_footer_form'>\n                                <div className='d-flex align-items-center justify-content-center'>\n                                <i class=\"fa fa-exclamation-circle text-danger-war\" aria-hidden=\"true\"></i>\n                                <p className='mb-0 pl-3'>Do not use this currency for auto liquidity tokens, or tokens that depend on WETH pair. It will lead to error when finalizing the pool or transferring the tokens (for example Liquidity Generator Token, BabyToken, BuyBack Baby Token) <br />\n                            Contact Crypto Launchpad for more information.</p>\n                                </div>\n\n                            </div>\n                        </div> : <></>}\n\n                        <div className='col-12 col-md-12 mb-4'>\n                            <div className='card_footer_form'>\n                            <p className='mb-0'>For auto listing, after you finalize the pool your token will be auto listed on DEX.</p>\n                            </div>\n                        </div>\n\n\n\n                        <div className='col-12 col-md-12 text-center'>\n                        {/* <button className=\"get-started-btn\" onClick={()=>{this.setState({ currentStep: 2})}}\n                            disabled = {this.state.button1}\n                        >\n                           Next\n                        </button> */}\n\n            {this.state.approvebutton && \n                             <button className=\"get-started-btn\" onClick={()=>{this.setState({ currentStep: 2})}}\n                             disabled = {this.state.button1}\n                             >\n                                Next\n                             </button> \n                            }\n\n                        {!this.state.approvebutton &&\n                        <button className=\"get-started-btn\" onClick={()=>{this.approvetoken()}}\n                        disabled = {this.state.button1}\n                        >\n                           Approve\n                        </button> \n                        }\n\n                        </div>\n\n             </div>\n             </div>\n             <div id=\"secondstep\" className={this.state.currentStep ==2 ? \"d-block\":\"d-none\"}>\n                <div className='row'>  \n                <div className='col-12 col-md-12 mb-3'>\n                        \n                        <p className='input_desc_sm'>Presale Rate*</p>\n                        <div className=\"inputs input-groups\">\n                            <InputGroup className=\"\">\n                                <FormControl pattern=\"^[1-9]+[0-9]*$\" id=\"presalerate\" value={this.state.presaleRate} onChange={(e)=>{ \n                                    if(!isFloat(e.target.value)){ \n                                        this.setState({ presaleRate: e.target.value });\n                                        var rx = new RegExp(/^[-+]?[0-9]+\\.[0-9]+$/)\n                                        var rd = new RegExp(/^\\d+$/);\n                                        if(rx.test(e.target.value) || rd.test(e?.target?.value) || !isNaN(e.target.value)){\n                                            const formvalue = {...this.state.errors , [\"presale\"]: \"\"}\n                                            this.setState({errors : formvalue})\n                                        }\n                                        else {\n                                            const formvalue = {...this.state.errors , [\"presale\"]: \"Invalid PresaleRate\"}\n                                            this.setState({errors : formvalue})\n                                        }\n                                        this.handledisable();\n                                        this.handledisable();\n                                    } }} placeholder=\"\"\n                                    aria-describedby=\"basic-addon2\"\n                                />\n                              \n                            </InputGroup>\n                            <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.presale}</span>\n                        </div>\n                        <div className='note_desc mt-1 mb-1'>\n                    <p>If I spend 1 {this.state.currency} how many tokens will I receive?</p>\n                    </div>\n                            </div>             \n\n                            {/* <div className='col-12 col-md-12 mb-1'>\n                        <p className='input_desc_sm'>Whitelist</p>\n                      \n                        <div className=\"custom-control custom-radio mb-2\">\n                    <input type=\"checkbox\" id=\"customRadio3\" name=\"customRadio\" value={false} \n                    checked={this.state.isWhitelisted ? false : true}\n                    onChange = {()=>{\n                        this.setState({isWhitelisted : false})\n                    }}\n                    className=\"custom-control-input\" />\n                    <label className=\"custom-control-label\" for=\"customRadio3\">Disable</label>\n                    </div>   \n\n                    <div className=\"custom-control custom-radio\">\n                    <input type=\"checkbox\" id=\"customRadio4\" name=\"customRadio\" value={true} \n                        checked={this.state.isWhitelisted ? true : false}\n                        onChange = {()=>{\n                            this.setState({isWhitelisted : true})\n                        }}\n                    className=\"custom-control-input\" />\n                    <label className=\"custom-control-label\" for=\"customRadio4\">Enable</label>\n                    </div>  \n                    <div className='note_desc mt-1 mb-0'>\n                    <p>You can enable/disable whitelist anytime</p>\n                    </div>               \n                        </div> */}\n\n                        <div className='col-12 col-md-12 mb-0'>\n                    <p className='input_desc_sm'>Softcap (BNB)*</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl value={this.state.softCap} onChange={(e)=>{\n                                const formvalue = {...this.state.errors , [\"softcap\"]: \"\"}\n                                this.setState({errors : formvalue});\n                                this.setState({ softCap: e.target.value });\n                                if (!e.target.value || isNaN(e.target.value)) {\n                                    const formvalue = {...this.state.errors , [\"softcap\"]: \"Invalid softcap !\"}\n                                    this.setState({errors : formvalue});\n                                  }\n                                  else if(this.state.hardCap){\n                                    if(e.target?.value < (parseFloat(this.state.hardCap)/2)){console.log(\"Softcap must\");\n                                        const formvalue = {...this.state.errors , [\"softcap\"]: \"Softcap must be greater than 50% of Hardcap\"}\n                                        this.setState({errors : formvalue});\n                                    }\n                                    else if(e.target?.value >= parseFloat(this.state.hardCap)/2){\n                                        const formvalue = {...this.state.errors , [\"hardcap\"]: \"\" , [\"softcap\"]: \"\"}\n                                        this.setState({errors : formvalue});\n                                    }\n                                    else{\n                                        const formvalue = {...this.state.errors , [\"softcap\"]: \"\"}\n                                        this.setState({errors : formvalue});\n                                    }\n                                  }\n                                  else{\n                                    const formvalue = {...this.state.errors , [\"softcap\"]: \"\"}\n                                    this.setState({errors : formvalue});\n                                  }\n                                  this.handledisable();\n                            \n                            } } id=\"softcap\" placeholder=\"\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.softcap}</span>\n                    </div>\n                    {/* <div className='note_desc mt-1 mb-0'>\n                    <p>Softcap must be >= 50% of Hardcap</p>\n                    </div> */}\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>HardCap (BNB)*</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"hardcap\" value={this.state.hardCap} onChange={(e)=>{\n                                \n                                const formvalue = {...this.state.errors , [\"hardcap\"]: \"\"}\n                                this.setState({errors : formvalue});\n\n                                this.setState({ hardCap: e.target.value }); \n\n                                if (!e.target.value || isNaN(parseFloat(e.target.value))) {\n                                    console.log(\"invalid\");\n                                    const formvalue = {...this.state.errors , [\"hardcap\"]: \"Invalid hardcap !\"}\n                                    this.setState({errors : formvalue});\n                                  }\n                                  \n                                  else if(e.target.value < parseFloat(this.state.softCap)){console.log(\"hardcap\" , e.target.value);\n                                    const formvalue = {...this.state.errors , [\"hardcap\"]: \"Hardcap must be greater than softcap !\"}\n                                    this.setState({errors : formvalue});\n                                  }\n                                //   else if(e.target.value < parseFloat(this.state.softCap)){\n                                //     const formvalue = {...this.state.errors , [\"softcap\"]: \"Softcap must be >= 50% of Hardcap\"}\n                                //     this.setState({errors : formvalue});\n                                //   }\n                                  else{\n                                    const formvalue = {...this.state.errors , [\"hardcap\"]: \"\"}\n                                    this.setState({errors : formvalue});\n                                  }\n\n                                  if(this.state.softCap < (parseFloat(e.target.value)/2)){\n                                    const formvalue = {...this.state.errors , [\"softcap\"]: \"Softcap must be >= 50% of Hardcap\"}\n                                    this.setState({errors : formvalue});\n                                  }\n\n                                 \n                                  this.handledisable();\n                                  console.log(\"condition\" , e.target.value < this.state.softcap)\n                                  \n                            }} placeholder=\"\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.hardcap}</span>\n                    </div>\n                        </div> \n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Minimum Buy (BNB)*</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"mincontribution\" value={this.state.min} onChange={(e)=>{\n                                const formvalue = {...this.state.errors , [\"min\"]: \"\"}\n                                this.setState({errors : formvalue});\n                                this.setState({ min: e.target.value });\n                                if(isNaN(e.target.value)){\n                                    const formvalue = {...this.state.errors , [\"min\"]: \"Invalid Minimum Buy \"}\n                                    this.setState({errors : formvalue});\n                                }\n                                if(!e.target.value){\n                                    const formvalue = {...this.state.errors , [\"min\"]: \"Minimum Buy field is required\"}\n                                    this.setState({errors : formvalue});\n                                }\n                               if(this.state.max){\n                                if(e.target.value > this.state.max){\n                                    const formvalue = {...this.state.errors , [\"min\"]: \"Minimum Buy  must be < Maximum Buy\"}\n                                    this.setState({errors : formvalue});\n                                }\n                                else{\n                                    const formvalue = {...this.state.errors , [\"min\"]: \"\"}\n                                    this.setState({errors : formvalue});\n                                }\n                               }\n                               this.handledisable();\n                            } } placeholder=\"\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.min}</span>\n                    </div>\n                        </div>\n                        \n                        <div className='col-12 col-md-12 mb-4'>\n                    <p className='input_desc_sm'>Maximum Buy (BNB)*</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"maxcontribution\" value={this.state.max} onChange={(e)=>{\n                                const formvalue = {...this.state.errors , [\"max\"]: \"\"}\n                                this.setState({errors : formvalue});\n                                this.setState({ max: e.target.value });\n                                if(isNaN(e.target.value)){\n                                    const formvalue = {...this.state.errors , [\"max\"]: \"Invalid Maximum Buy \"}\n                                    this.setState({errors : formvalue});\n                                }\n                                if(!e.target.value){\n                                    const formvalue = {...this.state.errors , [\"max\"]: \"Maximum Buy field is required\"}\n                                    this.setState({errors : formvalue});\n                                }\n                                if(this.state.min){\n                                    if(e.target.value < this.state.min){\n                                        const formvalue = {...this.state.errors , [\"max\"]: \"Maximum Buy  must be > Minimum Buy\"}\n                                        this.setState({errors : formvalue});\n                                    }\n                                    else{\n                                        const formvalue = {...this.state.errors , [\"max\"]: \"\"}\n                                        this.setState({errors : formvalue});\n                                    }\n                                   }\n                                   this.handledisable();\n                            } } placeholder=\"\"\n                                aria-describedby=\"basic-addon2\"\n\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.max}</span>\n                    </div>\n                        </div> \n\n                        <div className='col-12 col-md-12 mb-3'>\n                        <p className='input_desc_sm'>Listing Options</p>\n                        <div className='d-flex'>\n                            <div className={`currency_badge  mr-2 ${this.state.isPancake === true? \"active\" : \"\"} `} onClick={(e)=> {\n                                this.setState({isPancake : true});\n                                \n                                // this.forceUpdate();\n                                this.handledisable();\n                                }}>Auto</div>\n                            <div className={`currency_badge  mr-2 ${this.state.isPancake === false? \"active\" : \"\"} `} onClick={(e)=> {\n                                this.setState({isPancake : false});\n                                // this.forceUpdate();\n                                this.handledisable();\n                                }}>Manual</div>                           \n                        </div>\n                        </div>\n\n\n                        {this.state.isPancake ?\n                        <>\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Locking Days</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"liquidity\" value={this.state.unlockOn} onChange={(e)=>{\n                                this.setState({ unlockOn: e.target.value });\n                                var rx = new RegExp(/^\\d+$/);\n                                if(!rx.test(e.target.value)){\n                                    const formvalue = {...this.state.errors , [\"lockingday\"] : \"Invalid Locking Days !\"};\n                                    this.setState({errors : formvalue});\n                                }\n                                else{\n                                    const formvalue = {...this.state.errors , [\"lockingday\"] : \"\"};\n                                    this.setState({errors : formvalue});\n                                }\n                                this.handledisable();\n                                } } placeholder=\"0\" aria-describedby=\"basic-addon2\" />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.lockingday}</span>\n                    </div>\n                        </div> \n\n                      \n\n                        <div className='col-12 col-md-12 mb-0'>\n                    <p className='input_desc_sm'>Listing Rate per {this.state.currency}</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"maxcontribution\" value={this.state.pancakeRate} onChange={(e)=>{\n                                if(!isFloat(e.target.value)){  \n                                    this.setState({ pancakeRate: e.target.value })\n                                    var rx = new RegExp(/^\\d+$/);\n                                if(!rx.test(e.target.value)){\n                                    const formvalue = {...this.state.errors , [\"listingrate\"] : `Invalid Listing Rate per ${this.state.currency} !`};\n                                    this.setState({errors : formvalue});\n                                }\n                                    else {\n                                        const formvalue = {...this.state.errors , [\"listingrate\"] : \"\"};\n                                        this.setState({errors : formvalue});\n                                    }\n                                }\n                                this.handledisable();\n                                }} placeholder=\"0\" aria-describedby=\"basic-addon2\" />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.listingrate}</span>\n                    </div>\n                    <div className='note_desc mt-1 mb-1'>\n                    <p>1 {this.state.currency} = {this.state.presaleRate} {this.state.name}</p>\n                    </div>\n                        </div> \n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Pancakeswap Liquidity</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"liquidity\" value={this.state.liquidityPercent} onChange={(e)=>{\n                                if(!isFloat(e.target.value)){ \n                                    this.setState({ liquidityPercent: e.target.value });\n                                    if(isNaN(e.target.value) || e.target.value <51 || e.target.value > 100){\n                                        const formvalue = {...this.state.errors , [\"liquidity\"] : \"Invalid Pancakeswap Liquidity !\"};\n                                        this.setState({errors : formvalue});\n                                    } \n                                    else {\n                                        const formvalue = {...this.state.errors , [\"liquidity\"] : \"\"};\n                                        this.setState({errors : formvalue});\n                                    }\n                                    }\n                                    this.handledisable();\n                                    }} placeholder=\"0\" aria-describedby=\"basic-addon2\" />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.liquidity}</span>\n                    </div>\n                        </div> \n                        </>:<></>}\n                        {this.state.isPancake ?\n                        <div className='col-12 col-md-12 mb-2'>\n                        <div className='note_desc mt-1 mb-0'>\n                    <p>Enter the percentage of raised funds that sholud be allocated to Liquidity on (Min 51%, Max 100%)</p>\n                    <p>If I spend 1 BNB on how many tokens will I receive? Usually the amount is lower than presale rate to allow for a higher listing price on</p>\n                    \n                    </div>\n                        </div> : <></>}\n\n                        <div className='col-12 col-md-12 mb-0'>\n                    <p className='input_desc_sm'>Select Start time & End time (UTC)*</p>\n                    </div>\n                    <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Start Time (UTC)*</p>\n                    <div className=\"inputs input-groups date_inoput_grps\">\n                        <InputGroup className=\"datepicker_input\">\n                        <DatePicker\n                         minDate={new Date()}\n                                                    filterTime={this.filterPassedTime.bind(this)}\n                                                   showTimeSelect\n                                                   selected={this.state.startDate}\n                                                   onChange={(date)=> {\n                                                    this.setState({startDate: date});\n                                                    let formData = { ...this.state.errors, [\"startdate\"]: \"\" };\n                                                         this.setState({ errors: formData });\n                                                    // if(Date.parse(date) < Date.now()){\n                                                    //     let formData = { ...this.state.errors, [\"startdate\"]: \"Start Time needs to be after now\" };\n                                                    //      this.setState({ errors: formData });\n                                                    //   }\n                                                    //   else{\n                                                    //     let formData = { ...this.state.errors, [\"startdate\"]: \"Start Time needs to be after now\" };\n                                                    //      this.setState({ errors: formData });\n                                                    //   }\n                                                      if(this.state.endDate){\n                                                        if(Date.parse(date) > this.state.endDate){\n                                                            let formData = { ...this.state.errors, [\"startdate\"]: \"Start Time must be < End Time\" };\n                                                            this.setState({ errors: formData });\n                                                        }\n                                                        if(this.state.endDate > Date.parse(date)){\n                                                            let formData = { ...this.state.errors, [\"enddate\"]: \"\" };\n                                                            this.setState({ errors: formData });\n                                                        }\n                                                        // else{\n                                                        //     let formData = { ...this.state.errors, [\"startdate\"]: \"Start Time needs to be after now\" };\n                                                        //      this.setState({ errors: formData });\n                                                        //   }\n                                                      }\n                                                      this.handledisable();\n                                                }\n                                            \n                                            }\n                                                   dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                                 />\n                          \n                        </InputGroup>\n                        <InputGroup.Append className='cur_pointer'>\n                                <button variant=\"outline-secondary\" className=\"trans_cal_btn\">\n                                <i class=\"far fa-calendar-alt\"></i>\n                                </button>\n                            </InputGroup.Append>\n                           \n                    </div>\n                    <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.startdate}</span>\n                        </div>\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>End Time (UTC)*</p>\n                    <div className=\"inputs input-groups date_inoput_grps\">\n                        <InputGroup className=\"datepicker_input\">\n                        <DatePicker\n                                                 minDate={new Date()}\n                                                 filterTime={this.filterPassedTime.bind(this)}\n                                                   showTimeSelect\n                                                   selected={this.state.endDate}\n                                                   onChange={(date)=> {\n                                                    console.log(\"date\" , date);\n                                                    this.setState({endDate: date});\n                                                    let formData = { ...this.state.errors, [\"enddate\"]: \"\" };\n                                                    this.setState({ errors: formData });\n                                                   \n                                                    // if(Date.parse(date) > Date.now() || Date.parse(date) > Date.parse(this.state.startDate)){\n                                                    //     let formData = { ...this.state.errors, [\"enddate\"]: \"\" };\n                                                    //     this.setState({ errors: formData });\n                                                    //   }\n                                                    //   else{\n                                                    //      let formData = { ...this.state.errors, [\"enddate\"]: \"End Time needs to be after now\" };\n                                                    //      this.setState({ errors: formData });\n                                                    //   }\n                                                    if(this.state.startDate){\n                                                        if(Date.parse(date) <= this.state.startDate){console.log(\"invalideee\");\n                                                            let formData = { ...this.state.errors, [\"enddate\"]: \"End Time must be > Start Time\" };\n                                                            this.setState({ errors: formData });\n                                                            console.log(\"invalideee\" , formData);\n                                                            this.forceUpdate()\n                                                        }\n                                                        if(this.state.startDate < Date.parse(date)){\n                                                            let formData = { ...this.state.errors, [\"startdate\"]: \"\" };\n                                                            this.setState({ errors: formData });\n                                                            let formdata = { ...this.state.errors, [\"enddate\"]: \"\" };\n                                                             this.setState({ errors: formdata });\n                                                        }\n                                                        // if(this.state.startDate > Date.parse(date)){\n                                                        //     let formData = { ...this.state.errors, [\"enddate\"]: \"\" };\n                                                        //      this.setState({ errors: formData });\n                                                        //   }\n                                                      }\n                                                      this.handledisable();\n                                                }}\n                                                   dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                                 />\n                          \n                        </InputGroup>\n                        \n                        <InputGroup.Append className='cur_pointer'>\n                                <button variant=\"outline-secondary\" className=\"trans_cal_btn\">\n                                <i class=\"far fa-calendar-alt\"></i>\n                                </button>\n                            </InputGroup.Append>\n                           \n                    </div>\n                    <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.enddate}</span>\n                        </div>  \n\n                        {/* <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>First Fund Release for Project (%)*</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"fundrelease\" placeholder=\"30\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Fund Vesting Period Each Cycle (minutes)*</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"fundrelease\" placeholder=\"20\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Fund Release Each Cycle (percent)*</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"fundrelease\" placeholder=\"5\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                    </div>\n                        </div> */}\n\n<div className='col-12 col-md-12'>\n               <div className=\"custom-control custom-checkbox\">\n  <input type=\"checkbox\" checked={this.state.isVested} onChange={(e)=> {this.setState({isVested : e.target.checked}); this.handledisable()}} className=\"custom-control-input\" id=\"customCheck1\" />\n  <label className=\"custom-control-label\" for=\"customCheck1\">Using Vesting Contributor?</label>\n</div></div>  \n\n{this.state.isVested ?\n            <>\n            <div className='col-12 col-md-12 mb-3 mt-4'>\n                    <p className='input_desc_sm'>Vesting Period Days</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"liquiditylockingdays\" value={this.state.vestInterval} onChange={(e)=>{\n                                this.setState({ vestInterval: e.target.value });\n                                var rx = new RegExp(/^\\d+$/);\n                                if(!rx.test(e.target.value)){\n                                    const formvalue = {...this.state.errors , [\"vestinterval\"] : \"Invalid Vesting Period Days !\"};\n                                    this.setState({errors : formvalue});\n                                }\n                                else{\n                                    const formvalue = {...this.state.errors , [\"vestinterval\"] : \"\"};\n                                    this.setState({errors : formvalue});\n                                }\n                                this.handledisable();\n                            } }  placeholder=\"\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.vestinterval}</span>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3 mt-4'>\n                    <p className='input_desc_sm'>Rewards % per Vesting Period</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"liquiditylockingdays\"value={this.state.vestPercent} onChange={(e)=>{\n                                if(!isFloat(e.target.value)){ \n                                    this.setState({ vestPercent: e.target.value }) ;\n                                    if(isNaN(e.target.value) || e.target.value <0 || e.target.value > 100){\n                                        const formvalue = {...this.state.errors , [\"vestpercent\"] : \"Invalid Rewards % per Vesting Period !\"};\n                                        this.setState({errors : formvalue});\n                                    } \n                                    else {\n                                        const formvalue = {...this.state.errors , [\"vestpercent\"] : \"\"};\n                                        this.setState({errors : formvalue});\n                                    }\n                                    this.handledisable();\n                                }} }placeholder=\"\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.vestpercent}</span>\n                    </div>\n                        </div>\n\n               </>:<></>     }  \n<div className='col-12'>\n<div className='note_desc mt-1 mb-1 text-center'>\n                    {/* <p>Need 0 CTD to create launchpad.</p> */}\n                    </div>\n</div>\n\n                      \n\n\n\n                    \n                    <div className='col-12 col-md-12 text-center'>\n                        <button className=\"get-started-btn mr-2\" onClick={()=>{this.setState({ currentStep: 1})}}>\n                           Back\n                        </button>\n                        <button className=\"get-started-btn\" onClick={()=>{\n                            console.log(\"disable\" , this.handledisable());\n                            if( this.handledisable()){\n                                \n                            }\n                            else{\n                                this.setState({ currentStep: 3})\n                            }\n                            // else{\n                            //     toast.error(\"\")\n                            // }\n                            }}\n                            // disabled = {this.state.button2}\n                        >\n                            \n                           Next\n                        </button>\n                        </div>\n                </div>\n            </div>\n\n            <div id=\"thirdstep\" className={this.state.currentStep ==3 ? \"d-block\":\"d-none\"}>\n                <div className='row'>\n                <div className='col-12 col-md-12 mb-0'>\n                        \n                        <p className='input_desc_sm'>Logo URL*</p>\n                        <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"file\" value={this.state.logo} onChange={(e)=>{\n                                this.setState({ logo: e.target.value });\n                                if(urlvalidation(e.target.value)){\n                                    const formvalue = {...this.state.errors , [\"logo\"] : \"\"};\n                                    this.setState({errors : formvalue});\n                                }\n                                else{\n                                    const formvalue = {...this.state.errors , [\"logo\"] : \"Invalid Logo Url!\"};\n                                    this.setState({errors : formvalue});\n                                }\n                                this.handledisableurlbutton();\n                            } } placeholder=\"\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.logo}</span>\n                    </div>\n                        <div className='note_desc mt-1 mb-0'>\n                    <p>URL must be end with a supported image extension .png, .jpg,</p>\n                    </div>\n                            </div>\n\n                            <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Website*</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl value={this.state.website} onChange={(e)=>{\n                                this.setState({ website: e.target.value });\n                                if(urlvalidation(e.target.value)){\n                                    const formvalue = {...this.state.errors , [\"website\"] : \"\"};\n                                    this.setState({errors : formvalue});\n                                }\n                                else{\n                                    const formvalue = {...this.state.errors , [\"website\"] : \"Invalid Website Url!\"};\n                                    this.setState({errors : formvalue});\n                                }\n                                this.handledisableurlbutton();\n                            } } id=\"logolink1\" placeholder=\"https://cryptolaunchpad.app\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.website}</span>\n                    </div>\n                        </div>\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Facebook</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl  id=\"logolinkfb\" placeholder=\"https://facebook.com\"\n                                aria-describedby=\"basic-addon2\"\n                                onChange={(e)=>{\n                                    this.setState({\"facebook\" : e.target.value}); \n                                    if(urlvalidation(e.target.value)){\n                                        const formvalue = {...this.state.errors , [\"facebook\"] : \"\"};\n                                        this.setState({errors : formvalue});\n                                    }\n                                    else{\n                                        const formvalue = {...this.state.errors , [\"facebook\"] : \"Invalid Facebook Url!\"};\n                                        this.setState({errors : formvalue});\n                                    }\n                                    this.handledisableurlbutton();\n                                }}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.facebook}</span>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Twitter</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl value={this.state.twitter} onChange={(e)=>{\n                                this.setState({ twitter: e.target.value });\n                                if(urlvalidation(e.target.value)){\n                                    const formvalue = {...this.state.errors , [\"twitter\"] : \"\"};\n                                    this.setState({errors : formvalue});\n                                }\n                                else{\n                                    const formvalue = {...this.state.errors , [\"twitter\"] : \"Invalid Twitter Url!\"};\n                                    this.setState({errors : formvalue});\n                                }\n                                this.handledisableurlbutton();\n                            } } id=\"logolink2\" placeholder=\"https://twitter.com\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.twitter}</span>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Github</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl id=\"logolinkgit\" placeholder=\"https://github.com\"\n                                aria-describedby=\"basic-addon2\"\n                                onChange={(e)=>{\n                                    this.setState({\"github\" : e.target.value})\n                                    if(urlvalidation(e.target.value)){\n                                        const formvalue = {...this.state.errors , [\"github\"] : \"\"};\n                                        this.setState({errors : formvalue});\n                                    }\n                                    else{\n                                        const formvalue = {...this.state.errors , [\"github\"] : \"Invalid Github Url!\"};\n                                        this.setState({errors : formvalue});\n                                    }\n                                    this.handledisableurlbutton();\n                                }}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.github}</span>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Telegram</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl value={this.state.telegram} onChange={(e)=>{\n                                this.setState({ telegram: e.target.value });\n                                if(urlvalidation(e.target.value)){\n                                    const formvalue = {...this.state.errors , [\"telegram\"] : \"\"};\n                                    this.setState({errors : formvalue});\n                                }\n                                else{\n                                    const formvalue = {...this.state.errors , [\"telegram\"] : \"Invalid Telegram Url!\"};\n                                    this.setState({errors : formvalue});\n                                }\n                                this.handledisableurlbutton();\n                            } } id=\"logolink3\" placeholder=\"https://telegram.com\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.telegram}</span>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Instagram</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl  id=\"logolinkinsta\" placeholder=\"https://instagram.com\"\n                                aria-describedby=\"basic-addon2\"\n                                onChange={(e)=>{\n                                    this.setState({instagram : e.target.value});\n                                    if(urlvalidation(e.target.value)){\n                                        const formvalue = {...this.state.errors , [\"instagram\"] : \"\"};\n                                        this.setState({errors : formvalue});\n                                    }\n                                    else{\n                                        const formvalue = {...this.state.errors , [\"instagram\"] : \"Invalid Instagram Url!\"};\n                                        this.setState({errors : formvalue});\n                                    }\n                                    this.handledisableurlbutton();\n                                }}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.instagram}</span>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Discord</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl  id=\"logolinkdiscord\" placeholder=\"https://discord.com\"\n                                aria-describedby=\"basic-addon2\"\n                                onChange={(e)=>{\n                                    this.setState({discord : e.target.value});\n                                    if(urlvalidation(e.target.value)){\n                                        const formvalue = {...this.state.errors , [\"discord\"] : \"\"};\n                                        this.setState({errors : formvalue});\n                                    }\n                                    else{\n                                        const formvalue = {...this.state.errors , [\"discord\"] : \"Invalid Discord Url!\"};\n                                        this.setState({errors : formvalue});\n                                    }\n                                    this.handledisableurlbutton();\n                                }}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.discord}</span>\n                    </div>\n                        </div>\n                        \n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Reddit</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl  id=\"logolinkreddit\" placeholder=\"https://reddit.com\"\n                                aria-describedby=\"basic-addon2\"\n                                onChange={(e)=>{\n                                    this.setState({reddit : e.target.value});\n                                    if(urlvalidation(e.target.value)){\n                                        const formvalue = {...this.state.errors , [\"reddit\"] : \"\"};\n                                        this.setState({errors : formvalue});\n                                    }\n                                    else{\n                                        const formvalue = {...this.state.errors , [\"reddit\"] : \"Invalid Reddit Url!\"};\n                                        this.setState({errors : formvalue});\n                                    }\n                                    this.handledisableurlbutton();\n                                }}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.reddit}</span>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-0'>\n                    <p className='input_desc_sm'>Youtube Video</p>\n                    <div className=\"inputs input-groups\">\n                        <InputGroup className=\"\">\n                            <FormControl  id=\"logolinkyoutube\" placeholder=\"https://youtube.com\"\n                                aria-describedby=\"basic-addon2\"\n                                onChange={(e)=>{\n                                    this.setState({youtubevideo : e.target.value});\n                                    if(urlvalidation(e.target.value)){\n                                        const formvalue = {...this.state.errors , [\"youtube\"] : \"\"};\n                                        this.setState({errors : formvalue});\n                                    }\n                                    else{\n                                        const formvalue = {...this.state.errors , [\"youtube\"] : \"Invalid Youtube Video Url!\"};\n                                        this.setState({errors : formvalue});\n                                    }\n                                    this.handledisableurlbutton();\n                                }}\n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.youtube}</span>\n                    </div>\n\n                    <div className='note_desc mt-1 mb-0'>\n                    <p>Input your youtube URL</p>\n                    </div>\n                        </div>\n\n                        <div className='col-12 col-md-12 mb-3'>\n                    <p className='input_desc_sm'>Description</p>\n                    <div className=\"inputs input-groups text_are_grp\">\n                        <InputGroup className=\"\" >\n                            <textarea value={this.state.description} onChange={(e)=>{\n                                this.setState({ description: e.target.value });\n                                if(!e.target.value){\n                                    const formvalue = {...this.state.errors , [\"description\"] : \"Invalid Description!\"};\n                                    this.setState({errors : formvalue});\n                                }\n                                else{\n                                    const formvalue = {...this.state.errors , [\"description\"] : \"\"};\n                                    this.setState({errors : formvalue});\n                                }\n                                this.handledisableurlbutton();\n                            } } id=\"description\" rows=\"3\"\n                                aria-describedby=\"basic-addon2\"\n                                \n                            />\n                          \n                        </InputGroup>\n                        <span className=\"text-danger f-12 d-block text-left\">{this?.state?.errors?.description}</span>\n                    </div>\n                    </div>\n\n\n\n                    \n                    <div className='col-12 col-md-12 text-center'>\n                        <button className=\"get-started-btn mr-2\" onClick={()=>{this.setState({ currentStep: 2})}}>\n                           Back\n                        </button>\n                        <button className=\"get-started-btn\" onClick={()=>{\n                            this.setState({ currentStep: 4});\n                            this.calculateDepositTokens();\n                        }}\n                         disabled={this.state.button3}\n                        >\n                           Next\n                        </button>\n                        </div>\n                </div>\n            </div>\n\n            <div id=\"fourthstep\" className={this.state.currentStep ==4 ? \"d-block\":\"d-none\"}>\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Deposit Token :</span>\n            <span className='desc_grey_txt font_12'>{this.state.deposit} {this.state.tokeninfo.name}</span>\n            </p>\n\n            {/* <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Factory Address :</span>\n            <span className='desc_grey_txt font_12'>0xf4567uyht8956 \n            <i class=\"fa fa-files-o pl-2 copy_hover\" aria-hidden=\"true\"></i>\n            </span>\n            </p> */}\n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Token Name :</span>\n            <span className='desc_grey_txt font_12'>{this.state.tokeninfo ? this.state.tokeninfo.name : \"\"}\n            </span>\n            </p>\n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Token Symbol :</span>\n            <span className='desc_grey_txt font_12'>{this.state.tokeninfo ? this.state.tokeninfo.symbol : \"\"}\n            </span>\n            </p>\n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Token Decimals :</span>\n            <span className='desc_grey_txt font_12'>{this.state.tokeninfo ? this.state.tokeninfo.decimals : \"\"}\n            </span>\n            </p>\n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Presale Rate :</span>\n            <span className='desc_grey_txt font_12'>{this.state.presaleRate ? this.state.presaleRate : \"\"} {this.state.tokeninfo ? this.state.tokeninfo.symbol : \"\"}\n            </span>\n            </p>\n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Listing Rate :</span>\n            <span className='desc_grey_txt font_12'>{this.state.presaleRate ? this.state.presaleRate : \"\"} {this.state.tokeninfo ? this.state.tokeninfo.name : \"\"}\n            </span>\n            </p> \n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Sale Method :</span>\n            <span className='desc_grey_txt font_12'>{this.state.isWhitelisted === true ? \"Public\" : \"Private\" }\n            </span>\n            </p> \n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Softcap :</span>\n            <span className='desc_grey_txt font_12'>{this.state.softCap ? this.state.softCap : \" \"} {this.state.currency ? this.state.currency : \"\"}\n            </span>\n            </p> \n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Hardcap :</span>\n            <span className='desc_grey_txt font_12'>{this.state.hardCap ? this.state.hardCap : \" \"} {this.state.currency ? this.state.currency : \"\"}\n            </span>\n            </p> \n\n\n            {/* <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Unsold Tokens :</span>\n            <span className='desc_grey_txt font_12'>Refund\n            </span>\n            </p>  */}\n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Minimum Buy :</span>\n            <span className='desc_grey_txt font_12'>{this.state.min} {this.state.currency}\n            </span>\n            </p> \n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Maximum Buy :</span>\n            <span className='desc_grey_txt font_12'>{this.state.max} {this.state.currency}\n            </span>\n            </p> \n{this.state.isPancake ? \n<>\n             <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Liquidity :</span>\n            <span className='desc_grey_txt font_12'>{this.state.liquidityPercent}%\n            </span>\n            </p>   \n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Liquidity Lockup Time :</span>\n            <span className='desc_grey_txt font_12'>{this.state.unlockOn}\n            </span>\n            </p> \n            </> : <></>}\n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Start Time :</span>\n            <span className='desc_grey_txt font_12'>{this.state.startDate ? new Date(this.state.startDate).toLocaleDateString()+\"  \"\n             +new Date(this.state.startDate).getHours()+\":\"+new Date(this.state.startDate).getMinutes()+\":\"\n             +new Date(this.state.startDate).getSeconds()+\"(GMT)\"  : \"\" }\n            </span>\n            </p>   \n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>End Time :</span>\n            <span className='desc_grey_txt font_12'>{this.state.endDate ? new Date(this.state.endDate).toLocaleDateString()+\"  \"\n             +new Date(this.state.endDate).getHours()+\":\"+new Date(this.state.endDate).getMinutes()+\":\"\n             +new Date(this.state.endDate).getSeconds()+\"(GMT)\"  : \"\"}\n            </span>\n            </p> \n\n           \n\n            <p className='white_txt_sm d-flex justify-content-between mt-0 mb-1'>\n            <span className='desc_grey_txt'>Website :</span>\n            <span className='desc_grey_txt font_12'><a href=\"#\" target=\"_blank\" className='link_grn_new link_brk_word'>{this.state.website ? this.state.website : \"\"}</a>\n            </span>\n            </p> \n                   \n            <div className='mb-4 mt-4'>\n                            <div className='card_footer_form'>\n                                <div className='d-flex align-items-center justify-content-center'>\n                                <i class=\"fa fa-exclamation-circle text-danger-war\" aria-hidden=\"true\"></i>\n                                <p className='mb-0 pl-3'>For tokens with burns, rebase or other special transfers please ensure that you have a way to whitelist multiple addresses or turn off the special transfer events (By setting fees to 0 for example for the duration of the presale)</p>\n                                </div>\n\n                            </div>\n                        </div>\n\n                        {this.state.deposit > 0 ?\n                        <div className='col-12'>\n<div className='note_desc mt-1 mb-1 text-center'>\n                    <p>Need {this.state.deposit} {this.state.name} to create launchpad.</p>\n                    </div>\n</div> : <></> }\n                       \n\n                        <div className='col-12 col-md-12 text-center'>\n                        <button className=\"get-started-btn mr-2\" onClick={()=>{this.setState({ currentStep: 3})}}>\n                           Back\n                        </button>\n                        {/* <Link to=\"/launchpaddetail\" className=\"get-started-btn\" onClick={()=>{this.setState({ currentStep: 3})}}>\n                           Submit\n                        </Link> */}\n                        { !this.state.isDeposited ? \n                        (this.state.createdSale == '' ?\n                        <a  onClick={this.CreateSale} className=\"get-started-btn\">\n                           Create\n                        </a> : \n                        this.renderDeposit()):<a onClick={this.goToSale} className=\"get-started-btn\">Proceed to Sale</a>\n                        }\n                        </div>\n                        </div>\n                      \n             </div>\n             </div>\n            </div>\n            </div>\n        \n\n                \n               \n        </div>\n           </div>\n         </div>\n      \n\n\n      \n         {tokenModal && <TokenModal connect={\"string\"} address = {(val)=>this.settokenaddress(val)} onDismiss={()=>this.onDismiss()} /> }\n        \n       </div>\n     \n\n\n    \n       \n      )\n    }\n\n}\n\n\nexport default CreatePrivatesaletab",{"ruleId":"1659","severity":1,"message":"1660","line":2,"column":8,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":13},{"ruleId":"1659","severity":1,"message":"1663","line":3,"column":41,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":47},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1667","line":11,"column":10,"nodeType":"1661","messageId":"1662","endLine":11,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1668","line":22,"column":8,"nodeType":"1661","messageId":"1662","endLine":22,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1669","line":77,"column":13,"nodeType":"1661","messageId":"1662","endLine":77,"endColumn":21},{"ruleId":"1659","severity":1,"message":"1670","line":80,"column":14,"nodeType":"1661","messageId":"1662","endLine":80,"endColumn":24},{"ruleId":"1671","severity":1,"message":"1672","line":89,"column":5,"nodeType":"1673","endLine":89,"endColumn":48},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1674","line":3,"column":10,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1675","line":11,"column":8,"nodeType":"1661","messageId":"1662","endLine":11,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1676","line":14,"column":8,"nodeType":"1661","messageId":"1662","endLine":14,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1677","line":17,"column":8,"nodeType":"1661","messageId":"1662","endLine":17,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1678","line":18,"column":88,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":111},{"ruleId":"1659","severity":1,"message":"1679","line":18,"column":113,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":125},{"ruleId":"1659","severity":1,"message":"1680","line":18,"column":127,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":144},{"ruleId":"1659","severity":1,"message":"1681","line":18,"column":146,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":162},{"ruleId":"1659","severity":1,"message":"1682","line":18,"column":196,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":206},{"ruleId":"1659","severity":1,"message":"1683","line":19,"column":81,"nodeType":"1661","messageId":"1662","endLine":19,"endColumn":86},{"ruleId":"1659","severity":1,"message":"1684","line":20,"column":10,"nodeType":"1661","messageId":"1662","endLine":20,"endColumn":16},{"ruleId":"1659","severity":1,"message":"1685","line":21,"column":34,"nodeType":"1661","messageId":"1662","endLine":21,"endColumn":44},{"ruleId":"1659","severity":1,"message":"1686","line":22,"column":10,"nodeType":"1661","messageId":"1662","endLine":22,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1687","line":24,"column":50,"nodeType":"1661","messageId":"1662","endLine":24,"endColumn":61},{"ruleId":"1688","severity":1,"message":"1689","line":111,"column":68,"nodeType":"1690","messageId":"1691","endLine":111,"endColumn":70},{"ruleId":"1688","severity":1,"message":"1689","line":111,"column":97,"nodeType":"1690","messageId":"1691","endLine":111,"endColumn":99},{"ruleId":"1692","severity":1,"message":"1693","line":113,"column":27,"nodeType":"1694","messageId":"1695","endLine":113,"endColumn":29},{"ruleId":"1688","severity":1,"message":"1689","line":114,"column":55,"nodeType":"1690","messageId":"1691","endLine":114,"endColumn":57},{"ruleId":"1696","severity":1,"message":"1697","line":146,"column":9,"nodeType":"1698","messageId":"1691","endLine":146,"endColumn":17},{"ruleId":"1688","severity":1,"message":"1689","line":166,"column":75,"nodeType":"1690","messageId":"1691","endLine":166,"endColumn":77},{"ruleId":"1692","severity":1,"message":"1693","line":176,"column":31,"nodeType":"1694","messageId":"1695","endLine":176,"endColumn":33},{"ruleId":"1688","severity":1,"message":"1689","line":177,"column":60,"nodeType":"1690","messageId":"1691","endLine":177,"endColumn":62},{"ruleId":"1692","severity":1,"message":"1693","line":182,"column":40,"nodeType":"1694","messageId":"1695","endLine":182,"endColumn":42},{"ruleId":"1688","severity":1,"message":"1689","line":183,"column":58,"nodeType":"1690","messageId":"1691","endLine":183,"endColumn":60},{"ruleId":"1688","severity":1,"message":"1689","line":318,"column":11,"nodeType":"1690","messageId":"1691","endLine":318,"endColumn":13},{"ruleId":"1688","severity":1,"message":"1689","line":335,"column":27,"nodeType":"1690","messageId":"1691","endLine":335,"endColumn":29},{"ruleId":"1688","severity":1,"message":"1689","line":352,"column":11,"nodeType":"1690","messageId":"1691","endLine":352,"endColumn":13},{"ruleId":"1688","severity":1,"message":"1689","line":368,"column":25,"nodeType":"1690","messageId":"1691","endLine":368,"endColumn":27},{"ruleId":"1688","severity":1,"message":"1689","line":386,"column":20,"nodeType":"1690","messageId":"1691","endLine":386,"endColumn":22},{"ruleId":"1688","severity":1,"message":"1689","line":406,"column":22,"nodeType":"1690","messageId":"1691","endLine":406,"endColumn":24},{"ruleId":"1688","severity":1,"message":"1689","line":426,"column":22,"nodeType":"1690","messageId":"1691","endLine":426,"endColumn":24},{"ruleId":"1688","severity":1,"message":"1689","line":446,"column":31,"nodeType":"1690","messageId":"1691","endLine":446,"endColumn":33},{"ruleId":"1688","severity":1,"message":"1689","line":446,"column":64,"nodeType":"1690","messageId":"1691","endLine":446,"endColumn":66},{"ruleId":"1688","severity":1,"message":"1689","line":446,"column":95,"nodeType":"1690","messageId":"1691","endLine":446,"endColumn":97},{"ruleId":"1659","severity":1,"message":"1669","line":476,"column":13,"nodeType":"1661","messageId":"1662","endLine":476,"endColumn":21},{"ruleId":"1659","severity":1,"message":"1699","line":477,"column":25,"nodeType":"1661","messageId":"1662","endLine":477,"endColumn":37},{"ruleId":"1659","severity":1,"message":"1700","line":477,"column":38,"nodeType":"1661","messageId":"1662","endLine":477,"endColumn":51},{"ruleId":"1659","severity":1,"message":"1701","line":477,"column":80,"nodeType":"1661","messageId":"1662","endLine":477,"endColumn":91},{"ruleId":"1671","severity":1,"message":"1672","line":486,"column":5,"nodeType":"1673","endLine":486,"endColumn":48},{"ruleId":"1702","severity":1,"message":"1703","line":761,"column":29,"nodeType":"1704","messageId":"1705","endLine":761,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":768,"column":29,"nodeType":"1704","messageId":"1705","endLine":768,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":786,"column":21,"nodeType":"1704","messageId":"1705","endLine":786,"endColumn":41},{"ruleId":"1702","severity":1,"message":"1703","line":864,"column":29,"nodeType":"1704","messageId":"1705","endLine":864,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":870,"column":29,"nodeType":"1704","messageId":"1705","endLine":870,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":876,"column":29,"nodeType":"1704","messageId":"1705","endLine":876,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":882,"column":29,"nodeType":"1704","messageId":"1705","endLine":882,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":905,"column":21,"nodeType":"1704","messageId":"1705","endLine":905,"endColumn":41},{"ruleId":"1702","severity":1,"message":"1703","line":996,"column":29,"nodeType":"1704","messageId":"1705","endLine":996,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":1002,"column":29,"nodeType":"1704","messageId":"1705","endLine":1002,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":1008,"column":29,"nodeType":"1704","messageId":"1705","endLine":1008,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":1014,"column":21,"nodeType":"1704","messageId":"1705","endLine":1014,"endColumn":41},{"ruleId":"1671","severity":1,"message":"1672","line":1082,"column":9,"nodeType":"1673","endLine":1082,"endColumn":61},{"ruleId":"1706","severity":1,"message":"1707","line":1115,"column":11,"nodeType":"1673","messageId":"1708","endLine":1115,"endColumn":55,"fix":"1709"},{"ruleId":"1706","severity":1,"message":"1707","line":1116,"column":11,"nodeType":"1673","messageId":"1708","endLine":1116,"endColumn":55,"fix":"1710"},{"ruleId":"1706","severity":1,"message":"1707","line":1117,"column":11,"nodeType":"1673","messageId":"1708","endLine":1117,"endColumn":55,"fix":"1711"},{"ruleId":"1671","severity":1,"message":"1672","line":1137,"column":9,"nodeType":"1673","endLine":1137,"endColumn":61},{"ruleId":"1706","severity":1,"message":"1707","line":1161,"column":11,"nodeType":"1673","messageId":"1708","endLine":1161,"endColumn":55,"fix":"1712"},{"ruleId":"1706","severity":1,"message":"1707","line":1162,"column":11,"nodeType":"1673","messageId":"1708","endLine":1162,"endColumn":55,"fix":"1713"},{"ruleId":"1706","severity":1,"message":"1707","line":1163,"column":11,"nodeType":"1673","messageId":"1708","endLine":1163,"endColumn":55,"fix":"1714"},{"ruleId":"1715","severity":1,"message":"1716","line":1171,"column":13,"nodeType":"1673","endLine":1171,"endColumn":38},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1668","line":6,"column":8,"nodeType":"1661","messageId":"1662","endLine":6,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1669","line":84,"column":13,"nodeType":"1661","messageId":"1662","endLine":84,"endColumn":21},{"ruleId":"1659","severity":1,"message":"1717","line":86,"column":15,"nodeType":"1661","messageId":"1662","endLine":86,"endColumn":26},{"ruleId":"1671","severity":1,"message":"1672","line":96,"column":5,"nodeType":"1673","endLine":96,"endColumn":48},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1674","line":3,"column":10,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1718","line":3,"column":16,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":26},{"ruleId":"1659","severity":1,"message":"1668","line":7,"column":8,"nodeType":"1661","messageId":"1662","endLine":7,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1679","line":19,"column":3,"nodeType":"1661","messageId":"1662","endLine":19,"endColumn":15},{"ruleId":"1659","severity":1,"message":"1680","line":20,"column":3,"nodeType":"1661","messageId":"1662","endLine":20,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1719","line":21,"column":3,"nodeType":"1661","messageId":"1662","endLine":21,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1720","line":22,"column":3,"nodeType":"1661","messageId":"1662","endLine":22,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1682","line":23,"column":3,"nodeType":"1661","messageId":"1662","endLine":23,"endColumn":13},{"ruleId":"1659","severity":1,"message":"1721","line":27,"column":3,"nodeType":"1661","messageId":"1662","endLine":27,"endColumn":11},{"ruleId":"1659","severity":1,"message":"1722","line":28,"column":3,"nodeType":"1661","messageId":"1662","endLine":28,"endColumn":6},{"ruleId":"1659","severity":1,"message":"1723","line":29,"column":3,"nodeType":"1661","messageId":"1662","endLine":29,"endColumn":6},{"ruleId":"1659","severity":1,"message":"1724","line":30,"column":3,"nodeType":"1661","messageId":"1662","endLine":30,"endColumn":7},{"ruleId":"1659","severity":1,"message":"1725","line":31,"column":3,"nodeType":"1661","messageId":"1662","endLine":31,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1726","line":33,"column":3,"nodeType":"1661","messageId":"1662","endLine":33,"endColumn":7},{"ruleId":"1659","severity":1,"message":"1727","line":34,"column":3,"nodeType":"1661","messageId":"1662","endLine":34,"endColumn":6},{"ruleId":"1659","severity":1,"message":"1728","line":35,"column":3,"nodeType":"1661","messageId":"1662","endLine":35,"endColumn":6},{"ruleId":"1688","severity":1,"message":"1689","line":108,"column":29,"nodeType":"1690","messageId":"1691","endLine":108,"endColumn":31},{"ruleId":"1688","severity":1,"message":"1689","line":132,"column":29,"nodeType":"1690","messageId":"1691","endLine":132,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1669","line":169,"column":11,"nodeType":"1661","messageId":"1662","endLine":169,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1729","line":172,"column":7,"nodeType":"1661","messageId":"1662","endLine":172,"endColumn":17},{"ruleId":"1659","severity":1,"message":"1699","line":173,"column":7,"nodeType":"1661","messageId":"1662","endLine":173,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1700","line":174,"column":7,"nodeType":"1661","messageId":"1662","endLine":174,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1730","line":175,"column":7,"nodeType":"1661","messageId":"1662","endLine":175,"endColumn":13},{"ruleId":"1659","severity":1,"message":"1731","line":176,"column":7,"nodeType":"1661","messageId":"1662","endLine":176,"endColumn":15},{"ruleId":"1659","severity":1,"message":"1732","line":177,"column":7,"nodeType":"1661","messageId":"1662","endLine":177,"endColumn":17},{"ruleId":"1659","severity":1,"message":"1701","line":178,"column":7,"nodeType":"1661","messageId":"1662","endLine":178,"endColumn":18},{"ruleId":"1671","severity":1,"message":"1672","line":185,"column":11,"nodeType":"1673","endLine":185,"endColumn":54},{"ruleId":"1688","severity":1,"message":"1689","line":336,"column":39,"nodeType":"1690","messageId":"1691","endLine":336,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1668","line":6,"column":8,"nodeType":"1661","messageId":"1662","endLine":6,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1667","line":9,"column":10,"nodeType":"1661","messageId":"1662","endLine":9,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1669","line":61,"column":13,"nodeType":"1661","messageId":"1662","endLine":61,"endColumn":21},{"ruleId":"1659","severity":1,"message":"1717","line":63,"column":15,"nodeType":"1661","messageId":"1662","endLine":63,"endColumn":26},{"ruleId":"1671","severity":1,"message":"1672","line":73,"column":5,"nodeType":"1673","endLine":73,"endColumn":48},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1733","line":5,"column":8,"nodeType":"1661","messageId":"1662","endLine":5,"endColumn":17},{"ruleId":"1659","severity":1,"message":"1668","line":8,"column":8,"nodeType":"1661","messageId":"1662","endLine":8,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1734","line":9,"column":8,"nodeType":"1661","messageId":"1662","endLine":9,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1735","line":23,"column":8,"nodeType":"1661","messageId":"1662","endLine":23,"endColumn":13},{"ruleId":"1659","severity":1,"message":"1674","line":24,"column":10,"nodeType":"1661","messageId":"1662","endLine":24,"endColumn":14},{"ruleId":"1688","severity":1,"message":"1689","line":102,"column":47,"nodeType":"1690","messageId":"1691","endLine":102,"endColumn":49},{"ruleId":"1688","severity":1,"message":"1689","line":102,"column":99,"nodeType":"1690","messageId":"1691","endLine":102,"endColumn":101},{"ruleId":"1659","severity":1,"message":"1736","line":119,"column":13,"nodeType":"1661","messageId":"1662","endLine":119,"endColumn":19},{"ruleId":"1671","severity":1,"message":"1672","line":140,"column":5,"nodeType":"1673","endLine":140,"endColumn":48},{"ruleId":"1688","severity":1,"message":"1689","line":428,"column":61,"nodeType":"1690","messageId":"1691","endLine":428,"endColumn":63},{"ruleId":"1688","severity":1,"message":"1689","line":428,"column":100,"nodeType":"1690","messageId":"1691","endLine":428,"endColumn":102},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1668","line":8,"column":8,"nodeType":"1661","messageId":"1662","endLine":8,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1667","line":11,"column":10,"nodeType":"1661","messageId":"1662","endLine":11,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1737","line":21,"column":10,"nodeType":"1661","messageId":"1662","endLine":21,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1660","line":22,"column":8,"nodeType":"1661","messageId":"1662","endLine":22,"endColumn":13},{"ruleId":"1671","severity":1,"message":"1672","line":125,"column":5,"nodeType":"1673","endLine":125,"endColumn":48},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1668","line":6,"column":8,"nodeType":"1661","messageId":"1662","endLine":6,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1734","line":8,"column":8,"nodeType":"1661","messageId":"1662","endLine":8,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1667","line":11,"column":10,"nodeType":"1661","messageId":"1662","endLine":11,"endColumn":20},{"ruleId":"1671","severity":1,"message":"1672","line":72,"column":5,"nodeType":"1673","endLine":72,"endColumn":48},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1674","line":3,"column":10,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1668","line":7,"column":8,"nodeType":"1661","messageId":"1662","endLine":7,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1679","line":19,"column":3,"nodeType":"1661","messageId":"1662","endLine":19,"endColumn":15},{"ruleId":"1659","severity":1,"message":"1680","line":20,"column":3,"nodeType":"1661","messageId":"1662","endLine":20,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1719","line":21,"column":3,"nodeType":"1661","messageId":"1662","endLine":21,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1720","line":22,"column":3,"nodeType":"1661","messageId":"1662","endLine":22,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1682","line":23,"column":3,"nodeType":"1661","messageId":"1662","endLine":23,"endColumn":13},{"ruleId":"1659","severity":1,"message":"1721","line":27,"column":3,"nodeType":"1661","messageId":"1662","endLine":27,"endColumn":11},{"ruleId":"1659","severity":1,"message":"1722","line":28,"column":3,"nodeType":"1661","messageId":"1662","endLine":28,"endColumn":6},{"ruleId":"1659","severity":1,"message":"1723","line":29,"column":3,"nodeType":"1661","messageId":"1662","endLine":29,"endColumn":6},{"ruleId":"1659","severity":1,"message":"1724","line":30,"column":3,"nodeType":"1661","messageId":"1662","endLine":30,"endColumn":7},{"ruleId":"1659","severity":1,"message":"1725","line":31,"column":3,"nodeType":"1661","messageId":"1662","endLine":31,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1738","line":32,"column":3,"nodeType":"1661","messageId":"1662","endLine":32,"endColumn":13},{"ruleId":"1659","severity":1,"message":"1726","line":33,"column":3,"nodeType":"1661","messageId":"1662","endLine":33,"endColumn":7},{"ruleId":"1659","severity":1,"message":"1727","line":34,"column":3,"nodeType":"1661","messageId":"1662","endLine":34,"endColumn":6},{"ruleId":"1659","severity":1,"message":"1728","line":35,"column":3,"nodeType":"1661","messageId":"1662","endLine":35,"endColumn":6},{"ruleId":"1659","severity":1,"message":"1739","line":36,"column":3,"nodeType":"1661","messageId":"1662","endLine":36,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1740","line":39,"column":10,"nodeType":"1661","messageId":"1662","endLine":39,"endColumn":22},{"ruleId":"1688","severity":1,"message":"1689","line":106,"column":29,"nodeType":"1690","messageId":"1691","endLine":106,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1669","line":126,"column":11,"nodeType":"1661","messageId":"1662","endLine":126,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1729","line":129,"column":7,"nodeType":"1661","messageId":"1662","endLine":129,"endColumn":17},{"ruleId":"1659","severity":1,"message":"1699","line":130,"column":7,"nodeType":"1661","messageId":"1662","endLine":130,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1700","line":131,"column":7,"nodeType":"1661","messageId":"1662","endLine":131,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1730","line":132,"column":7,"nodeType":"1661","messageId":"1662","endLine":132,"endColumn":13},{"ruleId":"1659","severity":1,"message":"1731","line":133,"column":7,"nodeType":"1661","messageId":"1662","endLine":133,"endColumn":15},{"ruleId":"1659","severity":1,"message":"1732","line":134,"column":7,"nodeType":"1661","messageId":"1662","endLine":134,"endColumn":17},{"ruleId":"1659","severity":1,"message":"1701","line":135,"column":7,"nodeType":"1661","messageId":"1662","endLine":135,"endColumn":18},{"ruleId":"1671","severity":1,"message":"1672","line":142,"column":11,"nodeType":"1673","endLine":142,"endColumn":54},{"ruleId":"1706","severity":1,"message":"1707","line":227,"column":23,"nodeType":"1673","messageId":"1708","endLine":227,"endColumn":71,"fix":"1741"},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1668","line":6,"column":8,"nodeType":"1661","messageId":"1662","endLine":6,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1742","line":16,"column":59,"nodeType":"1661","messageId":"1662","endLine":16,"endColumn":65},{"ruleId":"1659","severity":1,"message":"1743","line":21,"column":10,"nodeType":"1661","messageId":"1662","endLine":21,"endColumn":23},{"ruleId":"1744","severity":1,"message":"1745","line":268,"column":1,"nodeType":"1746","messageId":"1691","endLine":272,"endColumn":2},{"ruleId":"1659","severity":1,"message":"1747","line":291,"column":90,"nodeType":"1661","messageId":"1662","endLine":291,"endColumn":103},{"ruleId":"1671","severity":1,"message":"1672","line":297,"column":5,"nodeType":"1673","endLine":297,"endColumn":48},{"ruleId":"1688","severity":1,"message":"1689","line":369,"column":35,"nodeType":"1690","messageId":"1691","endLine":369,"endColumn":37},{"ruleId":"1706","severity":1,"message":"1707","line":567,"column":19,"nodeType":"1673","messageId":"1708","endLine":567,"endColumn":153,"fix":"1748"},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1667","line":8,"column":10,"nodeType":"1661","messageId":"1662","endLine":8,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1724","line":9,"column":9,"nodeType":"1661","messageId":"1662","endLine":9,"endColumn":13},{"ruleId":"1659","severity":1,"message":"1749","line":10,"column":8,"nodeType":"1661","messageId":"1662","endLine":10,"endColumn":18},{"ruleId":"1659","severity":1,"message":"1675","line":16,"column":8,"nodeType":"1661","messageId":"1662","endLine":16,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1739","line":18,"column":22,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":33},{"ruleId":"1659","severity":1,"message":"1738","line":18,"column":35,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":45},{"ruleId":"1659","severity":1,"message":"1674","line":22,"column":10,"nodeType":"1661","messageId":"1662","endLine":22,"endColumn":14},{"ruleId":"1671","severity":1,"message":"1672","line":74,"column":5,"nodeType":"1673","endLine":74,"endColumn":48},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1674","line":3,"column":10,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1750","line":25,"column":8,"nodeType":"1661","messageId":"1662","endLine":25,"endColumn":16},{"ruleId":"1659","severity":1,"message":"1725","line":51,"column":3,"nodeType":"1661","messageId":"1662","endLine":51,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1738","line":52,"column":3,"nodeType":"1661","messageId":"1662","endLine":52,"endColumn":13},{"ruleId":"1659","severity":1,"message":"1726","line":53,"column":3,"nodeType":"1661","messageId":"1662","endLine":53,"endColumn":7},{"ruleId":"1659","severity":1,"message":"1727","line":54,"column":3,"nodeType":"1661","messageId":"1662","endLine":54,"endColumn":6},{"ruleId":"1659","severity":1,"message":"1728","line":55,"column":3,"nodeType":"1661","messageId":"1662","endLine":55,"endColumn":6},{"ruleId":"1659","severity":1,"message":"1751","line":60,"column":27,"nodeType":"1661","messageId":"1662","endLine":60,"endColumn":43},{"ruleId":"1659","severity":1,"message":"1686","line":60,"column":45,"nodeType":"1661","messageId":"1662","endLine":60,"endColumn":57},{"ruleId":"1671","severity":1,"message":"1672","line":490,"column":27,"nodeType":"1673","endLine":490,"endColumn":51},{"ruleId":"1671","severity":1,"message":"1672","line":518,"column":27,"nodeType":"1673","endLine":518,"endColumn":51},{"ruleId":"1671","severity":1,"message":"1672","line":541,"column":27,"nodeType":"1673","endLine":541,"endColumn":51},{"ruleId":"1671","severity":1,"message":"1672","line":564,"column":27,"nodeType":"1673","endLine":564,"endColumn":51},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1668","line":6,"column":8,"nodeType":"1661","messageId":"1662","endLine":6,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1734","line":8,"column":8,"nodeType":"1661","messageId":"1662","endLine":8,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1667","line":11,"column":10,"nodeType":"1661","messageId":"1662","endLine":11,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1739","line":17,"column":22,"nodeType":"1661","messageId":"1662","endLine":17,"endColumn":33},{"ruleId":"1659","severity":1,"message":"1738","line":17,"column":35,"nodeType":"1661","messageId":"1662","endLine":17,"endColumn":45},{"ruleId":"1659","severity":1,"message":"1725","line":17,"column":47,"nodeType":"1661","messageId":"1662","endLine":17,"endColumn":58},{"ruleId":"1659","severity":1,"message":"1726","line":17,"column":59,"nodeType":"1661","messageId":"1662","endLine":17,"endColumn":63},{"ruleId":"1659","severity":1,"message":"1674","line":21,"column":10,"nodeType":"1661","messageId":"1662","endLine":21,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1752","line":23,"column":10,"nodeType":"1661","messageId":"1662","endLine":23,"endColumn":20},{"ruleId":"1753","severity":1,"message":"1754","line":61,"column":33,"nodeType":"1661","messageId":"1755","endLine":61,"endColumn":34},{"ruleId":"1688","severity":1,"message":"1689","line":75,"column":31,"nodeType":"1690","messageId":"1691","endLine":75,"endColumn":33},{"ruleId":"1688","severity":1,"message":"1689","line":81,"column":19,"nodeType":"1690","messageId":"1691","endLine":81,"endColumn":21},{"ruleId":"1688","severity":1,"message":"1689","line":108,"column":29,"nodeType":"1690","messageId":"1691","endLine":108,"endColumn":31},{"ruleId":"1688","severity":1,"message":"1689","line":114,"column":19,"nodeType":"1690","messageId":"1691","endLine":114,"endColumn":21},{"ruleId":"1756","severity":1,"message":"1757","line":115,"column":15,"nodeType":"1661","messageId":"1758","endLine":115,"endColumn":20},{"ruleId":"1671","severity":1,"message":"1672","line":189,"column":5,"nodeType":"1673","endLine":189,"endColumn":48},{"ruleId":"1671","severity":1,"message":"1672","line":299,"column":9,"nodeType":"1673","endLine":299,"endColumn":58},{"ruleId":"1671","severity":1,"message":"1672","line":390,"column":9,"nodeType":"1673","endLine":390,"endColumn":58},{"ruleId":"1715","severity":1,"message":"1716","line":401,"column":50,"nodeType":"1673","endLine":412,"endColumn":8},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1734","line":7,"column":8,"nodeType":"1661","messageId":"1662","endLine":7,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1668","line":8,"column":8,"nodeType":"1661","messageId":"1662","endLine":8,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1667","line":11,"column":10,"nodeType":"1661","messageId":"1662","endLine":11,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1669","line":66,"column":13,"nodeType":"1661","messageId":"1662","endLine":66,"endColumn":21},{"ruleId":"1659","severity":1,"message":"1717","line":68,"column":15,"nodeType":"1661","messageId":"1662","endLine":68,"endColumn":26},{"ruleId":"1671","severity":1,"message":"1672","line":78,"column":5,"nodeType":"1673","endLine":78,"endColumn":48},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1668","line":6,"column":8,"nodeType":"1661","messageId":"1662","endLine":6,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1734","line":8,"column":8,"nodeType":"1661","messageId":"1662","endLine":8,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1667","line":11,"column":10,"nodeType":"1661","messageId":"1662","endLine":11,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1739","line":17,"column":22,"nodeType":"1661","messageId":"1662","endLine":17,"endColumn":33},{"ruleId":"1659","severity":1,"message":"1738","line":17,"column":35,"nodeType":"1661","messageId":"1662","endLine":17,"endColumn":45},{"ruleId":"1659","severity":1,"message":"1725","line":17,"column":47,"nodeType":"1661","messageId":"1662","endLine":17,"endColumn":58},{"ruleId":"1659","severity":1,"message":"1726","line":17,"column":59,"nodeType":"1661","messageId":"1662","endLine":17,"endColumn":63},{"ruleId":"1671","severity":1,"message":"1672","line":73,"column":5,"nodeType":"1673","endLine":73,"endColumn":48},{"ruleId":"1671","severity":1,"message":"1672","line":179,"column":11,"nodeType":"1673","endLine":179,"endColumn":59},{"ruleId":"1671","severity":1,"message":"1672","line":183,"column":13,"nodeType":"1673","endLine":183,"endColumn":62},{"ruleId":"1671","severity":1,"message":"1672","line":205,"column":11,"nodeType":"1673","endLine":205,"endColumn":59},{"ruleId":"1671","severity":1,"message":"1672","line":209,"column":13,"nodeType":"1673","endLine":209,"endColumn":62},{"ruleId":"1671","severity":1,"message":"1672","line":231,"column":11,"nodeType":"1673","endLine":231,"endColumn":59},{"ruleId":"1671","severity":1,"message":"1672","line":235,"column":13,"nodeType":"1673","endLine":235,"endColumn":62},{"ruleId":"1671","severity":1,"message":"1672","line":279,"column":11,"nodeType":"1673","endLine":279,"endColumn":59},{"ruleId":"1671","severity":1,"message":"1672","line":283,"column":13,"nodeType":"1673","endLine":283,"endColumn":62},{"ruleId":"1671","severity":1,"message":"1672","line":305,"column":11,"nodeType":"1673","endLine":305,"endColumn":59},{"ruleId":"1671","severity":1,"message":"1672","line":309,"column":13,"nodeType":"1673","endLine":309,"endColumn":62},{"ruleId":"1671","severity":1,"message":"1672","line":331,"column":11,"nodeType":"1673","endLine":331,"endColumn":59},{"ruleId":"1671","severity":1,"message":"1672","line":335,"column":13,"nodeType":"1673","endLine":335,"endColumn":62},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1674","line":3,"column":10,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1675","line":11,"column":8,"nodeType":"1661","messageId":"1662","endLine":11,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1676","line":14,"column":8,"nodeType":"1661","messageId":"1662","endLine":14,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1677","line":17,"column":8,"nodeType":"1661","messageId":"1662","endLine":17,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1759","line":18,"column":86,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":106},{"ruleId":"1659","severity":1,"message":"1679","line":18,"column":108,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":120},{"ruleId":"1659","severity":1,"message":"1680","line":18,"column":122,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":139},{"ruleId":"1659","severity":1,"message":"1682","line":18,"column":173,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":183},{"ruleId":"1659","severity":1,"message":"1684","line":20,"column":10,"nodeType":"1661","messageId":"1662","endLine":20,"endColumn":16},{"ruleId":"1659","severity":1,"message":"1685","line":21,"column":34,"nodeType":"1661","messageId":"1662","endLine":21,"endColumn":44},{"ruleId":"1659","severity":1,"message":"1760","line":22,"column":50,"nodeType":"1661","messageId":"1662","endLine":22,"endColumn":60},{"ruleId":"1659","severity":1,"message":"1687","line":22,"column":62,"nodeType":"1661","messageId":"1662","endLine":22,"endColumn":73},{"ruleId":"1659","severity":1,"message":"1686","line":23,"column":10,"nodeType":"1661","messageId":"1662","endLine":23,"endColumn":22},{"ruleId":"1688","severity":1,"message":"1689","line":104,"column":68,"nodeType":"1690","messageId":"1691","endLine":104,"endColumn":70},{"ruleId":"1688","severity":1,"message":"1689","line":104,"column":98,"nodeType":"1690","messageId":"1691","endLine":104,"endColumn":100},{"ruleId":"1692","severity":1,"message":"1693","line":106,"column":27,"nodeType":"1694","messageId":"1695","endLine":106,"endColumn":29},{"ruleId":"1688","severity":1,"message":"1689","line":107,"column":55,"nodeType":"1690","messageId":"1691","endLine":107,"endColumn":57},{"ruleId":"1688","severity":1,"message":"1689","line":164,"column":77,"nodeType":"1690","messageId":"1691","endLine":164,"endColumn":79},{"ruleId":"1692","severity":1,"message":"1693","line":173,"column":33,"nodeType":"1694","messageId":"1695","endLine":173,"endColumn":35},{"ruleId":"1688","severity":1,"message":"1689","line":174,"column":62,"nodeType":"1690","messageId":"1691","endLine":174,"endColumn":64},{"ruleId":"1692","severity":1,"message":"1693","line":179,"column":42,"nodeType":"1694","messageId":"1695","endLine":179,"endColumn":44},{"ruleId":"1688","severity":1,"message":"1689","line":180,"column":60,"nodeType":"1690","messageId":"1691","endLine":180,"endColumn":62},{"ruleId":"1688","severity":1,"message":"1689","line":316,"column":13,"nodeType":"1690","messageId":"1691","endLine":316,"endColumn":15},{"ruleId":"1688","severity":1,"message":"1689","line":333,"column":29,"nodeType":"1690","messageId":"1691","endLine":333,"endColumn":31},{"ruleId":"1688","severity":1,"message":"1689","line":350,"column":13,"nodeType":"1690","messageId":"1691","endLine":350,"endColumn":15},{"ruleId":"1688","severity":1,"message":"1689","line":364,"column":27,"nodeType":"1690","messageId":"1691","endLine":364,"endColumn":29},{"ruleId":"1688","severity":1,"message":"1689","line":382,"column":22,"nodeType":"1690","messageId":"1691","endLine":382,"endColumn":24},{"ruleId":"1688","severity":1,"message":"1689","line":402,"column":24,"nodeType":"1690","messageId":"1691","endLine":402,"endColumn":26},{"ruleId":"1688","severity":1,"message":"1689","line":422,"column":24,"nodeType":"1690","messageId":"1691","endLine":422,"endColumn":26},{"ruleId":"1688","severity":1,"message":"1689","line":442,"column":33,"nodeType":"1690","messageId":"1691","endLine":442,"endColumn":35},{"ruleId":"1688","severity":1,"message":"1689","line":442,"column":66,"nodeType":"1690","messageId":"1691","endLine":442,"endColumn":68},{"ruleId":"1688","severity":1,"message":"1689","line":442,"column":97,"nodeType":"1690","messageId":"1691","endLine":442,"endColumn":99},{"ruleId":"1659","severity":1,"message":"1669","line":475,"column":13,"nodeType":"1661","messageId":"1662","endLine":475,"endColumn":21},{"ruleId":"1659","severity":1,"message":"1699","line":476,"column":25,"nodeType":"1661","messageId":"1662","endLine":476,"endColumn":37},{"ruleId":"1659","severity":1,"message":"1700","line":476,"column":38,"nodeType":"1661","messageId":"1662","endLine":476,"endColumn":51},{"ruleId":"1659","severity":1,"message":"1701","line":476,"column":80,"nodeType":"1661","messageId":"1662","endLine":476,"endColumn":91},{"ruleId":"1671","severity":1,"message":"1672","line":485,"column":5,"nodeType":"1673","endLine":485,"endColumn":48},{"ruleId":"1702","severity":1,"message":"1703","line":768,"column":29,"nodeType":"1704","messageId":"1705","endLine":768,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":775,"column":29,"nodeType":"1704","messageId":"1705","endLine":775,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":793,"column":21,"nodeType":"1704","messageId":"1705","endLine":793,"endColumn":41},{"ruleId":"1702","severity":1,"message":"1703","line":871,"column":29,"nodeType":"1704","messageId":"1705","endLine":871,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":877,"column":29,"nodeType":"1704","messageId":"1705","endLine":877,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":883,"column":29,"nodeType":"1704","messageId":"1705","endLine":883,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":889,"column":29,"nodeType":"1704","messageId":"1705","endLine":889,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":912,"column":21,"nodeType":"1704","messageId":"1705","endLine":912,"endColumn":41},{"ruleId":"1702","severity":1,"message":"1703","line":1003,"column":29,"nodeType":"1704","messageId":"1705","endLine":1003,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":1009,"column":29,"nodeType":"1704","messageId":"1705","endLine":1009,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":1015,"column":29,"nodeType":"1704","messageId":"1705","endLine":1015,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":1021,"column":21,"nodeType":"1704","messageId":"1705","endLine":1021,"endColumn":41},{"ruleId":"1671","severity":1,"message":"1672","line":1086,"column":9,"nodeType":"1673","endLine":1086,"endColumn":61},{"ruleId":"1706","severity":1,"message":"1707","line":1120,"column":11,"nodeType":"1673","messageId":"1708","endLine":1120,"endColumn":55,"fix":"1761"},{"ruleId":"1706","severity":1,"message":"1707","line":1121,"column":11,"nodeType":"1673","messageId":"1708","endLine":1121,"endColumn":55,"fix":"1762"},{"ruleId":"1706","severity":1,"message":"1707","line":1122,"column":11,"nodeType":"1673","messageId":"1708","endLine":1122,"endColumn":55,"fix":"1763"},{"ruleId":"1671","severity":1,"message":"1672","line":1141,"column":9,"nodeType":"1673","endLine":1141,"endColumn":61},{"ruleId":"1706","severity":1,"message":"1707","line":1165,"column":11,"nodeType":"1673","messageId":"1708","endLine":1165,"endColumn":55,"fix":"1764"},{"ruleId":"1706","severity":1,"message":"1707","line":1166,"column":11,"nodeType":"1673","messageId":"1708","endLine":1166,"endColumn":55,"fix":"1765"},{"ruleId":"1706","severity":1,"message":"1707","line":1167,"column":11,"nodeType":"1673","messageId":"1708","endLine":1167,"endColumn":55,"fix":"1766"},{"ruleId":"1715","severity":1,"message":"1716","line":1175,"column":13,"nodeType":"1673","endLine":1175,"endColumn":38},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1668","line":7,"column":8,"nodeType":"1661","messageId":"1662","endLine":7,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1667","line":10,"column":10,"nodeType":"1661","messageId":"1662","endLine":10,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1724","line":11,"column":9,"nodeType":"1661","messageId":"1662","endLine":11,"endColumn":13},{"ruleId":"1659","severity":1,"message":"1767","line":15,"column":17,"nodeType":"1661","messageId":"1662","endLine":15,"endColumn":24},{"ruleId":"1659","severity":1,"message":"1675","line":19,"column":8,"nodeType":"1661","messageId":"1662","endLine":19,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1674","line":25,"column":10,"nodeType":"1661","messageId":"1662","endLine":25,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1768","line":27,"column":50,"nodeType":"1661","messageId":"1662","endLine":27,"endColumn":67},{"ruleId":"1659","severity":1,"message":"1669","line":171,"column":13,"nodeType":"1661","messageId":"1662","endLine":171,"endColumn":21},{"ruleId":"1659","severity":1,"message":"1769","line":173,"column":14,"nodeType":"1661","messageId":"1662","endLine":173,"endColumn":23},{"ruleId":"1671","severity":1,"message":"1672","line":184,"column":5,"nodeType":"1673","endLine":184,"endColumn":48},{"ruleId":"1770","severity":1,"message":"1771","line":378,"column":68,"nodeType":"1772","messageId":"1773","endLine":378,"endColumn":84,"fix":"1774"},{"ruleId":"1770","severity":1,"message":"1771","line":382,"column":70,"nodeType":"1772","messageId":"1773","endLine":382,"endColumn":86,"fix":"1775"},{"ruleId":"1770","severity":1,"message":"1771","line":386,"column":70,"nodeType":"1772","messageId":"1773","endLine":386,"endColumn":119,"fix":"1776"},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1674","line":4,"column":10,"nodeType":"1661","messageId":"1662","endLine":4,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1668","line":7,"column":8,"nodeType":"1661","messageId":"1662","endLine":7,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1777","line":72,"column":13,"nodeType":"1661","messageId":"1662","endLine":72,"endColumn":24},{"ruleId":"1659","severity":1,"message":"1669","line":112,"column":13,"nodeType":"1661","messageId":"1662","endLine":112,"endColumn":21},{"ruleId":"1671","severity":1,"message":"1672","line":123,"column":5,"nodeType":"1673","endLine":123,"endColumn":48},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1668","line":6,"column":8,"nodeType":"1661","messageId":"1662","endLine":6,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1667","line":9,"column":10,"nodeType":"1661","messageId":"1662","endLine":9,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1739","line":15,"column":22,"nodeType":"1661","messageId":"1662","endLine":15,"endColumn":33},{"ruleId":"1659","severity":1,"message":"1738","line":15,"column":35,"nodeType":"1661","messageId":"1662","endLine":15,"endColumn":45},{"ruleId":"1659","severity":1,"message":"1674","line":20,"column":10,"nodeType":"1661","messageId":"1662","endLine":20,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1669","line":74,"column":13,"nodeType":"1661","messageId":"1662","endLine":74,"endColumn":21},{"ruleId":"1659","severity":1,"message":"1717","line":76,"column":15,"nodeType":"1661","messageId":"1662","endLine":76,"endColumn":26},{"ruleId":"1671","severity":1,"message":"1672","line":86,"column":5,"nodeType":"1673","endLine":86,"endColumn":48},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1674","line":4,"column":10,"nodeType":"1661","messageId":"1662","endLine":4,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1668","line":7,"column":8,"nodeType":"1661","messageId":"1662","endLine":7,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1778","line":8,"column":8,"nodeType":"1661","messageId":"1662","endLine":8,"endColumn":26},{"ruleId":"1659","severity":1,"message":"1779","line":13,"column":8,"nodeType":"1661","messageId":"1662","endLine":13,"endColumn":17},{"ruleId":"1659","severity":1,"message":"1780","line":17,"column":7,"nodeType":"1661","messageId":"1662","endLine":17,"endColumn":15},{"ruleId":"1659","severity":1,"message":"1669","line":73,"column":13,"nodeType":"1661","messageId":"1662","endLine":73,"endColumn":21},{"ruleId":"1671","severity":1,"message":"1672","line":83,"column":5,"nodeType":"1673","endLine":83,"endColumn":48},{"ruleId":"1706","severity":1,"message":"1707","line":147,"column":25,"nodeType":"1673","messageId":"1708","endLine":147,"endColumn":139,"fix":"1781"},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1674","line":4,"column":10,"nodeType":"1661","messageId":"1662","endLine":4,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1668","line":7,"column":8,"nodeType":"1661","messageId":"1662","endLine":7,"endColumn":22},{"ruleId":"1671","severity":1,"message":"1672","line":115,"column":11,"nodeType":"1673","endLine":115,"endColumn":54},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1674","line":3,"column":10,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1677","line":16,"column":8,"nodeType":"1661","messageId":"1662","endLine":16,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1782","line":18,"column":10,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":24},{"ruleId":"1659","severity":1,"message":"1669","line":83,"column":13,"nodeType":"1661","messageId":"1662","endLine":83,"endColumn":21},{"ruleId":"1671","severity":1,"message":"1672","line":93,"column":5,"nodeType":"1673","endLine":93,"endColumn":48},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1668","line":6,"column":8,"nodeType":"1661","messageId":"1662","endLine":6,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1783","line":89,"column":14,"nodeType":"1661","messageId":"1662","endLine":89,"endColumn":22},{"ruleId":"1688","severity":1,"message":"1689","line":94,"column":66,"nodeType":"1690","messageId":"1691","endLine":94,"endColumn":68},{"ruleId":"1659","severity":1,"message":"1784","line":184,"column":11,"nodeType":"1661","messageId":"1662","endLine":184,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1785","line":232,"column":11,"nodeType":"1661","messageId":"1662","endLine":232,"endColumn":18},{"ruleId":"1659","severity":1,"message":"1786","line":340,"column":13,"nodeType":"1661","messageId":"1662","endLine":340,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1787","line":341,"column":24,"nodeType":"1661","messageId":"1662","endLine":341,"endColumn":32},{"ruleId":"1659","severity":1,"message":"1747","line":341,"column":101,"nodeType":"1661","messageId":"1662","endLine":341,"endColumn":114},{"ruleId":"1788","severity":1,"message":"1789","line":342,"column":7,"nodeType":"1790","messageId":"1791","endLine":342,"endColumn":55},{"ruleId":"1671","severity":1,"message":"1672","line":349,"column":5,"nodeType":"1673","endLine":349,"endColumn":48},{"ruleId":"1688","severity":1,"message":"1689","line":424,"column":35,"nodeType":"1690","messageId":"1691","endLine":424,"endColumn":37},{"ruleId":"1706","severity":1,"message":"1707","line":476,"column":53,"nodeType":"1673","messageId":"1708","endLine":476,"endColumn":176,"fix":"1792"},{"ruleId":"1793","severity":1,"message":"1794","line":653,"column":32,"nodeType":"1795","messageId":"1796","endLine":653,"endColumn":34},{"ruleId":"1793","severity":1,"message":"1794","line":653,"column":106,"nodeType":"1795","messageId":"1796","endLine":653,"endColumn":108},{"ruleId":"1793","severity":1,"message":"1794","line":668,"column":36,"nodeType":"1795","messageId":"1796","endLine":668,"endColumn":38},{"ruleId":"1793","severity":1,"message":"1794","line":668,"column":110,"nodeType":"1795","messageId":"1796","endLine":668,"endColumn":112},{"ruleId":"1706","severity":1,"message":"1707","line":694,"column":19,"nodeType":"1673","messageId":"1708","endLine":694,"endColumn":154,"fix":"1797"},{"ruleId":"1688","severity":1,"message":"1689","line":740,"column":33,"nodeType":"1690","messageId":"1691","endLine":740,"endColumn":35},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1674","line":3,"column":10,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1675","line":11,"column":8,"nodeType":"1661","messageId":"1662","endLine":11,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1676","line":14,"column":8,"nodeType":"1661","messageId":"1662","endLine":14,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1677","line":17,"column":8,"nodeType":"1661","messageId":"1662","endLine":17,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1721","line":18,"column":10,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":18},{"ruleId":"1659","severity":1,"message":"1728","line":18,"column":20,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":23},{"ruleId":"1659","severity":1,"message":"1798","line":18,"column":40,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":49},{"ruleId":"1659","severity":1,"message":"1725","line":18,"column":51,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":62},{"ruleId":"1659","severity":1,"message":"1738","line":18,"column":64,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":74},{"ruleId":"1659","severity":1,"message":"1726","line":18,"column":75,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":79},{"ruleId":"1688","severity":1,"message":"1689","line":106,"column":36,"nodeType":"1690","messageId":"1691","endLine":106,"endColumn":38},{"ruleId":"1688","severity":1,"message":"1689","line":122,"column":40,"nodeType":"1690","messageId":"1691","endLine":122,"endColumn":42},{"ruleId":"1659","severity":1,"message":"1669","line":156,"column":13,"nodeType":"1661","messageId":"1662","endLine":156,"endColumn":21},{"ruleId":"1671","severity":1,"message":"1672","line":166,"column":5,"nodeType":"1673","endLine":166,"endColumn":48},{"ruleId":"1715","severity":1,"message":"1716","line":228,"column":50,"nodeType":"1673","endLine":231,"endColumn":12},{"ruleId":"1688","severity":1,"message":"1689","line":270,"column":35,"nodeType":"1690","messageId":"1691","endLine":270,"endColumn":37},{"ruleId":"1692","severity":1,"message":"1799","line":287,"column":46,"nodeType":"1694","messageId":"1800","endLine":287,"endColumn":48},{"ruleId":"1688","severity":1,"message":"1689","line":290,"column":44,"nodeType":"1690","messageId":"1691","endLine":290,"endColumn":46},{"ruleId":"1688","severity":1,"message":"1689","line":339,"column":37,"nodeType":"1690","messageId":"1691","endLine":339,"endColumn":39},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1674","line":3,"column":10,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1718","line":3,"column":16,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":26},{"ruleId":"1659","severity":1,"message":"1801","line":5,"column":8,"nodeType":"1661","messageId":"1662","endLine":5,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1802","line":6,"column":8,"nodeType":"1661","messageId":"1662","endLine":6,"endColumn":15},{"ruleId":"1659","severity":1,"message":"1722","line":16,"column":3,"nodeType":"1661","messageId":"1662","endLine":16,"endColumn":6},{"ruleId":"1659","severity":1,"message":"1723","line":17,"column":3,"nodeType":"1661","messageId":"1662","endLine":17,"endColumn":6},{"ruleId":"1659","severity":1,"message":"1724","line":18,"column":3,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":7},{"ruleId":"1659","severity":1,"message":"1725","line":19,"column":3,"nodeType":"1661","messageId":"1662","endLine":19,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1727","line":22,"column":3,"nodeType":"1661","messageId":"1662","endLine":22,"endColumn":6},{"ruleId":"1659","severity":1,"message":"1728","line":23,"column":3,"nodeType":"1661","messageId":"1662","endLine":23,"endColumn":6},{"ruleId":"1756","severity":1,"message":"1803","line":71,"column":9,"nodeType":"1661","messageId":"1758","endLine":71,"endColumn":10},{"ruleId":"1688","severity":1,"message":"1689","line":90,"column":35,"nodeType":"1690","messageId":"1691","endLine":90,"endColumn":37},{"ruleId":"1671","severity":1,"message":"1672","line":123,"column":20,"nodeType":"1673","endLine":123,"endColumn":81},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1674","line":3,"column":10,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1675","line":9,"column":8,"nodeType":"1661","messageId":"1662","endLine":9,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1676","line":12,"column":8,"nodeType":"1661","messageId":"1662","endLine":12,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1677","line":15,"column":8,"nodeType":"1661","messageId":"1662","endLine":15,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1728","line":16,"column":20,"nodeType":"1661","messageId":"1662","endLine":16,"endColumn":23},{"ruleId":"1659","severity":1,"message":"1798","line":16,"column":40,"nodeType":"1661","messageId":"1662","endLine":16,"endColumn":49},{"ruleId":"1659","severity":1,"message":"1678","line":17,"column":33,"nodeType":"1661","messageId":"1662","endLine":17,"endColumn":56},{"ruleId":"1659","severity":1,"message":"1686","line":18,"column":25,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":37},{"ruleId":"1659","severity":1,"message":"1687","line":20,"column":37,"nodeType":"1661","messageId":"1662","endLine":20,"endColumn":48},{"ruleId":"1659","severity":1,"message":"1804","line":20,"column":50,"nodeType":"1661","messageId":"1662","endLine":20,"endColumn":70},{"ruleId":"1688","severity":1,"message":"1689","line":219,"column":22,"nodeType":"1690","messageId":"1691","endLine":219,"endColumn":24},{"ruleId":"1688","severity":1,"message":"1689","line":239,"column":24,"nodeType":"1690","messageId":"1691","endLine":239,"endColumn":26},{"ruleId":"1688","severity":1,"message":"1689","line":259,"column":24,"nodeType":"1690","messageId":"1691","endLine":259,"endColumn":26},{"ruleId":"1688","severity":1,"message":"1689","line":279,"column":33,"nodeType":"1690","messageId":"1691","endLine":279,"endColumn":35},{"ruleId":"1688","severity":1,"message":"1689","line":279,"column":66,"nodeType":"1690","messageId":"1691","endLine":279,"endColumn":68},{"ruleId":"1688","severity":1,"message":"1689","line":279,"column":97,"nodeType":"1690","messageId":"1691","endLine":279,"endColumn":99},{"ruleId":"1659","severity":1,"message":"1669","line":306,"column":13,"nodeType":"1661","messageId":"1662","endLine":306,"endColumn":21},{"ruleId":"1671","severity":1,"message":"1672","line":316,"column":5,"nodeType":"1673","endLine":316,"endColumn":48},{"ruleId":"1702","severity":1,"message":"1703","line":397,"column":29,"nodeType":"1704","messageId":"1705","endLine":397,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":404,"column":29,"nodeType":"1704","messageId":"1705","endLine":404,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":412,"column":21,"nodeType":"1704","messageId":"1705","endLine":412,"endColumn":41},{"ruleId":"1702","severity":1,"message":"1703","line":430,"column":21,"nodeType":"1704","messageId":"1705","endLine":430,"endColumn":41},{"ruleId":"1702","severity":1,"message":"1703","line":651,"column":29,"nodeType":"1704","messageId":"1705","endLine":651,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":657,"column":29,"nodeType":"1704","messageId":"1705","endLine":657,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":663,"column":29,"nodeType":"1704","messageId":"1705","endLine":663,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":669,"column":29,"nodeType":"1704","messageId":"1705","endLine":669,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":692,"column":21,"nodeType":"1704","messageId":"1705","endLine":692,"endColumn":41},{"ruleId":"1702","severity":1,"message":"1703","line":729,"column":29,"nodeType":"1704","messageId":"1705","endLine":729,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":735,"column":29,"nodeType":"1704","messageId":"1705","endLine":735,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":741,"column":29,"nodeType":"1704","messageId":"1705","endLine":741,"endColumn":49},{"ruleId":"1702","severity":1,"message":"1703","line":747,"column":21,"nodeType":"1704","messageId":"1705","endLine":747,"endColumn":41},{"ruleId":"1671","severity":1,"message":"1672","line":769,"column":5,"nodeType":"1673","endLine":769,"endColumn":57},{"ruleId":"1805","severity":1,"message":"1806","line":773,"column":10,"nodeType":"1807","messageId":"1808","endLine":773,"endColumn":30,"fix":"1809"},{"ruleId":"1715","severity":1,"message":"1716","line":807,"column":9,"nodeType":"1673","endLine":807,"endColumn":96},{"ruleId":"1671","severity":1,"message":"1672","line":817,"column":5,"nodeType":"1673","endLine":817,"endColumn":57},{"ruleId":"1805","severity":1,"message":"1806","line":821,"column":10,"nodeType":"1807","messageId":"1808","endLine":821,"endColumn":30,"fix":"1810"},{"ruleId":"1715","severity":1,"message":"1716","line":863,"column":9,"nodeType":"1673","endLine":863,"endColumn":96},{"ruleId":"1688","severity":1,"message":"1689","line":925,"column":28,"nodeType":"1690","messageId":"1691","endLine":925,"endColumn":30},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1668","line":6,"column":8,"nodeType":"1661","messageId":"1662","endLine":6,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1734","line":8,"column":8,"nodeType":"1661","messageId":"1662","endLine":8,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1739","line":20,"column":22,"nodeType":"1661","messageId":"1662","endLine":20,"endColumn":33},{"ruleId":"1659","severity":1,"message":"1738","line":20,"column":35,"nodeType":"1661","messageId":"1662","endLine":20,"endColumn":45},{"ruleId":"1659","severity":1,"message":"1721","line":20,"column":47,"nodeType":"1661","messageId":"1662","endLine":20,"endColumn":55},{"ruleId":"1659","severity":1,"message":"1728","line":20,"column":57,"nodeType":"1661","messageId":"1662","endLine":20,"endColumn":60},{"ruleId":"1659","severity":1,"message":"1726","line":20,"column":62,"nodeType":"1661","messageId":"1662","endLine":20,"endColumn":66},{"ruleId":"1659","severity":1,"message":"1735","line":24,"column":8,"nodeType":"1661","messageId":"1662","endLine":24,"endColumn":13},{"ruleId":"1659","severity":1,"message":"1677","line":25,"column":8,"nodeType":"1661","messageId":"1662","endLine":25,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1674","line":26,"column":10,"nodeType":"1661","messageId":"1662","endLine":26,"endColumn":14},{"ruleId":"1671","severity":1,"message":"1672","line":169,"column":5,"nodeType":"1673","endLine":169,"endColumn":48},{"ruleId":"1671","severity":1,"message":"1672","line":231,"column":21,"nodeType":"1673","endLine":231,"endColumn":64},{"ruleId":"1671","severity":1,"message":"1672","line":235,"column":21,"nodeType":"1673","endLine":235,"endColumn":65},{"ruleId":"1688","severity":1,"message":"1689","line":247,"column":62,"nodeType":"1690","messageId":"1691","endLine":247,"endColumn":64},{"ruleId":"1671","severity":1,"message":"1672","line":378,"column":2,"nodeType":"1673","endLine":378,"endColumn":51},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1674","line":3,"column":10,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1767","line":5,"column":17,"nodeType":"1661","messageId":"1662","endLine":5,"endColumn":24},{"ruleId":"1659","severity":1,"message":"1668","line":9,"column":8,"nodeType":"1661","messageId":"1662","endLine":9,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1679","line":21,"column":3,"nodeType":"1661","messageId":"1662","endLine":21,"endColumn":15},{"ruleId":"1659","severity":1,"message":"1680","line":22,"column":3,"nodeType":"1661","messageId":"1662","endLine":22,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1719","line":23,"column":3,"nodeType":"1661","messageId":"1662","endLine":23,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1720","line":24,"column":3,"nodeType":"1661","messageId":"1662","endLine":24,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1682","line":25,"column":3,"nodeType":"1661","messageId":"1662","endLine":25,"endColumn":13},{"ruleId":"1659","severity":1,"message":"1721","line":29,"column":3,"nodeType":"1661","messageId":"1662","endLine":29,"endColumn":11},{"ruleId":"1659","severity":1,"message":"1722","line":30,"column":3,"nodeType":"1661","messageId":"1662","endLine":30,"endColumn":6},{"ruleId":"1659","severity":1,"message":"1723","line":31,"column":3,"nodeType":"1661","messageId":"1662","endLine":31,"endColumn":6},{"ruleId":"1659","severity":1,"message":"1724","line":32,"column":3,"nodeType":"1661","messageId":"1662","endLine":32,"endColumn":7},{"ruleId":"1659","severity":1,"message":"1725","line":33,"column":3,"nodeType":"1661","messageId":"1662","endLine":33,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1738","line":34,"column":3,"nodeType":"1661","messageId":"1662","endLine":34,"endColumn":13},{"ruleId":"1659","severity":1,"message":"1726","line":35,"column":3,"nodeType":"1661","messageId":"1662","endLine":35,"endColumn":7},{"ruleId":"1659","severity":1,"message":"1727","line":36,"column":3,"nodeType":"1661","messageId":"1662","endLine":36,"endColumn":6},{"ruleId":"1659","severity":1,"message":"1728","line":37,"column":3,"nodeType":"1661","messageId":"1662","endLine":37,"endColumn":6},{"ruleId":"1659","severity":1,"message":"1739","line":38,"column":3,"nodeType":"1661","messageId":"1662","endLine":38,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1740","line":41,"column":10,"nodeType":"1661","messageId":"1662","endLine":41,"endColumn":22},{"ruleId":"1688","severity":1,"message":"1811","line":72,"column":43,"nodeType":"1690","messageId":"1691","endLine":72,"endColumn":45},{"ruleId":"1688","severity":1,"message":"1689","line":116,"column":29,"nodeType":"1690","messageId":"1691","endLine":116,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1669","line":147,"column":11,"nodeType":"1661","messageId":"1662","endLine":147,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1729","line":150,"column":7,"nodeType":"1661","messageId":"1662","endLine":150,"endColumn":17},{"ruleId":"1659","severity":1,"message":"1699","line":151,"column":7,"nodeType":"1661","messageId":"1662","endLine":151,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1700","line":152,"column":7,"nodeType":"1661","messageId":"1662","endLine":152,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1730","line":153,"column":7,"nodeType":"1661","messageId":"1662","endLine":153,"endColumn":13},{"ruleId":"1659","severity":1,"message":"1731","line":154,"column":7,"nodeType":"1661","messageId":"1662","endLine":154,"endColumn":15},{"ruleId":"1659","severity":1,"message":"1732","line":155,"column":7,"nodeType":"1661","messageId":"1662","endLine":155,"endColumn":17},{"ruleId":"1659","severity":1,"message":"1701","line":156,"column":7,"nodeType":"1661","messageId":"1662","endLine":156,"endColumn":18},{"ruleId":"1671","severity":1,"message":"1672","line":163,"column":11,"nodeType":"1673","endLine":163,"endColumn":54},{"ruleId":"1706","severity":1,"message":"1707","line":248,"column":23,"nodeType":"1673","messageId":"1708","endLine":248,"endColumn":71,"fix":"1812"},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1674","line":3,"column":10,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1813","line":9,"column":8,"nodeType":"1661","messageId":"1662","endLine":9,"endColumn":24},{"ruleId":"1659","severity":1,"message":"1675","line":12,"column":8,"nodeType":"1661","messageId":"1662","endLine":12,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1676","line":15,"column":8,"nodeType":"1661","messageId":"1662","endLine":15,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1677","line":18,"column":8,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1721","line":19,"column":10,"nodeType":"1661","messageId":"1662","endLine":19,"endColumn":18},{"ruleId":"1659","severity":1,"message":"1728","line":19,"column":20,"nodeType":"1661","messageId":"1662","endLine":19,"endColumn":23},{"ruleId":"1659","severity":1,"message":"1798","line":19,"column":40,"nodeType":"1661","messageId":"1662","endLine":19,"endColumn":49},{"ruleId":"1659","severity":1,"message":"1725","line":19,"column":51,"nodeType":"1661","messageId":"1662","endLine":19,"endColumn":62},{"ruleId":"1659","severity":1,"message":"1738","line":19,"column":64,"nodeType":"1661","messageId":"1662","endLine":19,"endColumn":74},{"ruleId":"1659","severity":1,"message":"1726","line":19,"column":75,"nodeType":"1661","messageId":"1662","endLine":19,"endColumn":79},{"ruleId":"1688","severity":1,"message":"1689","line":71,"column":32,"nodeType":"1690","messageId":"1691","endLine":71,"endColumn":34},{"ruleId":"1688","severity":1,"message":"1689","line":71,"column":65,"nodeType":"1690","messageId":"1691","endLine":71,"endColumn":67},{"ruleId":"1688","severity":1,"message":"1689","line":117,"column":36,"nodeType":"1690","messageId":"1691","endLine":117,"endColumn":38},{"ruleId":"1688","severity":1,"message":"1689","line":132,"column":40,"nodeType":"1690","messageId":"1691","endLine":132,"endColumn":42},{"ruleId":"1659","severity":1,"message":"1669","line":156,"column":13,"nodeType":"1661","messageId":"1662","endLine":156,"endColumn":21},{"ruleId":"1659","severity":1,"message":"1814","line":158,"column":32,"nodeType":"1661","messageId":"1662","endLine":158,"endColumn":48},{"ruleId":"1671","severity":1,"message":"1672","line":166,"column":5,"nodeType":"1673","endLine":166,"endColumn":48},{"ruleId":"1715","severity":1,"message":"1716","line":244,"column":50,"nodeType":"1673","endLine":246,"endColumn":54},{"ruleId":"1688","severity":1,"message":"1689","line":294,"column":35,"nodeType":"1690","messageId":"1691","endLine":294,"endColumn":37},{"ruleId":"1692","severity":1,"message":"1799","line":300,"column":46,"nodeType":"1694","messageId":"1800","endLine":300,"endColumn":48},{"ruleId":"1688","severity":1,"message":"1689","line":303,"column":44,"nodeType":"1690","messageId":"1691","endLine":303,"endColumn":46},{"ruleId":"1688","severity":1,"message":"1689","line":321,"column":37,"nodeType":"1690","messageId":"1691","endLine":321,"endColumn":39},{"ruleId":"1688","severity":1,"message":"1689","line":327,"column":29,"nodeType":"1690","messageId":"1691","endLine":327,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1674","line":3,"column":10,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1675","line":12,"column":8,"nodeType":"1661","messageId":"1662","endLine":12,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1676","line":15,"column":8,"nodeType":"1661","messageId":"1662","endLine":15,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1677","line":18,"column":8,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1721","line":19,"column":10,"nodeType":"1661","messageId":"1662","endLine":19,"endColumn":18},{"ruleId":"1659","severity":1,"message":"1728","line":19,"column":20,"nodeType":"1661","messageId":"1662","endLine":19,"endColumn":23},{"ruleId":"1659","severity":1,"message":"1798","line":19,"column":40,"nodeType":"1661","messageId":"1662","endLine":19,"endColumn":49},{"ruleId":"1659","severity":1,"message":"1725","line":19,"column":51,"nodeType":"1661","messageId":"1662","endLine":19,"endColumn":62},{"ruleId":"1659","severity":1,"message":"1738","line":19,"column":64,"nodeType":"1661","messageId":"1662","endLine":19,"endColumn":74},{"ruleId":"1659","severity":1,"message":"1726","line":19,"column":75,"nodeType":"1661","messageId":"1662","endLine":19,"endColumn":79},{"ruleId":"1688","severity":1,"message":"1689","line":87,"column":36,"nodeType":"1690","messageId":"1691","endLine":87,"endColumn":38},{"ruleId":"1688","severity":1,"message":"1689","line":102,"column":40,"nodeType":"1690","messageId":"1691","endLine":102,"endColumn":42},{"ruleId":"1659","severity":1,"message":"1669","line":152,"column":13,"nodeType":"1661","messageId":"1662","endLine":152,"endColumn":21},{"ruleId":"1671","severity":1,"message":"1672","line":162,"column":5,"nodeType":"1673","endLine":162,"endColumn":48},{"ruleId":"1715","severity":1,"message":"1716","line":230,"column":50,"nodeType":"1673","endLine":234,"endColumn":11},{"ruleId":"1688","severity":1,"message":"1689","line":274,"column":35,"nodeType":"1690","messageId":"1691","endLine":274,"endColumn":37},{"ruleId":"1692","severity":1,"message":"1799","line":280,"column":46,"nodeType":"1694","messageId":"1800","endLine":280,"endColumn":48},{"ruleId":"1688","severity":1,"message":"1689","line":283,"column":44,"nodeType":"1690","messageId":"1691","endLine":283,"endColumn":46},{"ruleId":"1688","severity":1,"message":"1689","line":301,"column":37,"nodeType":"1690","messageId":"1691","endLine":301,"endColumn":39},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1668","line":6,"column":8,"nodeType":"1661","messageId":"1662","endLine":6,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1742","line":16,"column":59,"nodeType":"1661","messageId":"1662","endLine":16,"endColumn":65},{"ruleId":"1659","severity":1,"message":"1815","line":21,"column":30,"nodeType":"1661","messageId":"1662","endLine":21,"endColumn":42},{"ruleId":"1659","severity":1,"message":"1743","line":21,"column":80,"nodeType":"1661","messageId":"1662","endLine":21,"endColumn":93},{"ruleId":"1659","severity":1,"message":"1816","line":21,"column":186,"nodeType":"1661","messageId":"1662","endLine":21,"endColumn":197},{"ruleId":"1659","severity":1,"message":"1783","line":88,"column":14,"nodeType":"1661","messageId":"1662","endLine":88,"endColumn":22},{"ruleId":"1688","severity":1,"message":"1689","line":93,"column":66,"nodeType":"1690","messageId":"1691","endLine":93,"endColumn":68},{"ruleId":"1659","severity":1,"message":"1784","line":236,"column":11,"nodeType":"1661","messageId":"1662","endLine":236,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1785","line":298,"column":11,"nodeType":"1661","messageId":"1662","endLine":298,"endColumn":18},{"ruleId":"1688","severity":1,"message":"1811","line":429,"column":36,"nodeType":"1690","messageId":"1691","endLine":429,"endColumn":38},{"ruleId":"1659","severity":1,"message":"1786","line":441,"column":13,"nodeType":"1661","messageId":"1662","endLine":441,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1747","line":446,"column":90,"nodeType":"1661","messageId":"1662","endLine":446,"endColumn":103},{"ruleId":"1671","severity":1,"message":"1672","line":452,"column":5,"nodeType":"1673","endLine":452,"endColumn":48},{"ruleId":"1688","severity":1,"message":"1689","line":526,"column":35,"nodeType":"1690","messageId":"1691","endLine":526,"endColumn":37},{"ruleId":"1793","severity":1,"message":"1794","line":739,"column":32,"nodeType":"1795","messageId":"1796","endLine":739,"endColumn":34},{"ruleId":"1793","severity":1,"message":"1794","line":739,"column":106,"nodeType":"1795","messageId":"1796","endLine":739,"endColumn":108},{"ruleId":"1793","severity":1,"message":"1794","line":754,"column":36,"nodeType":"1795","messageId":"1796","endLine":754,"endColumn":38},{"ruleId":"1793","severity":1,"message":"1794","line":754,"column":110,"nodeType":"1795","messageId":"1796","endLine":754,"endColumn":112},{"ruleId":"1706","severity":1,"message":"1707","line":781,"column":19,"nodeType":"1673","messageId":"1708","endLine":781,"endColumn":153,"fix":"1817"},{"ruleId":"1688","severity":1,"message":"1689","line":838,"column":33,"nodeType":"1690","messageId":"1691","endLine":838,"endColumn":35},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1668","line":7,"column":8,"nodeType":"1661","messageId":"1662","endLine":7,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1734","line":9,"column":8,"nodeType":"1661","messageId":"1662","endLine":9,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1767","line":11,"column":17,"nodeType":"1661","messageId":"1662","endLine":11,"endColumn":24},{"ruleId":"1659","severity":1,"message":"1721","line":18,"column":47,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":55},{"ruleId":"1659","severity":1,"message":"1726","line":18,"column":62,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":66},{"ruleId":"1659","severity":1,"message":"1735","line":22,"column":8,"nodeType":"1661","messageId":"1662","endLine":22,"endColumn":13},{"ruleId":"1659","severity":1,"message":"1677","line":23,"column":8,"nodeType":"1661","messageId":"1662","endLine":23,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1674","line":24,"column":10,"nodeType":"1661","messageId":"1662","endLine":24,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1680","line":28,"column":10,"nodeType":"1661","messageId":"1662","endLine":28,"endColumn":27},{"ruleId":"1671","severity":1,"message":"1672","line":224,"column":5,"nodeType":"1673","endLine":224,"endColumn":48},{"ruleId":"1671","severity":1,"message":"1672","line":504,"column":9,"nodeType":"1673","endLine":504,"endColumn":58},{"ruleId":"1671","severity":1,"message":"1672","line":661,"column":9,"nodeType":"1673","endLine":661,"endColumn":58},{"ruleId":"1671","severity":1,"message":"1672","line":813,"column":9,"nodeType":"1673","endLine":813,"endColumn":58},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1674","line":4,"column":10,"nodeType":"1661","messageId":"1662","endLine":4,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1734","line":6,"column":8,"nodeType":"1661","messageId":"1662","endLine":6,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1818","line":7,"column":8,"nodeType":"1661","messageId":"1662","endLine":7,"endColumn":21},{"ruleId":"1659","severity":1,"message":"1685","line":11,"column":34,"nodeType":"1661","messageId":"1662","endLine":11,"endColumn":44},{"ruleId":"1692","severity":1,"message":"1693","line":174,"column":33,"nodeType":"1694","messageId":"1695","endLine":174,"endColumn":35},{"ruleId":"1688","severity":1,"message":"1689","line":175,"column":28,"nodeType":"1690","messageId":"1691","endLine":175,"endColumn":30},{"ruleId":"1688","severity":1,"message":"1689","line":175,"column":61,"nodeType":"1690","messageId":"1691","endLine":175,"endColumn":63},{"ruleId":"1688","severity":1,"message":"1689","line":175,"column":94,"nodeType":"1690","messageId":"1691","endLine":175,"endColumn":96},{"ruleId":"1688","severity":1,"message":"1689","line":178,"column":28,"nodeType":"1690","messageId":"1691","endLine":178,"endColumn":30},{"ruleId":"1688","severity":1,"message":"1689","line":178,"column":60,"nodeType":"1690","messageId":"1691","endLine":178,"endColumn":62},{"ruleId":"1688","severity":1,"message":"1689","line":181,"column":28,"nodeType":"1690","messageId":"1691","endLine":181,"endColumn":30},{"ruleId":"1688","severity":1,"message":"1689","line":181,"column":61,"nodeType":"1690","messageId":"1691","endLine":181,"endColumn":63},{"ruleId":"1659","severity":1,"message":"1669","line":213,"column":12,"nodeType":"1661","messageId":"1662","endLine":213,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1717","line":214,"column":12,"nodeType":"1661","messageId":"1662","endLine":214,"endColumn":23},{"ruleId":"1659","severity":1,"message":"1701","line":214,"column":24,"nodeType":"1661","messageId":"1662","endLine":214,"endColumn":35},{"ruleId":"1659","severity":1,"message":"1819","line":214,"column":37,"nodeType":"1661","messageId":"1662","endLine":214,"endColumn":50},{"ruleId":"1659","severity":1,"message":"1820","line":214,"column":65,"nodeType":"1661","messageId":"1662","endLine":214,"endColumn":74},{"ruleId":"1671","severity":1,"message":"1672","line":229,"column":17,"nodeType":"1673","endLine":229,"endColumn":64},{"ruleId":"1671","severity":1,"message":"1672","line":243,"column":17,"nodeType":"1673","endLine":243,"endColumn":69},{"ruleId":"1671","severity":1,"message":"1672","line":293,"column":17,"nodeType":"1673","endLine":293,"endColumn":67},{"ruleId":"1671","severity":1,"message":"1672","line":330,"column":17,"nodeType":"1673","endLine":330,"endColumn":66},{"ruleId":"1671","severity":1,"message":"1672","line":373,"column":17,"nodeType":"1673","endLine":373,"endColumn":68},{"ruleId":"1671","severity":1,"message":"1672","line":383,"column":17,"nodeType":"1673","endLine":383,"endColumn":63},{"ruleId":"1671","severity":1,"message":"1672","line":393,"column":17,"nodeType":"1673","endLine":393,"endColumn":65},{"ruleId":"1715","severity":1,"message":"1821","line":401,"column":17,"nodeType":"1673","endLine":401,"endColumn":55},{"ruleId":"1671","severity":1,"message":"1672","line":404,"column":17,"nodeType":"1673","endLine":404,"endColumn":64},{"ruleId":"1706","severity":1,"message":"1707","line":412,"column":17,"nodeType":"1673","messageId":"1708","endLine":412,"endColumn":102,"fix":"1822"},{"ruleId":"1671","severity":1,"message":"1672","line":415,"column":17,"nodeType":"1673","endLine":415,"endColumn":68},{"ruleId":"1706","severity":1,"message":"1707","line":423,"column":17,"nodeType":"1673","messageId":"1708","endLine":423,"endColumn":101,"fix":"1823"},{"ruleId":"1671","severity":1,"message":"1672","line":426,"column":17,"nodeType":"1673","endLine":426,"endColumn":67},{"ruleId":"1706","severity":1,"message":"1707","line":434,"column":17,"nodeType":"1673","messageId":"1708","endLine":434,"endColumn":102,"fix":"1824"},{"ruleId":"1671","severity":1,"message":"1672","line":437,"column":17,"nodeType":"1673","endLine":437,"endColumn":62},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1721","line":3,"column":10,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":18},{"ruleId":"1659","severity":1,"message":"1825","line":11,"column":10,"nodeType":"1661","messageId":"1662","endLine":11,"endColumn":24},{"ruleId":"1659","severity":1,"message":"1826","line":11,"column":27,"nodeType":"1661","messageId":"1662","endLine":11,"endColumn":39},{"ruleId":"1659","severity":1,"message":"1685","line":12,"column":34,"nodeType":"1661","messageId":"1662","endLine":12,"endColumn":44},{"ruleId":"1659","severity":1,"message":"1827","line":14,"column":8,"nodeType":"1661","messageId":"1662","endLine":14,"endColumn":11},{"ruleId":"1659","severity":1,"message":"1828","line":15,"column":8,"nodeType":"1661","messageId":"1662","endLine":15,"endColumn":18},{"ruleId":"1659","severity":1,"message":"1684","line":18,"column":10,"nodeType":"1661","messageId":"1662","endLine":18,"endColumn":16},{"ruleId":"1659","severity":1,"message":"1829","line":20,"column":8,"nodeType":"1661","messageId":"1662","endLine":20,"endColumn":11},{"ruleId":"1659","severity":1,"message":"1830","line":21,"column":8,"nodeType":"1661","messageId":"1662","endLine":21,"endColumn":15},{"ruleId":"1659","severity":1,"message":"1831","line":23,"column":8,"nodeType":"1661","messageId":"1662","endLine":23,"endColumn":16},{"ruleId":"1659","severity":1,"message":"1737","line":26,"column":10,"nodeType":"1661","messageId":"1662","endLine":26,"endColumn":20},{"ruleId":"1688","severity":1,"message":"1689","line":262,"column":27,"nodeType":"1690","messageId":"1691","endLine":262,"endColumn":29},{"ruleId":"1688","severity":1,"message":"1689","line":312,"column":27,"nodeType":"1690","messageId":"1691","endLine":312,"endColumn":29},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1832","line":7,"column":8,"nodeType":"1661","messageId":"1662","endLine":7,"endColumn":13},{"ruleId":"1659","severity":1,"message":"1675","line":10,"column":8,"nodeType":"1661","messageId":"1662","endLine":10,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1833","line":4,"column":10,"nodeType":"1661","messageId":"1662","endLine":4,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1834","line":4,"column":21,"nodeType":"1661","messageId":"1662","endLine":4,"endColumn":43},{"ruleId":"1659","severity":1,"message":"1835","line":5,"column":10,"nodeType":"1661","messageId":"1662","endLine":5,"endColumn":32},{"ruleId":"1659","severity":1,"message":"1767","line":2,"column":17,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":24},{"ruleId":"1659","severity":1,"message":"1664","line":3,"column":10,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":3,"column":22,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":3,"column":33,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1726","line":4,"column":34,"nodeType":"1661","messageId":"1662","endLine":4,"endColumn":38},{"ruleId":"1659","severity":1,"message":"1836","line":10,"column":66,"nodeType":"1661","messageId":"1662","endLine":10,"endColumn":80},{"ruleId":"1659","severity":1,"message":"1674","line":14,"column":10,"nodeType":"1661","messageId":"1662","endLine":14,"endColumn":14},{"ruleId":"1696","severity":1,"message":"1837","line":79,"column":13,"nodeType":"1698","messageId":"1691","endLine":79,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1838","line":105,"column":13,"nodeType":"1661","messageId":"1662","endLine":105,"endColumn":14},{"ruleId":"1770","severity":1,"message":"1839","line":176,"column":48,"nodeType":"1772","messageId":"1773","endLine":176,"endColumn":91,"fix":"1840"},{"ruleId":"1692","severity":1,"message":"1693","line":215,"column":26,"nodeType":"1694","messageId":"1695","endLine":215,"endColumn":28},{"ruleId":"1688","severity":1,"message":"1689","line":216,"column":28,"nodeType":"1690","messageId":"1691","endLine":216,"endColumn":30},{"ruleId":"1688","severity":1,"message":"1689","line":216,"column":55,"nodeType":"1690","messageId":"1691","endLine":216,"endColumn":57},{"ruleId":"1688","severity":1,"message":"1811","line":216,"column":85,"nodeType":"1690","messageId":"1691","endLine":216,"endColumn":87},{"ruleId":"1688","severity":1,"message":"1689","line":217,"column":37,"nodeType":"1690","messageId":"1691","endLine":217,"endColumn":39},{"ruleId":"1688","severity":1,"message":"1689","line":217,"column":64,"nodeType":"1690","messageId":"1691","endLine":217,"endColumn":66},{"ruleId":"1688","severity":1,"message":"1689","line":336,"column":32,"nodeType":"1690","messageId":"1691","endLine":336,"endColumn":34},{"ruleId":"1688","severity":1,"message":"1689","line":449,"column":55,"nodeType":"1690","messageId":"1691","endLine":449,"endColumn":57},{"ruleId":"1688","severity":1,"message":"1689","line":465,"column":32,"nodeType":"1690","messageId":"1691","endLine":465,"endColumn":34},{"ruleId":"1688","severity":1,"message":"1689","line":467,"column":55,"nodeType":"1690","messageId":"1691","endLine":467,"endColumn":57},{"ruleId":"1688","severity":1,"message":"1689","line":483,"column":55,"nodeType":"1690","messageId":"1691","endLine":483,"endColumn":57},{"ruleId":"1688","severity":1,"message":"1689","line":498,"column":55,"nodeType":"1690","messageId":"1691","endLine":498,"endColumn":57},{"ruleId":"1688","severity":1,"message":"1689","line":515,"column":55,"nodeType":"1690","messageId":"1691","endLine":515,"endColumn":57},{"ruleId":"1688","severity":1,"message":"1689","line":551,"column":56,"nodeType":"1690","messageId":"1691","endLine":551,"endColumn":58},{"ruleId":"1688","severity":1,"message":"1689","line":555,"column":69,"nodeType":"1690","messageId":"1691","endLine":555,"endColumn":71},{"ruleId":"1688","severity":1,"message":"1689","line":600,"column":65,"nodeType":"1690","messageId":"1691","endLine":600,"endColumn":67},{"ruleId":"1688","severity":1,"message":"1689","line":605,"column":65,"nodeType":"1690","messageId":"1691","endLine":605,"endColumn":67},{"ruleId":"1688","severity":1,"message":"1689","line":612,"column":65,"nodeType":"1690","messageId":"1691","endLine":612,"endColumn":67},{"ruleId":"1688","severity":1,"message":"1689","line":641,"column":46,"nodeType":"1690","messageId":"1691","endLine":641,"endColumn":48},{"ruleId":"1688","severity":1,"message":"1689","line":654,"column":46,"nodeType":"1690","messageId":"1691","endLine":654,"endColumn":48},{"ruleId":"1688","severity":1,"message":"1811","line":667,"column":22,"nodeType":"1690","messageId":"1691","endLine":667,"endColumn":24},{"ruleId":"1688","severity":1,"message":"1689","line":712,"column":69,"nodeType":"1690","messageId":"1691","endLine":712,"endColumn":71},{"ruleId":"1770","severity":1,"message":"1841","line":725,"column":87,"nodeType":"1772","messageId":"1773","endLine":725,"endColumn":102,"fix":"1842"},{"ruleId":"1770","severity":1,"message":"1841","line":729,"column":87,"nodeType":"1772","messageId":"1773","endLine":729,"endColumn":121,"fix":"1843"},{"ruleId":"1770","severity":1,"message":"1844","line":770,"column":79,"nodeType":"1772","messageId":"1773","endLine":770,"endColumn":111,"fix":"1845"},{"ruleId":"1770","severity":1,"message":"1844","line":775,"column":83,"nodeType":"1772","messageId":"1773","endLine":775,"endColumn":141,"fix":"1846"},{"ruleId":"1770","severity":1,"message":"1847","line":779,"column":83,"nodeType":"1772","messageId":"1773","endLine":779,"endColumn":98,"fix":"1848"},{"ruleId":"1770","severity":1,"message":"1844","line":779,"column":101,"nodeType":"1772","messageId":"1773","endLine":779,"endColumn":116,"fix":"1849"},{"ruleId":"1770","severity":1,"message":"1844","line":783,"column":83,"nodeType":"1772","messageId":"1773","endLine":783,"endColumn":98,"fix":"1850"},{"ruleId":"1770","severity":1,"message":"1844","line":788,"column":79,"nodeType":"1772","messageId":"1773","endLine":788,"endColumn":94,"fix":"1851"},{"ruleId":"1770","severity":1,"message":"1847","line":811,"column":75,"nodeType":"1772","messageId":"1773","endLine":811,"endColumn":90,"fix":"1852"},{"ruleId":"1770","severity":1,"message":"1847","line":816,"column":79,"nodeType":"1772","messageId":"1773","endLine":816,"endColumn":111,"fix":"1853"},{"ruleId":"1770","severity":1,"message":"1847","line":821,"column":79,"nodeType":"1772","messageId":"1773","endLine":821,"endColumn":132,"fix":"1854"},{"ruleId":"1770","severity":1,"message":"1847","line":829,"column":79,"nodeType":"1772","messageId":"1773","endLine":829,"endColumn":94,"fix":"1855"},{"ruleId":"1770","severity":1,"message":"1844","line":834,"column":79,"nodeType":"1772","messageId":"1773","endLine":834,"endColumn":127,"fix":"1856"},{"ruleId":"1770","severity":1,"message":"1857","line":854,"column":75,"nodeType":"1772","messageId":"1773","endLine":854,"endColumn":86,"fix":"1858"},{"ruleId":"1770","severity":1,"message":"1857","line":858,"column":79,"nodeType":"1772","messageId":"1773","endLine":858,"endColumn":110,"fix":"1859"},{"ruleId":"1770","severity":1,"message":"1857","line":862,"column":79,"nodeType":"1772","messageId":"1773","endLine":862,"endColumn":119,"fix":"1860"},{"ruleId":"1770","severity":1,"message":"1857","line":867,"column":79,"nodeType":"1772","messageId":"1773","endLine":867,"endColumn":124,"fix":"1861"},{"ruleId":"1770","severity":1,"message":"1857","line":871,"column":79,"nodeType":"1772","messageId":"1773","endLine":871,"endColumn":90,"fix":"1862"},{"ruleId":"1770","severity":1,"message":"1863","line":890,"column":75,"nodeType":"1772","messageId":"1773","endLine":890,"endColumn":86,"fix":"1864"},{"ruleId":"1770","severity":1,"message":"1863","line":894,"column":79,"nodeType":"1772","messageId":"1773","endLine":894,"endColumn":110,"fix":"1865"},{"ruleId":"1770","severity":1,"message":"1863","line":898,"column":79,"nodeType":"1772","messageId":"1773","endLine":898,"endColumn":119,"fix":"1866"},{"ruleId":"1770","severity":1,"message":"1863","line":903,"column":83,"nodeType":"1772","messageId":"1773","endLine":903,"endColumn":128,"fix":"1867"},{"ruleId":"1770","severity":1,"message":"1863","line":907,"column":83,"nodeType":"1772","messageId":"1773","endLine":907,"endColumn":94,"fix":"1868"},{"ruleId":"1770","severity":1,"message":"1869","line":961,"column":79,"nodeType":"1772","messageId":"1773","endLine":961,"endColumn":120,"fix":"1870"},{"ruleId":"1770","severity":1,"message":"1869","line":965,"column":79,"nodeType":"1772","messageId":"1773","endLine":965,"endColumn":98,"fix":"1871"},{"ruleId":"1770","severity":1,"message":"1872","line":987,"column":79,"nodeType":"1772","messageId":"1773","endLine":987,"endColumn":148,"fix":"1873"},{"ruleId":"1770","severity":1,"message":"1872","line":991,"column":83,"nodeType":"1772","messageId":"1773","endLine":991,"endColumn":103,"fix":"1874"},{"ruleId":"1770","severity":1,"message":"1875","line":1013,"column":83,"nodeType":"1772","messageId":"1773","endLine":1013,"endColumn":132,"fix":"1876"},{"ruleId":"1770","severity":1,"message":"1875","line":1017,"column":83,"nodeType":"1772","messageId":"1773","endLine":1017,"endColumn":101,"fix":"1877"},{"ruleId":"1770","severity":1,"message":"1878","line":1061,"column":100,"nodeType":"1772","messageId":"1773","endLine":1061,"endColumn":146,"fix":"1879"},{"ruleId":"1770","severity":1,"message":"1880","line":1065,"column":100,"nodeType":"1772","messageId":"1773","endLine":1065,"endColumn":115,"fix":"1881"},{"ruleId":"1770","severity":1,"message":"1880","line":1111,"column":100,"nodeType":"1772","messageId":"1773","endLine":1111,"endColumn":144,"fix":"1882"},{"ruleId":"1770","severity":1,"message":"1878","line":1117,"column":100,"nodeType":"1772","messageId":"1773","endLine":1117,"endColumn":117,"fix":"1883"},{"ruleId":"1770","severity":1,"message":"1880","line":1119,"column":100,"nodeType":"1772","messageId":"1773","endLine":1119,"endColumn":115,"fix":"1884"},{"ruleId":"1770","severity":1,"message":"1885","line":1160,"column":79,"nodeType":"1772","messageId":"1773","endLine":1160,"endColumn":129,"fix":"1886"},{"ruleId":"1770","severity":1,"message":"1885","line":1164,"column":79,"nodeType":"1772","messageId":"1773","endLine":1164,"endColumn":100,"fix":"1887"},{"ruleId":"1770","severity":1,"message":"1888","line":1185,"column":83,"nodeType":"1772","messageId":"1773","endLine":1185,"endColumn":141,"fix":"1889"},{"ruleId":"1770","severity":1,"message":"1888","line":1189,"column":83,"nodeType":"1772","messageId":"1773","endLine":1189,"endColumn":103,"fix":"1890"},{"ruleId":"1688","severity":1,"message":"1689","line":1229,"column":67,"nodeType":"1690","messageId":"1691","endLine":1229,"endColumn":69},{"ruleId":"1770","severity":1,"message":"1891","line":1239,"column":79,"nodeType":"1772","messageId":"1773","endLine":1239,"endColumn":92,"fix":"1892"},{"ruleId":"1770","severity":1,"message":"1891","line":1243,"column":79,"nodeType":"1772","messageId":"1773","endLine":1243,"endColumn":109,"fix":"1893"},{"ruleId":"1770","severity":1,"message":"1894","line":1266,"column":79,"nodeType":"1772","messageId":"1773","endLine":1266,"endColumn":95,"fix":"1895"},{"ruleId":"1770","severity":1,"message":"1894","line":1270,"column":79,"nodeType":"1772","messageId":"1773","endLine":1270,"endColumn":115,"fix":"1896"},{"ruleId":"1770","severity":1,"message":"1897","line":1291,"column":83,"nodeType":"1772","messageId":"1773","endLine":1291,"endColumn":100,"fix":"1898"},{"ruleId":"1770","severity":1,"message":"1897","line":1295,"column":83,"nodeType":"1772","messageId":"1773","endLine":1295,"endColumn":121,"fix":"1899"},{"ruleId":"1770","severity":1,"message":"1900","line":1314,"column":79,"nodeType":"1772","messageId":"1773","endLine":1314,"endColumn":95,"fix":"1901"},{"ruleId":"1770","severity":1,"message":"1900","line":1318,"column":79,"nodeType":"1772","messageId":"1773","endLine":1318,"endColumn":115,"fix":"1902"},{"ruleId":"1770","severity":1,"message":"1903","line":1340,"column":83,"nodeType":"1772","messageId":"1773","endLine":1340,"endColumn":98,"fix":"1904"},{"ruleId":"1770","severity":1,"message":"1903","line":1344,"column":83,"nodeType":"1772","messageId":"1773","endLine":1344,"endColumn":117,"fix":"1905"},{"ruleId":"1770","severity":1,"message":"1906","line":1363,"column":79,"nodeType":"1772","messageId":"1773","endLine":1363,"endColumn":96,"fix":"1907"},{"ruleId":"1770","severity":1,"message":"1906","line":1367,"column":79,"nodeType":"1772","messageId":"1773","endLine":1367,"endColumn":117,"fix":"1908"},{"ruleId":"1770","severity":1,"message":"1909","line":1389,"column":83,"nodeType":"1772","messageId":"1773","endLine":1389,"endColumn":101,"fix":"1910"},{"ruleId":"1770","severity":1,"message":"1909","line":1393,"column":83,"nodeType":"1772","messageId":"1773","endLine":1393,"endColumn":123,"fix":"1911"},{"ruleId":"1770","severity":1,"message":"1912","line":1414,"column":83,"nodeType":"1772","messageId":"1773","endLine":1414,"endColumn":99,"fix":"1913"},{"ruleId":"1770","severity":1,"message":"1912","line":1418,"column":83,"nodeType":"1772","messageId":"1773","endLine":1418,"endColumn":119,"fix":"1914"},{"ruleId":"1770","severity":1,"message":"1915","line":1439,"column":83,"nodeType":"1772","messageId":"1773","endLine":1439,"endColumn":98,"fix":"1916"},{"ruleId":"1770","severity":1,"message":"1915","line":1443,"column":83,"nodeType":"1772","messageId":"1773","endLine":1443,"endColumn":117,"fix":"1917"},{"ruleId":"1770","severity":1,"message":"1918","line":1464,"column":83,"nodeType":"1772","messageId":"1773","endLine":1464,"endColumn":99,"fix":"1919"},{"ruleId":"1770","severity":1,"message":"1918","line":1468,"column":83,"nodeType":"1772","messageId":"1773","endLine":1468,"endColumn":125,"fix":"1920"},{"ruleId":"1770","severity":1,"message":"1921","line":1491,"column":79,"nodeType":"1772","messageId":"1773","endLine":1491,"endColumn":119,"fix":"1922"},{"ruleId":"1770","severity":1,"message":"1921","line":1495,"column":79,"nodeType":"1772","messageId":"1773","endLine":1495,"endColumn":99,"fix":"1923"},{"ruleId":"1688","severity":1,"message":"1689","line":1529,"column":68,"nodeType":"1690","messageId":"1691","endLine":1529,"endColumn":70},{"ruleId":"1715","severity":1,"message":"1821","line":1644,"column":53,"nodeType":"1673","endLine":1644,"endColumn":120},{"ruleId":"1688","severity":1,"message":"1689","line":1675,"column":49,"nodeType":"1690","messageId":"1691","endLine":1675,"endColumn":51},{"ruleId":"1715","severity":1,"message":"1716","line":1676,"column":25,"nodeType":"1673","endLine":1676,"endColumn":91},{"ruleId":"1715","severity":1,"message":"1716","line":1679,"column":47,"nodeType":"1673","endLine":1679,"endColumn":113},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1676","line":6,"column":8,"nodeType":"1661","messageId":"1662","endLine":6,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1924","line":8,"column":8,"nodeType":"1661","messageId":"1662","endLine":8,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1925","line":9,"column":8,"nodeType":"1661","messageId":"1662","endLine":9,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1926","line":10,"column":8,"nodeType":"1661","messageId":"1662","endLine":10,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1684","line":11,"column":10,"nodeType":"1661","messageId":"1662","endLine":11,"endColumn":16},{"ruleId":"1659","severity":1,"message":"1685","line":12,"column":34,"nodeType":"1661","messageId":"1662","endLine":12,"endColumn":44},{"ruleId":"1659","severity":1,"message":"1786","line":16,"column":7,"nodeType":"1661","messageId":"1662","endLine":16,"endColumn":14},{"ruleId":"1688","severity":1,"message":"1689","line":86,"column":64,"nodeType":"1690","messageId":"1691","endLine":86,"endColumn":66},{"ruleId":"1659","severity":1,"message":"1927","line":112,"column":13,"nodeType":"1661","messageId":"1662","endLine":112,"endColumn":21},{"ruleId":"1659","severity":1,"message":"1701","line":148,"column":16,"nodeType":"1661","messageId":"1662","endLine":148,"endColumn":27},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1725","line":3,"column":40,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":51},{"ruleId":"1659","severity":1,"message":"1767","line":6,"column":17,"nodeType":"1661","messageId":"1662","endLine":6,"endColumn":24},{"ruleId":"1688","severity":1,"message":"1689","line":31,"column":20,"nodeType":"1690","messageId":"1691","endLine":31,"endColumn":22},{"ruleId":"1688","severity":1,"message":"1689","line":31,"column":46,"nodeType":"1690","messageId":"1691","endLine":31,"endColumn":48},{"ruleId":"1688","severity":1,"message":"1689","line":67,"column":41,"nodeType":"1690","messageId":"1691","endLine":67,"endColumn":43},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1735","line":7,"column":8,"nodeType":"1661","messageId":"1662","endLine":7,"endColumn":13},{"ruleId":"1659","severity":1,"message":"1736","line":36,"column":17,"nodeType":"1661","messageId":"1662","endLine":36,"endColumn":23},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1739","line":3,"column":28,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":39},{"ruleId":"1659","severity":1,"message":"1725","line":3,"column":40,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":51},{"ruleId":"1659","severity":1,"message":"1928","line":22,"column":35,"nodeType":"1661","messageId":"1662","endLine":22,"endColumn":45},{"ruleId":"1688","severity":1,"message":"1689","line":46,"column":24,"nodeType":"1690","messageId":"1691","endLine":46,"endColumn":26},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1725","line":3,"column":40,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":51},{"ruleId":"1659","severity":1,"message":"1767","line":4,"column":17,"nodeType":"1661","messageId":"1662","endLine":4,"endColumn":24},{"ruleId":"1688","severity":1,"message":"1689","line":32,"column":20,"nodeType":"1690","messageId":"1691","endLine":32,"endColumn":22},{"ruleId":"1688","severity":1,"message":"1689","line":32,"column":46,"nodeType":"1690","messageId":"1691","endLine":32,"endColumn":48},{"ruleId":"1688","severity":1,"message":"1689","line":68,"column":41,"nodeType":"1690","messageId":"1691","endLine":68,"endColumn":43},{"ruleId":"1659","severity":1,"message":"1929","line":1,"column":10,"nodeType":"1661","messageId":"1662","endLine":1,"endColumn":17},{"ruleId":"1659","severity":1,"message":"1930","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":17},{"ruleId":"1659","severity":1,"message":"1684","line":2,"column":19,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":25},{"ruleId":"1688","severity":1,"message":"1689","line":24,"column":25,"nodeType":"1690","messageId":"1691","endLine":24,"endColumn":27},{"ruleId":"1688","severity":1,"message":"1689","line":25,"column":26,"nodeType":"1690","messageId":"1691","endLine":25,"endColumn":28},{"ruleId":"1688","severity":1,"message":"1689","line":25,"column":53,"nodeType":"1690","messageId":"1691","endLine":25,"endColumn":55},{"ruleId":"1688","severity":1,"message":"1689","line":26,"column":22,"nodeType":"1690","messageId":"1691","endLine":26,"endColumn":24},{"ruleId":"1659","severity":1,"message":"1931","line":1,"column":21,"nodeType":"1661","messageId":"1662","endLine":1,"endColumn":34},{"ruleId":"1659","severity":1,"message":"1932","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1933","line":3,"column":18,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1934","line":3,"column":33,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":42},{"ruleId":"1659","severity":1,"message":"1767","line":5,"column":17,"nodeType":"1661","messageId":"1662","endLine":5,"endColumn":24},{"ruleId":"1659","severity":1,"message":"1935","line":6,"column":28,"nodeType":"1661","messageId":"1662","endLine":6,"endColumn":43},{"ruleId":"1659","severity":1,"message":"1936","line":7,"column":10,"nodeType":"1661","messageId":"1662","endLine":7,"endColumn":24},{"ruleId":"1659","severity":1,"message":"1937","line":7,"column":47,"nodeType":"1661","messageId":"1662","endLine":7,"endColumn":70},{"ruleId":"1659","severity":1,"message":"1675","line":9,"column":8,"nodeType":"1661","messageId":"1662","endLine":9,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1938","line":10,"column":31,"nodeType":"1661","messageId":"1662","endLine":10,"endColumn":55},{"ruleId":"1659","severity":1,"message":"1939","line":10,"column":57,"nodeType":"1661","messageId":"1662","endLine":10,"endColumn":87},{"ruleId":"1659","severity":1,"message":"1940","line":12,"column":20,"nodeType":"1661","messageId":"1662","endLine":12,"endColumn":32},{"ruleId":"1688","severity":1,"message":"1811","line":37,"column":26,"nodeType":"1690","messageId":"1691","endLine":37,"endColumn":28},{"ruleId":"1659","severity":1,"message":"1941","line":355,"column":9,"nodeType":"1661","messageId":"1662","endLine":355,"endColumn":13},{"ruleId":"1805","severity":1,"message":"1942","line":356,"column":26,"nodeType":"1807","messageId":"1808","endLine":357,"endColumn":92,"fix":"1943"},{"ruleId":"1756","severity":1,"message":"1803","line":395,"column":13,"nodeType":"1661","messageId":"1758","endLine":395,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1944","line":446,"column":9,"nodeType":"1661","messageId":"1662","endLine":446,"endColumn":18},{"ruleId":"1805","severity":1,"message":"1942","line":456,"column":26,"nodeType":"1807","messageId":"1808","endLine":457,"endColumn":124,"fix":"1945"},{"ruleId":"1688","severity":1,"message":"1689","line":594,"column":45,"nodeType":"1690","messageId":"1691","endLine":594,"endColumn":47},{"ruleId":"1805","severity":1,"message":"1946","line":686,"column":47,"nodeType":"1807","messageId":"1808","endLine":686,"endColumn":73,"fix":"1947"},{"ruleId":"1688","severity":1,"message":"1689","line":692,"column":28,"nodeType":"1690","messageId":"1691","endLine":692,"endColumn":30},{"ruleId":"1805","severity":1,"message":"1946","line":735,"column":39,"nodeType":"1807","messageId":"1808","endLine":735,"endColumn":65,"fix":"1948"},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1735","line":7,"column":8,"nodeType":"1661","messageId":"1662","endLine":7,"endColumn":13},{"ruleId":"1659","severity":1,"message":"1949","line":1,"column":10,"nodeType":"1661","messageId":"1662","endLine":1,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1931","line":1,"column":21,"nodeType":"1661","messageId":"1662","endLine":1,"endColumn":34},{"ruleId":"1659","severity":1,"message":"1950","line":1,"column":36,"nodeType":"1661","messageId":"1662","endLine":1,"endColumn":43},{"ruleId":"1659","severity":1,"message":"1932","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1951","line":2,"column":21,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":35},{"ruleId":"1659","severity":1,"message":"1952","line":3,"column":10,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":18},{"ruleId":"1659","severity":1,"message":"1660","line":4,"column":8,"nodeType":"1661","messageId":"1662","endLine":4,"endColumn":13},{"ruleId":"1659","severity":1,"message":"1767","line":4,"column":17,"nodeType":"1661","messageId":"1662","endLine":4,"endColumn":24},{"ruleId":"1659","severity":1,"message":"1929","line":5,"column":10,"nodeType":"1661","messageId":"1662","endLine":5,"endColumn":17},{"ruleId":"1659","severity":1,"message":"1953","line":6,"column":10,"nodeType":"1661","messageId":"1662","endLine":6,"endColumn":21},{"ruleId":"1659","severity":1,"message":"1954","line":6,"column":54,"nodeType":"1661","messageId":"1662","endLine":6,"endColumn":61},{"ruleId":"1659","severity":1,"message":"1955","line":7,"column":10,"nodeType":"1661","messageId":"1662","endLine":7,"endColumn":25},{"ruleId":"1688","severity":1,"message":"1689","line":47,"column":40,"nodeType":"1690","messageId":"1691","endLine":47,"endColumn":42},{"ruleId":"1688","severity":1,"message":"1689","line":91,"column":43,"nodeType":"1690","messageId":"1691","endLine":91,"endColumn":45},{"ruleId":"1688","severity":1,"message":"1689","line":163,"column":43,"nodeType":"1690","messageId":"1691","endLine":163,"endColumn":45},{"ruleId":"1688","severity":1,"message":"1689","line":185,"column":57,"nodeType":"1690","messageId":"1691","endLine":185,"endColumn":59},{"ruleId":"1688","severity":1,"message":"1689","line":186,"column":43,"nodeType":"1690","messageId":"1691","endLine":186,"endColumn":45},{"ruleId":"1688","severity":1,"message":"1689","line":220,"column":47,"nodeType":"1690","messageId":"1691","endLine":220,"endColumn":49},{"ruleId":"1688","severity":1,"message":"1689","line":226,"column":44,"nodeType":"1690","messageId":"1691","endLine":226,"endColumn":46},{"ruleId":"1688","severity":1,"message":"1689","line":237,"column":44,"nodeType":"1690","messageId":"1691","endLine":237,"endColumn":46},{"ruleId":"1688","severity":1,"message":"1689","line":248,"column":35,"nodeType":"1690","messageId":"1691","endLine":248,"endColumn":37},{"ruleId":"1688","severity":1,"message":"1689","line":249,"column":47,"nodeType":"1690","messageId":"1691","endLine":249,"endColumn":49},{"ruleId":"1688","severity":1,"message":"1689","line":255,"column":44,"nodeType":"1690","messageId":"1691","endLine":255,"endColumn":46},{"ruleId":"1688","severity":1,"message":"1689","line":266,"column":44,"nodeType":"1690","messageId":"1691","endLine":266,"endColumn":46},{"ruleId":"1688","severity":1,"message":"1689","line":294,"column":47,"nodeType":"1690","messageId":"1691","endLine":294,"endColumn":49},{"ruleId":"1688","severity":1,"message":"1689","line":300,"column":44,"nodeType":"1690","messageId":"1691","endLine":300,"endColumn":46},{"ruleId":"1688","severity":1,"message":"1689","line":311,"column":44,"nodeType":"1690","messageId":"1691","endLine":311,"endColumn":46},{"ruleId":"1688","severity":1,"message":"1689","line":329,"column":35,"nodeType":"1690","messageId":"1691","endLine":329,"endColumn":37},{"ruleId":"1688","severity":1,"message":"1689","line":330,"column":47,"nodeType":"1690","messageId":"1691","endLine":330,"endColumn":49},{"ruleId":"1688","severity":1,"message":"1689","line":336,"column":44,"nodeType":"1690","messageId":"1691","endLine":336,"endColumn":46},{"ruleId":"1688","severity":1,"message":"1689","line":347,"column":44,"nodeType":"1690","messageId":"1691","endLine":347,"endColumn":46},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1724","line":3,"column":10,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1956","line":3,"column":16,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":25},{"ruleId":"1659","severity":1,"message":"1742","line":3,"column":27,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":33},{"ruleId":"1659","severity":1,"message":"1674","line":4,"column":10,"nodeType":"1661","messageId":"1662","endLine":4,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1820","line":57,"column":26,"nodeType":"1661","messageId":"1662","endLine":57,"endColumn":35},{"ruleId":"1671","severity":1,"message":"1672","line":72,"column":17,"nodeType":"1673","endLine":72,"endColumn":69},{"ruleId":"1671","severity":1,"message":"1672","line":83,"column":17,"nodeType":"1673","endLine":83,"endColumn":63},{"ruleId":"1671","severity":1,"message":"1672","line":94,"column":17,"nodeType":"1673","endLine":94,"endColumn":68},{"ruleId":"1671","severity":1,"message":"1672","line":105,"column":17,"nodeType":"1673","endLine":105,"endColumn":70},{"ruleId":"1671","severity":1,"message":"1672","line":116,"column":17,"nodeType":"1673","endLine":116,"endColumn":64},{"ruleId":"1659","severity":1,"message":"1957","line":25,"column":9,"nodeType":"1661","messageId":"1662","endLine":25,"endColumn":16},{"ruleId":"1688","severity":1,"message":"1689","line":50,"column":17,"nodeType":"1690","messageId":"1691","endLine":50,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1957","line":73,"column":9,"nodeType":"1661","messageId":"1662","endLine":73,"endColumn":16},{"ruleId":"1659","severity":1,"message":"1957","line":92,"column":9,"nodeType":"1661","messageId":"1662","endLine":92,"endColumn":16},{"ruleId":"1659","severity":1,"message":"1957","line":136,"column":9,"nodeType":"1661","messageId":"1662","endLine":136,"endColumn":16},{"ruleId":"1659","severity":1,"message":"1958","line":148,"column":9,"nodeType":"1661","messageId":"1662","endLine":148,"endColumn":11},{"ruleId":"1659","severity":1,"message":"1957","line":252,"column":9,"nodeType":"1661","messageId":"1662","endLine":252,"endColumn":16},{"ruleId":"1659","severity":1,"message":"1957","line":309,"column":13,"nodeType":"1661","messageId":"1662","endLine":309,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1957","line":324,"column":9,"nodeType":"1661","messageId":"1662","endLine":324,"endColumn":16},{"ruleId":"1659","severity":1,"message":"1957","line":337,"column":9,"nodeType":"1661","messageId":"1662","endLine":337,"endColumn":16},{"ruleId":"1959","severity":1,"message":"1960","line":344,"column":43,"nodeType":"1704","messageId":"1961","endLine":344,"endColumn":44,"suggestions":"1962"},{"ruleId":"1959","severity":1,"message":"1960","line":344,"column":45,"nodeType":"1704","messageId":"1961","endLine":344,"endColumn":46,"suggestions":"1963"},{"ruleId":"1959","severity":1,"message":"1964","line":344,"column":51,"nodeType":"1704","messageId":"1961","endLine":344,"endColumn":52,"suggestions":"1965"},{"ruleId":"1959","severity":1,"message":"1966","line":344,"column":69,"nodeType":"1704","messageId":"1961","endLine":344,"endColumn":70,"suggestions":"1967"},{"ruleId":"1959","severity":1,"message":"1966","line":344,"column":112,"nodeType":"1704","messageId":"1961","endLine":344,"endColumn":113,"suggestions":"1968"},{"ruleId":"1659","severity":1,"message":"1957","line":370,"column":9,"nodeType":"1661","messageId":"1662","endLine":370,"endColumn":16},{"ruleId":"1688","severity":1,"message":"1811","line":403,"column":61,"nodeType":"1690","messageId":"1691","endLine":403,"endColumn":63},{"ruleId":"1659","severity":1,"message":"1957","line":404,"column":9,"nodeType":"1661","messageId":"1662","endLine":404,"endColumn":16},{"ruleId":"1659","severity":1,"message":"1957","line":439,"column":9,"nodeType":"1661","messageId":"1662","endLine":439,"endColumn":16},{"ruleId":"1659","severity":1,"message":"1767","line":4,"column":17,"nodeType":"1661","messageId":"1662","endLine":4,"endColumn":24},{"ruleId":"1688","severity":1,"message":"1811","line":37,"column":25,"nodeType":"1690","messageId":"1691","endLine":37,"endColumn":27},{"ruleId":"1659","severity":1,"message":"1949","line":1,"column":10,"nodeType":"1661","messageId":"1662","endLine":1,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1931","line":1,"column":21,"nodeType":"1661","messageId":"1662","endLine":1,"endColumn":34},{"ruleId":"1659","severity":1,"message":"1950","line":1,"column":36,"nodeType":"1661","messageId":"1662","endLine":1,"endColumn":43},{"ruleId":"1659","severity":1,"message":"1932","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1951","line":2,"column":21,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":35},{"ruleId":"1659","severity":1,"message":"1952","line":3,"column":10,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":18},{"ruleId":"1659","severity":1,"message":"1767","line":4,"column":17,"nodeType":"1661","messageId":"1662","endLine":4,"endColumn":24},{"ruleId":"1659","severity":1,"message":"1929","line":5,"column":10,"nodeType":"1661","messageId":"1662","endLine":5,"endColumn":17},{"ruleId":"1659","severity":1,"message":"1953","line":6,"column":10,"nodeType":"1661","messageId":"1662","endLine":6,"endColumn":21},{"ruleId":"1688","severity":1,"message":"1689","line":237,"column":49,"nodeType":"1690","messageId":"1691","endLine":237,"endColumn":51},{"ruleId":"1688","severity":1,"message":"1689","line":277,"column":27,"nodeType":"1690","messageId":"1691","endLine":277,"endColumn":29},{"ruleId":"1659","severity":1,"message":"1969","line":1,"column":17,"nodeType":"1661","messageId":"1662","endLine":1,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1667","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1970","line":3,"column":10,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":25},{"ruleId":"1659","severity":1,"message":"1971","line":4,"column":10,"nodeType":"1661","messageId":"1662","endLine":4,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1972","line":8,"column":9,"nodeType":"1661","messageId":"1662","endLine":8,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1973","line":9,"column":9,"nodeType":"1661","messageId":"1662","endLine":9,"endColumn":17},{"ruleId":"1659","severity":1,"message":"1974","line":10,"column":9,"nodeType":"1661","messageId":"1662","endLine":10,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1975","line":11,"column":9,"nodeType":"1661","messageId":"1662","endLine":11,"endColumn":21},{"ruleId":"1688","severity":1,"message":"1689","line":24,"column":34,"nodeType":"1690","messageId":"1691","endLine":24,"endColumn":36},{"ruleId":"1659","severity":1,"message":"1976","line":52,"column":9,"nodeType":"1661","messageId":"1662","endLine":52,"endColumn":11},{"ruleId":"1688","severity":1,"message":"1689","line":53,"column":13,"nodeType":"1690","messageId":"1691","endLine":53,"endColumn":15},{"ruleId":"1688","severity":1,"message":"1689","line":56,"column":13,"nodeType":"1690","messageId":"1691","endLine":56,"endColumn":15},{"ruleId":"1659","severity":1,"message":"1976","line":63,"column":9,"nodeType":"1661","messageId":"1662","endLine":63,"endColumn":11},{"ruleId":"1688","severity":1,"message":"1689","line":64,"column":13,"nodeType":"1690","messageId":"1691","endLine":64,"endColumn":15},{"ruleId":"1688","severity":1,"message":"1689","line":67,"column":13,"nodeType":"1690","messageId":"1691","endLine":67,"endColumn":15},{"ruleId":"1659","severity":1,"message":"1976","line":74,"column":9,"nodeType":"1661","messageId":"1662","endLine":74,"endColumn":11},{"ruleId":"1688","severity":1,"message":"1689","line":75,"column":13,"nodeType":"1690","messageId":"1691","endLine":75,"endColumn":15},{"ruleId":"1688","severity":1,"message":"1689","line":78,"column":13,"nodeType":"1690","messageId":"1691","endLine":78,"endColumn":15},{"ruleId":"1688","severity":1,"message":"1689","line":89,"column":17,"nodeType":"1690","messageId":"1691","endLine":89,"endColumn":19},{"ruleId":"1688","severity":1,"message":"1689","line":141,"column":17,"nodeType":"1690","messageId":"1691","endLine":141,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1977","line":142,"column":17,"nodeType":"1661","messageId":"1758","endLine":142,"endColumn":22},{"ruleId":"1688","severity":1,"message":"1689","line":195,"column":17,"nodeType":"1690","messageId":"1691","endLine":195,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1977","line":244,"column":17,"nodeType":"1661","messageId":"1758","endLine":244,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1978","line":252,"column":9,"nodeType":"1661","messageId":"1662","endLine":252,"endColumn":20},{"ruleId":"1688","severity":1,"message":"1689","line":255,"column":17,"nodeType":"1690","messageId":"1691","endLine":255,"endColumn":19},{"ruleId":"1688","severity":1,"message":"1689","line":259,"column":17,"nodeType":"1690","messageId":"1691","endLine":259,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1972","line":269,"column":9,"nodeType":"1661","messageId":"1662","endLine":269,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1973","line":270,"column":9,"nodeType":"1661","messageId":"1662","endLine":270,"endColumn":17},{"ruleId":"1659","severity":1,"message":"1974","line":271,"column":9,"nodeType":"1661","messageId":"1662","endLine":271,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1975","line":272,"column":9,"nodeType":"1661","messageId":"1662","endLine":272,"endColumn":21},{"ruleId":"1688","severity":1,"message":"1689","line":285,"column":34,"nodeType":"1690","messageId":"1691","endLine":285,"endColumn":36},{"ruleId":"1756","severity":1,"message":"1979","line":318,"column":13,"nodeType":"1661","messageId":"1758","endLine":318,"endColumn":16},{"ruleId":"1756","severity":1,"message":"1980","line":319,"column":13,"nodeType":"1661","messageId":"1758","endLine":319,"endColumn":23},{"ruleId":"1688","severity":1,"message":"1689","line":330,"column":20,"nodeType":"1690","messageId":"1691","endLine":330,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1972","line":335,"column":9,"nodeType":"1661","messageId":"1662","endLine":335,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1973","line":336,"column":9,"nodeType":"1661","messageId":"1662","endLine":336,"endColumn":17},{"ruleId":"1659","severity":1,"message":"1974","line":337,"column":9,"nodeType":"1661","messageId":"1662","endLine":337,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1975","line":338,"column":9,"nodeType":"1661","messageId":"1662","endLine":338,"endColumn":21},{"ruleId":"1688","severity":1,"message":"1689","line":351,"column":34,"nodeType":"1690","messageId":"1691","endLine":351,"endColumn":36},{"ruleId":"1756","severity":1,"message":"1979","line":388,"column":13,"nodeType":"1661","messageId":"1758","endLine":388,"endColumn":16},{"ruleId":"1756","severity":1,"message":"1979","line":393,"column":13,"nodeType":"1661","messageId":"1758","endLine":393,"endColumn":16},{"ruleId":"1688","severity":1,"message":"1689","line":408,"column":20,"nodeType":"1690","messageId":"1691","endLine":408,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1949","line":1,"column":10,"nodeType":"1661","messageId":"1662","endLine":1,"endColumn":19},{"ruleId":"1659","severity":1,"message":"1931","line":1,"column":21,"nodeType":"1661","messageId":"1662","endLine":1,"endColumn":34},{"ruleId":"1659","severity":1,"message":"1950","line":1,"column":36,"nodeType":"1661","messageId":"1662","endLine":1,"endColumn":43},{"ruleId":"1659","severity":1,"message":"1932","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1951","line":2,"column":21,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":35},{"ruleId":"1659","severity":1,"message":"1952","line":3,"column":10,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":18},{"ruleId":"1659","severity":1,"message":"1767","line":4,"column":17,"nodeType":"1661","messageId":"1662","endLine":4,"endColumn":24},{"ruleId":"1659","severity":1,"message":"1981","line":20,"column":11,"nodeType":"1661","messageId":"1662","endLine":20,"endColumn":15},{"ruleId":"1688","severity":1,"message":"1689","line":23,"column":17,"nodeType":"1690","messageId":"1691","endLine":23,"endColumn":19},{"ruleId":"1756","severity":1,"message":"1982","line":26,"column":9,"nodeType":"1661","messageId":"1758","endLine":26,"endColumn":13},{"ruleId":"1659","severity":1,"message":"1983","line":49,"column":13,"nodeType":"1661","messageId":"1662","endLine":49,"endColumn":27},{"ruleId":"1659","severity":1,"message":"1984","line":4,"column":8,"nodeType":"1661","messageId":"1662","endLine":4,"endColumn":11},{"ruleId":"1659","severity":1,"message":"1985","line":5,"column":8,"nodeType":"1661","messageId":"1662","endLine":5,"endColumn":15},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1829","line":13,"column":8,"nodeType":"1661","messageId":"1662","endLine":13,"endColumn":11},{"ruleId":"1659","severity":1,"message":"1830","line":14,"column":8,"nodeType":"1661","messageId":"1662","endLine":14,"endColumn":15},{"ruleId":"1659","severity":1,"message":"1831","line":16,"column":8,"nodeType":"1661","messageId":"1662","endLine":16,"endColumn":16},{"ruleId":"1659","severity":1,"message":"1819","line":79,"column":25,"nodeType":"1661","messageId":"1662","endLine":79,"endColumn":38},{"ruleId":"1688","severity":1,"message":"1689","line":144,"column":34,"nodeType":"1690","messageId":"1691","endLine":144,"endColumn":36},{"ruleId":"1688","severity":1,"message":"1689","line":209,"column":34,"nodeType":"1690","messageId":"1691","endLine":209,"endColumn":36},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1735","line":8,"column":8,"nodeType":"1661","messageId":"1662","endLine":8,"endColumn":13},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1735","line":8,"column":8,"nodeType":"1661","messageId":"1662","endLine":8,"endColumn":13},{"ruleId":"1659","severity":1,"message":"1767","line":4,"column":17,"nodeType":"1661","messageId":"1662","endLine":4,"endColumn":24},{"ruleId":"1659","severity":1,"message":"1986","line":10,"column":9,"nodeType":"1661","messageId":"1662","endLine":10,"endColumn":16},{"ruleId":"1659","severity":1,"message":"1987","line":11,"column":9,"nodeType":"1661","messageId":"1662","endLine":11,"endColumn":17},{"ruleId":"1659","severity":1,"message":"1988","line":29,"column":25,"nodeType":"1661","messageId":"1662","endLine":29,"endColumn":29},{"ruleId":"1659","severity":1,"message":"1989","line":42,"column":18,"nodeType":"1661","messageId":"1662","endLine":42,"endColumn":25},{"ruleId":"1659","severity":1,"message":"1988","line":49,"column":16,"nodeType":"1661","messageId":"1662","endLine":49,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1988","line":117,"column":9,"nodeType":"1661","messageId":"1662","endLine":117,"endColumn":13},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1674","line":3,"column":10,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1798","line":5,"column":3,"nodeType":"1661","messageId":"1662","endLine":5,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1721","line":6,"column":3,"nodeType":"1661","messageId":"1662","endLine":6,"endColumn":11},{"ruleId":"1659","severity":1,"message":"1722","line":7,"column":3,"nodeType":"1661","messageId":"1662","endLine":7,"endColumn":6},{"ruleId":"1659","severity":1,"message":"1723","line":8,"column":3,"nodeType":"1661","messageId":"1662","endLine":8,"endColumn":6},{"ruleId":"1659","severity":1,"message":"1724","line":9,"column":3,"nodeType":"1661","messageId":"1662","endLine":9,"endColumn":7},{"ruleId":"1659","severity":1,"message":"1725","line":10,"column":3,"nodeType":"1661","messageId":"1662","endLine":10,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1726","line":12,"column":3,"nodeType":"1661","messageId":"1662","endLine":12,"endColumn":7},{"ruleId":"1659","severity":1,"message":"1727","line":13,"column":3,"nodeType":"1661","messageId":"1662","endLine":13,"endColumn":6},{"ruleId":"1659","severity":1,"message":"1728","line":14,"column":3,"nodeType":"1661","messageId":"1662","endLine":14,"endColumn":6},{"ruleId":"1688","severity":1,"message":"1689","line":57,"column":29,"nodeType":"1690","messageId":"1691","endLine":57,"endColumn":31},{"ruleId":"1688","severity":1,"message":"1689","line":84,"column":29,"nodeType":"1690","messageId":"1691","endLine":84,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1819","line":133,"column":24,"nodeType":"1661","messageId":"1662","endLine":133,"endColumn":37},{"ruleId":"1688","severity":1,"message":"1689","line":242,"column":39,"nodeType":"1690","messageId":"1691","endLine":242,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1738","line":3,"column":17,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":27},{"ruleId":"1659","severity":1,"message":"1739","line":3,"column":28,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":39},{"ruleId":"1659","severity":1,"message":"1725","line":3,"column":40,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":51},{"ruleId":"1659","severity":1,"message":"1667","line":6,"column":10,"nodeType":"1661","messageId":"1662","endLine":6,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1990","line":6,"column":22,"nodeType":"1661","messageId":"1662","endLine":6,"endColumn":32},{"ruleId":"1715","severity":1,"message":"1821","line":47,"column":42,"nodeType":"1673","endLine":47,"endColumn":83},{"ruleId":"1671","severity":1,"message":"1672","line":47,"column":83,"nodeType":"1673","endLine":47,"endColumn":108},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1674","line":3,"column":10,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1798","line":5,"column":3,"nodeType":"1661","messageId":"1662","endLine":5,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1721","line":6,"column":3,"nodeType":"1661","messageId":"1662","endLine":6,"endColumn":11},{"ruleId":"1659","severity":1,"message":"1722","line":7,"column":3,"nodeType":"1661","messageId":"1662","endLine":7,"endColumn":6},{"ruleId":"1659","severity":1,"message":"1723","line":8,"column":3,"nodeType":"1661","messageId":"1662","endLine":8,"endColumn":6},{"ruleId":"1659","severity":1,"message":"1724","line":9,"column":3,"nodeType":"1661","messageId":"1662","endLine":9,"endColumn":7},{"ruleId":"1659","severity":1,"message":"1725","line":10,"column":3,"nodeType":"1661","messageId":"1662","endLine":10,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1726","line":12,"column":3,"nodeType":"1661","messageId":"1662","endLine":12,"endColumn":7},{"ruleId":"1659","severity":1,"message":"1727","line":13,"column":3,"nodeType":"1661","messageId":"1662","endLine":13,"endColumn":6},{"ruleId":"1659","severity":1,"message":"1728","line":14,"column":3,"nodeType":"1661","messageId":"1662","endLine":14,"endColumn":6},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1991","line":3,"column":17,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":22},{"ruleId":"1659","severity":1,"message":"1735","line":8,"column":8,"nodeType":"1661","messageId":"1662","endLine":8,"endColumn":13},{"ruleId":"1688","severity":1,"message":"1689","line":35,"column":26,"nodeType":"1690","messageId":"1691","endLine":35,"endColumn":28},{"ruleId":"1659","severity":1,"message":"1992","line":49,"column":7,"nodeType":"1661","messageId":"1662","endLine":49,"endColumn":13},{"ruleId":"1688","severity":1,"message":"1811","line":122,"column":82,"nodeType":"1690","messageId":"1691","endLine":122,"endColumn":84},{"ruleId":"1688","severity":1,"message":"1811","line":127,"column":86,"nodeType":"1690","messageId":"1691","endLine":127,"endColumn":88},{"ruleId":"1659","severity":1,"message":"1664","line":2,"column":10,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":2,"column":22,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":2,"column":33,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1676","line":6,"column":8,"nodeType":"1661","messageId":"1662","endLine":6,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1924","line":8,"column":8,"nodeType":"1661","messageId":"1662","endLine":8,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1925","line":9,"column":8,"nodeType":"1661","messageId":"1662","endLine":9,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1926","line":10,"column":8,"nodeType":"1661","messageId":"1662","endLine":10,"endColumn":12},{"ruleId":"1659","severity":1,"message":"1684","line":11,"column":10,"nodeType":"1661","messageId":"1662","endLine":11,"endColumn":16},{"ruleId":"1659","severity":1,"message":"1685","line":12,"column":34,"nodeType":"1661","messageId":"1662","endLine":12,"endColumn":44},{"ruleId":"1688","severity":1,"message":"1689","line":79,"column":68,"nodeType":"1690","messageId":"1691","endLine":79,"endColumn":70},{"ruleId":"1659","severity":1,"message":"1927","line":126,"column":17,"nodeType":"1661","messageId":"1662","endLine":126,"endColumn":25},{"ruleId":"1659","severity":1,"message":"1767","line":2,"column":17,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":24},{"ruleId":"1659","severity":1,"message":"1664","line":3,"column":10,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":3,"column":22,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":3,"column":33,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1726","line":4,"column":34,"nodeType":"1661","messageId":"1662","endLine":4,"endColumn":38},{"ruleId":"1659","severity":1,"message":"1798","line":4,"column":40,"nodeType":"1661","messageId":"1662","endLine":4,"endColumn":49},{"ruleId":"1659","severity":1,"message":"1836","line":11,"column":66,"nodeType":"1661","messageId":"1662","endLine":11,"endColumn":80},{"ruleId":"1659","severity":1,"message":"1674","line":14,"column":10,"nodeType":"1661","messageId":"1662","endLine":14,"endColumn":14},{"ruleId":"1696","severity":1,"message":"1993","line":70,"column":11,"nodeType":"1698","messageId":"1691","endLine":70,"endColumn":19},{"ruleId":"1696","severity":1,"message":"1837","line":84,"column":3,"nodeType":"1698","messageId":"1691","endLine":84,"endColumn":10},{"ruleId":"1659","severity":1,"message":"1838","line":95,"column":13,"nodeType":"1661","messageId":"1662","endLine":95,"endColumn":14},{"ruleId":"1692","severity":1,"message":"1693","line":210,"column":23,"nodeType":"1694","messageId":"1695","endLine":210,"endColumn":25},{"ruleId":"1688","severity":1,"message":"1689","line":211,"column":25,"nodeType":"1690","messageId":"1691","endLine":211,"endColumn":27},{"ruleId":"1688","severity":1,"message":"1689","line":211,"column":52,"nodeType":"1690","messageId":"1691","endLine":211,"endColumn":54},{"ruleId":"1688","severity":1,"message":"1811","line":211,"column":82,"nodeType":"1690","messageId":"1691","endLine":211,"endColumn":84},{"ruleId":"1688","severity":1,"message":"1689","line":212,"column":34,"nodeType":"1690","messageId":"1691","endLine":212,"endColumn":36},{"ruleId":"1688","severity":1,"message":"1689","line":212,"column":61,"nodeType":"1690","messageId":"1691","endLine":212,"endColumn":63},{"ruleId":"1688","severity":1,"message":"1689","line":333,"column":32,"nodeType":"1690","messageId":"1691","endLine":333,"endColumn":34},{"ruleId":"1688","severity":1,"message":"1689","line":343,"column":32,"nodeType":"1690","messageId":"1691","endLine":343,"endColumn":34},{"ruleId":"1770","severity":1,"message":"1839","line":452,"column":48,"nodeType":"1772","messageId":"1773","endLine":452,"endColumn":91,"fix":"1994"},{"ruleId":"1688","severity":1,"message":"1689","line":481,"column":55,"nodeType":"1690","messageId":"1691","endLine":481,"endColumn":57},{"ruleId":"1688","severity":1,"message":"1689","line":497,"column":55,"nodeType":"1690","messageId":"1691","endLine":497,"endColumn":57},{"ruleId":"1688","severity":1,"message":"1689","line":513,"column":55,"nodeType":"1690","messageId":"1691","endLine":513,"endColumn":57},{"ruleId":"1688","severity":1,"message":"1689","line":529,"column":55,"nodeType":"1690","messageId":"1691","endLine":529,"endColumn":57},{"ruleId":"1688","severity":1,"message":"1689","line":564,"column":56,"nodeType":"1690","messageId":"1691","endLine":564,"endColumn":58},{"ruleId":"1688","severity":1,"message":"1689","line":568,"column":69,"nodeType":"1690","messageId":"1691","endLine":568,"endColumn":71},{"ruleId":"1688","severity":1,"message":"1689","line":612,"column":65,"nodeType":"1690","messageId":"1691","endLine":612,"endColumn":67},{"ruleId":"1688","severity":1,"message":"1689","line":617,"column":65,"nodeType":"1690","messageId":"1691","endLine":617,"endColumn":67},{"ruleId":"1688","severity":1,"message":"1689","line":624,"column":65,"nodeType":"1690","messageId":"1691","endLine":624,"endColumn":67},{"ruleId":"1688","severity":1,"message":"1689","line":652,"column":46,"nodeType":"1690","messageId":"1691","endLine":652,"endColumn":48},{"ruleId":"1688","severity":1,"message":"1689","line":665,"column":46,"nodeType":"1690","messageId":"1691","endLine":665,"endColumn":48},{"ruleId":"1688","severity":1,"message":"1689","line":686,"column":22,"nodeType":"1690","messageId":"1691","endLine":686,"endColumn":24},{"ruleId":"1688","severity":1,"message":"1689","line":733,"column":69,"nodeType":"1690","messageId":"1691","endLine":733,"endColumn":71},{"ruleId":"1770","severity":1,"message":"1847","line":759,"column":75,"nodeType":"1772","messageId":"1773","endLine":759,"endColumn":90,"fix":"1995"},{"ruleId":"1770","severity":1,"message":"1847","line":781,"column":79,"nodeType":"1772","messageId":"1773","endLine":781,"endColumn":122,"fix":"1996"},{"ruleId":"1770","severity":1,"message":"1847","line":785,"column":79,"nodeType":"1772","messageId":"1773","endLine":785,"endColumn":122,"fix":"1997"},{"ruleId":"1688","severity":1,"message":"1689","line":788,"column":75,"nodeType":"1690","messageId":"1691","endLine":788,"endColumn":77},{"ruleId":"1770","severity":1,"message":"1847","line":789,"column":79,"nodeType":"1772","messageId":"1773","endLine":789,"endColumn":132,"fix":"1998"},{"ruleId":"1770","severity":1,"message":"1844","line":829,"column":75,"nodeType":"1772","messageId":"1773","endLine":829,"endColumn":90,"fix":"1999"},{"ruleId":"1770","severity":1,"message":"1844","line":834,"column":79,"nodeType":"1772","messageId":"1773","endLine":834,"endColumn":111,"fix":"2000"},{"ruleId":"1770","severity":1,"message":"1844","line":838,"column":79,"nodeType":"1772","messageId":"1773","endLine":838,"endColumn":109,"fix":"2001"},{"ruleId":"1688","severity":1,"message":"1689","line":841,"column":75,"nodeType":"1690","messageId":"1691","endLine":841,"endColumn":77},{"ruleId":"1770","severity":1,"message":"1844","line":842,"column":79,"nodeType":"1772","messageId":"1773","endLine":842,"endColumn":119,"fix":"2002"},{"ruleId":"1770","severity":1,"message":"1844","line":846,"column":79,"nodeType":"1772","messageId":"1773","endLine":846,"endColumn":94,"fix":"2003"},{"ruleId":"1770","severity":1,"message":"1857","line":877,"column":75,"nodeType":"1772","messageId":"1773","endLine":877,"endColumn":86,"fix":"2004"},{"ruleId":"1770","severity":1,"message":"1857","line":881,"column":79,"nodeType":"1772","messageId":"1773","endLine":881,"endColumn":110,"fix":"2005"},{"ruleId":"1770","severity":1,"message":"1857","line":885,"column":79,"nodeType":"1772","messageId":"1773","endLine":885,"endColumn":119,"fix":"2006"},{"ruleId":"1770","severity":1,"message":"1857","line":890,"column":79,"nodeType":"1772","messageId":"1773","endLine":890,"endColumn":124,"fix":"2007"},{"ruleId":"1770","severity":1,"message":"1857","line":894,"column":79,"nodeType":"1772","messageId":"1773","endLine":894,"endColumn":90,"fix":"2008"},{"ruleId":"1770","severity":1,"message":"1863","line":913,"column":75,"nodeType":"1772","messageId":"1773","endLine":913,"endColumn":86,"fix":"2009"},{"ruleId":"1770","severity":1,"message":"1863","line":917,"column":79,"nodeType":"1772","messageId":"1773","endLine":917,"endColumn":110,"fix":"2010"},{"ruleId":"1770","severity":1,"message":"1863","line":921,"column":79,"nodeType":"1772","messageId":"1773","endLine":921,"endColumn":119,"fix":"2011"},{"ruleId":"1770","severity":1,"message":"1863","line":926,"column":83,"nodeType":"1772","messageId":"1773","endLine":926,"endColumn":128,"fix":"2012"},{"ruleId":"1770","severity":1,"message":"1863","line":930,"column":83,"nodeType":"1772","messageId":"1773","endLine":930,"endColumn":94,"fix":"2013"},{"ruleId":"1770","severity":1,"message":"1869","line":984,"column":79,"nodeType":"1772","messageId":"1773","endLine":984,"endColumn":120,"fix":"2014"},{"ruleId":"1770","severity":1,"message":"1869","line":988,"column":79,"nodeType":"1772","messageId":"1773","endLine":988,"endColumn":98,"fix":"2015"},{"ruleId":"1770","severity":1,"message":"1875","line":1036,"column":83,"nodeType":"1772","messageId":"1773","endLine":1036,"endColumn":132,"fix":"2016"},{"ruleId":"1770","severity":1,"message":"1875","line":1040,"column":83,"nodeType":"1772","messageId":"1773","endLine":1040,"endColumn":101,"fix":"2017"},{"ruleId":"1770","severity":1,"message":"1878","line":1084,"column":100,"nodeType":"1772","messageId":"1773","endLine":1084,"endColumn":146,"fix":"2018"},{"ruleId":"1770","severity":1,"message":"1880","line":1088,"column":100,"nodeType":"1772","messageId":"1773","endLine":1088,"endColumn":115,"fix":"2019"},{"ruleId":"1770","severity":1,"message":"1880","line":1134,"column":100,"nodeType":"1772","messageId":"1773","endLine":1134,"endColumn":144,"fix":"2020"},{"ruleId":"1770","severity":1,"message":"1878","line":1138,"column":100,"nodeType":"1772","messageId":"1773","endLine":1138,"endColumn":117,"fix":"2021"},{"ruleId":"1770","severity":1,"message":"1880","line":1140,"column":100,"nodeType":"1772","messageId":"1773","endLine":1140,"endColumn":115,"fix":"2022"},{"ruleId":"1770","severity":1,"message":"1885","line":1181,"column":79,"nodeType":"1772","messageId":"1773","endLine":1181,"endColumn":129,"fix":"2023"},{"ruleId":"1770","severity":1,"message":"1885","line":1185,"column":79,"nodeType":"1772","messageId":"1773","endLine":1185,"endColumn":100,"fix":"2024"},{"ruleId":"1770","severity":1,"message":"1888","line":1206,"column":83,"nodeType":"1772","messageId":"1773","endLine":1206,"endColumn":141,"fix":"2025"},{"ruleId":"1770","severity":1,"message":"1888","line":1210,"column":83,"nodeType":"1772","messageId":"1773","endLine":1210,"endColumn":103,"fix":"2026"},{"ruleId":"1688","severity":1,"message":"1689","line":1250,"column":67,"nodeType":"1690","messageId":"1691","endLine":1250,"endColumn":69},{"ruleId":"1770","severity":1,"message":"1891","line":1260,"column":79,"nodeType":"1772","messageId":"1773","endLine":1260,"endColumn":92,"fix":"2027"},{"ruleId":"1770","severity":1,"message":"1891","line":1264,"column":79,"nodeType":"1772","messageId":"1773","endLine":1264,"endColumn":109,"fix":"2028"},{"ruleId":"1770","severity":1,"message":"1894","line":1287,"column":79,"nodeType":"1772","messageId":"1773","endLine":1287,"endColumn":95,"fix":"2029"},{"ruleId":"1770","severity":1,"message":"1894","line":1291,"column":79,"nodeType":"1772","messageId":"1773","endLine":1291,"endColumn":115,"fix":"2030"},{"ruleId":"1770","severity":1,"message":"1897","line":1312,"column":83,"nodeType":"1772","messageId":"1773","endLine":1312,"endColumn":100,"fix":"2031"},{"ruleId":"1770","severity":1,"message":"1897","line":1316,"column":83,"nodeType":"1772","messageId":"1773","endLine":1316,"endColumn":121,"fix":"2032"},{"ruleId":"1770","severity":1,"message":"1900","line":1335,"column":79,"nodeType":"1772","messageId":"1773","endLine":1335,"endColumn":95,"fix":"2033"},{"ruleId":"1770","severity":1,"message":"1900","line":1339,"column":79,"nodeType":"1772","messageId":"1773","endLine":1339,"endColumn":115,"fix":"2034"},{"ruleId":"1770","severity":1,"message":"1903","line":1361,"column":83,"nodeType":"1772","messageId":"1773","endLine":1361,"endColumn":98,"fix":"2035"},{"ruleId":"1770","severity":1,"message":"1903","line":1365,"column":83,"nodeType":"1772","messageId":"1773","endLine":1365,"endColumn":117,"fix":"2036"},{"ruleId":"1770","severity":1,"message":"1906","line":1384,"column":79,"nodeType":"1772","messageId":"1773","endLine":1384,"endColumn":96,"fix":"2037"},{"ruleId":"1770","severity":1,"message":"1906","line":1388,"column":79,"nodeType":"1772","messageId":"1773","endLine":1388,"endColumn":117,"fix":"2038"},{"ruleId":"1770","severity":1,"message":"1909","line":1410,"column":83,"nodeType":"1772","messageId":"1773","endLine":1410,"endColumn":101,"fix":"2039"},{"ruleId":"1770","severity":1,"message":"1909","line":1414,"column":83,"nodeType":"1772","messageId":"1773","endLine":1414,"endColumn":123,"fix":"2040"},{"ruleId":"1770","severity":1,"message":"1912","line":1435,"column":83,"nodeType":"1772","messageId":"1773","endLine":1435,"endColumn":99,"fix":"2041"},{"ruleId":"1770","severity":1,"message":"1912","line":1439,"column":83,"nodeType":"1772","messageId":"1773","endLine":1439,"endColumn":119,"fix":"2042"},{"ruleId":"1770","severity":1,"message":"1915","line":1460,"column":83,"nodeType":"1772","messageId":"1773","endLine":1460,"endColumn":98,"fix":"2043"},{"ruleId":"1770","severity":1,"message":"1915","line":1464,"column":83,"nodeType":"1772","messageId":"1773","endLine":1464,"endColumn":117,"fix":"2044"},{"ruleId":"1770","severity":1,"message":"1918","line":1485,"column":83,"nodeType":"1772","messageId":"1773","endLine":1485,"endColumn":99,"fix":"2045"},{"ruleId":"1770","severity":1,"message":"1918","line":1489,"column":83,"nodeType":"1772","messageId":"1773","endLine":1489,"endColumn":125,"fix":"2046"},{"ruleId":"1770","severity":1,"message":"1921","line":1512,"column":79,"nodeType":"1772","messageId":"1773","endLine":1512,"endColumn":119,"fix":"2047"},{"ruleId":"1770","severity":1,"message":"1921","line":1516,"column":79,"nodeType":"1772","messageId":"1773","endLine":1516,"endColumn":99,"fix":"2048"},{"ruleId":"1688","severity":1,"message":"1689","line":1549,"column":68,"nodeType":"1690","messageId":"1691","endLine":1549,"endColumn":70},{"ruleId":"1715","severity":1,"message":"1821","line":1664,"column":53,"nodeType":"1673","endLine":1664,"endColumn":120},{"ruleId":"1688","severity":1,"message":"1689","line":1697,"column":49,"nodeType":"1690","messageId":"1691","endLine":1697,"endColumn":51},{"ruleId":"1715","severity":1,"message":"1716","line":1698,"column":25,"nodeType":"1673","endLine":1698,"endColumn":91},{"ruleId":"1715","severity":1,"message":"1716","line":1701,"column":47,"nodeType":"1673","endLine":1701,"endColumn":113},{"ruleId":"1659","severity":1,"message":"2049","line":4,"column":10,"nodeType":"1661","messageId":"1662","endLine":4,"endColumn":18},{"ruleId":"1659","severity":1,"message":"2050","line":4,"column":20,"nodeType":"1661","messageId":"1662","endLine":4,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1767","line":2,"column":17,"nodeType":"1661","messageId":"1662","endLine":2,"endColumn":24},{"ruleId":"1659","severity":1,"message":"1664","line":3,"column":10,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":20},{"ruleId":"1659","severity":1,"message":"1665","line":3,"column":22,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":31},{"ruleId":"1659","severity":1,"message":"1666","line":3,"column":33,"nodeType":"1661","messageId":"1662","endLine":3,"endColumn":41},{"ruleId":"1659","severity":1,"message":"1726","line":4,"column":34,"nodeType":"1661","messageId":"1662","endLine":4,"endColumn":38},{"ruleId":"1659","severity":1,"message":"1686","line":10,"column":10,"nodeType":"1661","messageId":"1662","endLine":10,"endColumn":22},{"ruleId":"1659","severity":1,"message":"2051","line":10,"column":23,"nodeType":"1661","messageId":"1662","endLine":10,"endColumn":37},{"ruleId":"1659","severity":1,"message":"1836","line":10,"column":66,"nodeType":"1661","messageId":"1662","endLine":10,"endColumn":80},{"ruleId":"1659","severity":1,"message":"1674","line":16,"column":10,"nodeType":"1661","messageId":"1662","endLine":16,"endColumn":14},{"ruleId":"1659","severity":1,"message":"1838","line":105,"column":13,"nodeType":"1661","messageId":"1662","endLine":105,"endColumn":14},{"ruleId":"1692","severity":1,"message":"1693","line":202,"column":26,"nodeType":"1694","messageId":"1695","endLine":202,"endColumn":28},{"ruleId":"1688","severity":1,"message":"1689","line":203,"column":28,"nodeType":"1690","messageId":"1691","endLine":203,"endColumn":30},{"ruleId":"1688","severity":1,"message":"1689","line":203,"column":55,"nodeType":"1690","messageId":"1691","endLine":203,"endColumn":57},{"ruleId":"1688","severity":1,"message":"1811","line":203,"column":85,"nodeType":"1690","messageId":"1691","endLine":203,"endColumn":87},{"ruleId":"1688","severity":1,"message":"1689","line":204,"column":37,"nodeType":"1690","messageId":"1691","endLine":204,"endColumn":39},{"ruleId":"1688","severity":1,"message":"1689","line":204,"column":64,"nodeType":"1690","messageId":"1691","endLine":204,"endColumn":66},{"ruleId":"1688","severity":1,"message":"1689","line":251,"column":45,"nodeType":"1690","messageId":"1691","endLine":251,"endColumn":47},{"ruleId":"1659","severity":1,"message":"2052","line":306,"column":13,"nodeType":"1661","messageId":"1662","endLine":306,"endColumn":29},{"ruleId":"1688","severity":1,"message":"1689","line":324,"column":49,"nodeType":"1690","messageId":"1691","endLine":324,"endColumn":51},{"ruleId":"1688","severity":1,"message":"1689","line":324,"column":101,"nodeType":"1690","messageId":"1691","endLine":324,"endColumn":103},{"ruleId":"1770","severity":1,"message":"1839","line":447,"column":52,"nodeType":"1772","messageId":"1773","endLine":447,"endColumn":95,"fix":"2053"},{"ruleId":"1688","severity":1,"message":"1689","line":465,"column":55,"nodeType":"1690","messageId":"1691","endLine":465,"endColumn":57},{"ruleId":"1688","severity":1,"message":"1689","line":481,"column":55,"nodeType":"1690","messageId":"1691","endLine":481,"endColumn":57},{"ruleId":"1688","severity":1,"message":"1689","line":497,"column":55,"nodeType":"1690","messageId":"1691","endLine":497,"endColumn":57},{"ruleId":"1688","severity":1,"message":"1689","line":513,"column":55,"nodeType":"1690","messageId":"1691","endLine":513,"endColumn":57},{"ruleId":"1688","severity":1,"message":"1689","line":548,"column":56,"nodeType":"1690","messageId":"1691","endLine":548,"endColumn":58},{"ruleId":"1688","severity":1,"message":"1689","line":552,"column":69,"nodeType":"1690","messageId":"1691","endLine":552,"endColumn":71},{"ruleId":"1688","severity":1,"message":"1689","line":598,"column":65,"nodeType":"1690","messageId":"1691","endLine":598,"endColumn":67},{"ruleId":"1688","severity":1,"message":"1689","line":603,"column":65,"nodeType":"1690","messageId":"1691","endLine":603,"endColumn":67},{"ruleId":"1688","severity":1,"message":"1689","line":610,"column":65,"nodeType":"1690","messageId":"1691","endLine":610,"endColumn":67},{"ruleId":"1688","severity":1,"message":"1689","line":632,"column":46,"nodeType":"1690","messageId":"1691","endLine":632,"endColumn":48},{"ruleId":"1688","severity":1,"message":"1689","line":645,"column":46,"nodeType":"1690","messageId":"1691","endLine":645,"endColumn":48},{"ruleId":"1688","severity":1,"message":"1811","line":658,"column":22,"nodeType":"1690","messageId":"1691","endLine":658,"endColumn":24},{"ruleId":"1688","severity":1,"message":"1689","line":705,"column":69,"nodeType":"1690","messageId":"1691","endLine":705,"endColumn":71},{"ruleId":"1770","severity":1,"message":"1841","line":718,"column":87,"nodeType":"1772","messageId":"1773","endLine":718,"endColumn":102,"fix":"2054"},{"ruleId":"1770","severity":1,"message":"1841","line":722,"column":87,"nodeType":"1772","messageId":"1773","endLine":722,"endColumn":121,"fix":"2055"},{"ruleId":"1770","severity":1,"message":"1844","line":771,"column":75,"nodeType":"1772","messageId":"1773","endLine":771,"endColumn":90,"fix":"2056"},{"ruleId":"1770","severity":1,"message":"1844","line":775,"column":79,"nodeType":"1772","messageId":"1773","endLine":775,"endColumn":111,"fix":"2057"},{"ruleId":"1770","severity":1,"message":"1844","line":780,"column":83,"nodeType":"1772","messageId":"1773","endLine":780,"endColumn":141,"fix":"2058"},{"ruleId":"1770","severity":1,"message":"1847","line":784,"column":83,"nodeType":"1772","messageId":"1773","endLine":784,"endColumn":98,"fix":"2059"},{"ruleId":"1770","severity":1,"message":"1844","line":784,"column":101,"nodeType":"1772","messageId":"1773","endLine":784,"endColumn":116,"fix":"2060"},{"ruleId":"1770","severity":1,"message":"1844","line":788,"column":83,"nodeType":"1772","messageId":"1773","endLine":788,"endColumn":98,"fix":"2061"},{"ruleId":"1770","severity":1,"message":"1844","line":793,"column":79,"nodeType":"1772","messageId":"1773","endLine":793,"endColumn":94,"fix":"2062"},{"ruleId":"1770","severity":1,"message":"1847","line":816,"column":75,"nodeType":"1772","messageId":"1773","endLine":816,"endColumn":90,"fix":"2063"},{"ruleId":"1770","severity":1,"message":"1847","line":823,"column":79,"nodeType":"1772","messageId":"1773","endLine":823,"endColumn":111,"fix":"2064"},{"ruleId":"1770","severity":1,"message":"1847","line":828,"column":79,"nodeType":"1772","messageId":"1773","endLine":828,"endColumn":132,"fix":"2065"},{"ruleId":"1770","severity":1,"message":"1847","line":836,"column":79,"nodeType":"1772","messageId":"1773","endLine":836,"endColumn":94,"fix":"2066"},{"ruleId":"1770","severity":1,"message":"1844","line":841,"column":79,"nodeType":"1772","messageId":"1773","endLine":841,"endColumn":127,"fix":"2067"},{"ruleId":"1770","severity":1,"message":"1857","line":862,"column":75,"nodeType":"1772","messageId":"1773","endLine":862,"endColumn":86,"fix":"2068"},{"ruleId":"1770","severity":1,"message":"1857","line":866,"column":79,"nodeType":"1772","messageId":"1773","endLine":866,"endColumn":110,"fix":"2069"},{"ruleId":"1770","severity":1,"message":"1857","line":870,"column":79,"nodeType":"1772","messageId":"1773","endLine":870,"endColumn":119,"fix":"2070"},{"ruleId":"1770","severity":1,"message":"1857","line":875,"column":79,"nodeType":"1772","messageId":"1773","endLine":875,"endColumn":124,"fix":"2071"},{"ruleId":"1770","severity":1,"message":"1857","line":879,"column":79,"nodeType":"1772","messageId":"1773","endLine":879,"endColumn":90,"fix":"2072"},{"ruleId":"1770","severity":1,"message":"1863","line":898,"column":75,"nodeType":"1772","messageId":"1773","endLine":898,"endColumn":86,"fix":"2073"},{"ruleId":"1770","severity":1,"message":"1863","line":902,"column":79,"nodeType":"1772","messageId":"1773","endLine":902,"endColumn":110,"fix":"2074"},{"ruleId":"1770","severity":1,"message":"1863","line":906,"column":79,"nodeType":"1772","messageId":"1773","endLine":906,"endColumn":119,"fix":"2075"},{"ruleId":"1770","severity":1,"message":"1863","line":911,"column":83,"nodeType":"1772","messageId":"1773","endLine":911,"endColumn":128,"fix":"2076"},{"ruleId":"1770","severity":1,"message":"1863","line":915,"column":83,"nodeType":"1772","messageId":"1773","endLine":915,"endColumn":94,"fix":"2077"},{"ruleId":"1770","severity":1,"message":"1869","line":958,"column":79,"nodeType":"1772","messageId":"1773","endLine":958,"endColumn":120,"fix":"2078"},{"ruleId":"1770","severity":1,"message":"1869","line":962,"column":79,"nodeType":"1772","messageId":"1773","endLine":962,"endColumn":98,"fix":"2079"},{"ruleId":"1770","severity":1,"message":"1872","line":984,"column":79,"nodeType":"1772","messageId":"1773","endLine":984,"endColumn":148,"fix":"2080"},{"ruleId":"1770","severity":1,"message":"1872","line":988,"column":83,"nodeType":"1772","messageId":"1773","endLine":988,"endColumn":103,"fix":"2081"},{"ruleId":"1770","severity":1,"message":"1875","line":1010,"column":83,"nodeType":"1772","messageId":"1773","endLine":1010,"endColumn":132,"fix":"2082"},{"ruleId":"1770","severity":1,"message":"1875","line":1014,"column":83,"nodeType":"1772","messageId":"1773","endLine":1014,"endColumn":101,"fix":"2083"},{"ruleId":"1770","severity":1,"message":"1878","line":1049,"column":92,"nodeType":"1772","messageId":"1773","endLine":1049,"endColumn":109,"fix":"2084"},{"ruleId":"1770","severity":1,"message":"1878","line":1061,"column":100,"nodeType":"1772","messageId":"1773","endLine":1061,"endColumn":146,"fix":"2085"},{"ruleId":"1770","severity":1,"message":"1880","line":1065,"column":100,"nodeType":"1772","messageId":"1773","endLine":1065,"endColumn":115,"fix":"2086"},{"ruleId":"1770","severity":1,"message":"1880","line":1102,"column":92,"nodeType":"1772","messageId":"1773","endLine":1102,"endColumn":107,"fix":"2087"},{"ruleId":"1770","severity":1,"message":"1880","line":1115,"column":100,"nodeType":"1772","messageId":"1773","endLine":1115,"endColumn":144,"fix":"2088"},{"ruleId":"1770","severity":1,"message":"1878","line":1121,"column":100,"nodeType":"1772","messageId":"1773","endLine":1121,"endColumn":117,"fix":"2089"},{"ruleId":"1770","severity":1,"message":"1880","line":1123,"column":100,"nodeType":"1772","messageId":"1773","endLine":1123,"endColumn":115,"fix":"2090"},{"ruleId":"1770","severity":1,"message":"1885","line":1200,"column":79,"nodeType":"1772","messageId":"1773","endLine":1200,"endColumn":129,"fix":"2091"},{"ruleId":"1770","severity":1,"message":"1885","line":1204,"column":79,"nodeType":"1772","messageId":"1773","endLine":1204,"endColumn":100,"fix":"2092"},{"ruleId":"1770","severity":1,"message":"1888","line":1225,"column":83,"nodeType":"1772","messageId":"1773","endLine":1225,"endColumn":141,"fix":"2093"},{"ruleId":"1770","severity":1,"message":"1888","line":1229,"column":83,"nodeType":"1772","messageId":"1773","endLine":1229,"endColumn":103,"fix":"2094"},{"ruleId":"1688","severity":1,"message":"1689","line":1279,"column":67,"nodeType":"1690","messageId":"1691","endLine":1279,"endColumn":69},{"ruleId":"1770","severity":1,"message":"1891","line":1289,"column":79,"nodeType":"1772","messageId":"1773","endLine":1289,"endColumn":92,"fix":"2095"},{"ruleId":"1770","severity":1,"message":"1891","line":1293,"column":79,"nodeType":"1772","messageId":"1773","endLine":1293,"endColumn":109,"fix":"2096"},{"ruleId":"1770","severity":1,"message":"1894","line":1316,"column":79,"nodeType":"1772","messageId":"1773","endLine":1316,"endColumn":95,"fix":"2097"},{"ruleId":"1770","severity":1,"message":"1894","line":1320,"column":79,"nodeType":"1772","messageId":"1773","endLine":1320,"endColumn":115,"fix":"2098"},{"ruleId":"1770","severity":1,"message":"1897","line":1341,"column":83,"nodeType":"1772","messageId":"1773","endLine":1341,"endColumn":100,"fix":"2099"},{"ruleId":"1770","severity":1,"message":"1897","line":1345,"column":83,"nodeType":"1772","messageId":"1773","endLine":1345,"endColumn":121,"fix":"2100"},{"ruleId":"1770","severity":1,"message":"1900","line":1364,"column":79,"nodeType":"1772","messageId":"1773","endLine":1364,"endColumn":95,"fix":"2101"},{"ruleId":"1770","severity":1,"message":"1900","line":1368,"column":79,"nodeType":"1772","messageId":"1773","endLine":1368,"endColumn":115,"fix":"2102"},{"ruleId":"1770","severity":1,"message":"1903","line":1390,"column":83,"nodeType":"1772","messageId":"1773","endLine":1390,"endColumn":98,"fix":"2103"},{"ruleId":"1770","severity":1,"message":"1903","line":1394,"column":83,"nodeType":"1772","messageId":"1773","endLine":1394,"endColumn":117,"fix":"2104"},{"ruleId":"1770","severity":1,"message":"1906","line":1413,"column":79,"nodeType":"1772","messageId":"1773","endLine":1413,"endColumn":96,"fix":"2105"},{"ruleId":"1770","severity":1,"message":"1906","line":1417,"column":79,"nodeType":"1772","messageId":"1773","endLine":1417,"endColumn":117,"fix":"2106"},{"ruleId":"1770","severity":1,"message":"1909","line":1439,"column":83,"nodeType":"1772","messageId":"1773","endLine":1439,"endColumn":101,"fix":"2107"},{"ruleId":"1770","severity":1,"message":"1909","line":1443,"column":83,"nodeType":"1772","messageId":"1773","endLine":1443,"endColumn":123,"fix":"2108"},{"ruleId":"1770","severity":1,"message":"1912","line":1464,"column":83,"nodeType":"1772","messageId":"1773","endLine":1464,"endColumn":99,"fix":"2109"},{"ruleId":"1770","severity":1,"message":"1912","line":1468,"column":83,"nodeType":"1772","messageId":"1773","endLine":1468,"endColumn":119,"fix":"2110"},{"ruleId":"1770","severity":1,"message":"1915","line":1489,"column":83,"nodeType":"1772","messageId":"1773","endLine":1489,"endColumn":98,"fix":"2111"},{"ruleId":"1770","severity":1,"message":"1915","line":1493,"column":83,"nodeType":"1772","messageId":"1773","endLine":1493,"endColumn":117,"fix":"2112"},{"ruleId":"1770","severity":1,"message":"1918","line":1514,"column":83,"nodeType":"1772","messageId":"1773","endLine":1514,"endColumn":99,"fix":"2113"},{"ruleId":"1770","severity":1,"message":"1918","line":1518,"column":83,"nodeType":"1772","messageId":"1773","endLine":1518,"endColumn":125,"fix":"2114"},{"ruleId":"1770","severity":1,"message":"1921","line":1541,"column":79,"nodeType":"1772","messageId":"1773","endLine":1541,"endColumn":119,"fix":"2115"},{"ruleId":"1770","severity":1,"message":"1921","line":1545,"column":79,"nodeType":"1772","messageId":"1773","endLine":1545,"endColumn":99,"fix":"2116"},{"ruleId":"1688","severity":1,"message":"1689","line":1578,"column":68,"nodeType":"1690","messageId":"1691","endLine":1578,"endColumn":70},{"ruleId":"1715","severity":1,"message":"1821","line":1692,"column":53,"nodeType":"1673","endLine":1692,"endColumn":120},{"ruleId":"1688","severity":1,"message":"1689","line":1722,"column":49,"nodeType":"1690","messageId":"1691","endLine":1722,"endColumn":51},{"ruleId":"1715","severity":1,"message":"1716","line":1723,"column":25,"nodeType":"1673","endLine":1723,"endColumn":83},{"ruleId":"1715","severity":1,"message":"1716","line":1726,"column":47,"nodeType":"1673","endLine":1726,"endColumn":102},"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'getAccount' is defined but never used.","'Trendingslider' is defined but never used.","'location' is assigned a value but never used.","'tokenModal' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'Web3' is defined but never used.","'coin' is defined but never used.","'loader' is defined but never used.","'getPrivatesaleCardLimit' is defined but never used.","'getSaleCards' is defined but never used.","'getSaleCardsLimit' is defined but never used.","'getsaledatalimit' is defined but never used.","'searchSale' is defined but never used.","'Alert' is defined but never used.","'CHAINS' is defined but never used.","'setChainId' is defined but never used.","'UseTokenInfo' is defined but never used.","'tokenfilter' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-dupe-keys","Duplicate key 'interval'.","ObjectExpression","'onGoingSales' is assigned a value but never used.","'upComingSales' is assigned a value but never used.","'accountInfo' is assigned a value but never used.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"2117","text":"2118"},{"range":"2119","text":"2118"},{"range":"2120","text":"2118"},{"range":"2121","text":"2118"},{"range":"2122","text":"2118"},{"range":"2123","text":"2118"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'walletModal' is assigned a value but never used.","'useHistory' is defined but never used.","'getTotalSalesInfo' is defined but never used.","'searchCards' is defined but never used.","'Dropdown' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'ProgressBar' is defined but never used.","'Form' is defined but never used.","'Tab' is defined but never used.","'Nav' is defined but never used.","'totalSales' is assigned a value but never used.","'search' is assigned a value but never used.","'isSearch' is assigned a value but never used.","'searchSale' is assigned a value but never used.","'Validator' is defined but never used.","'Walletmodal' is defined but never used.","'proof' is defined but never used.","'result' is assigned a value but never used.","'getkychook' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'gettokendata' is defined but never used.",{"range":"2124","text":"2118"},"'Button' is defined but never used.","'DeletePresale' is defined but never used.","no-dupe-class-members","Duplicate name 'BNBwithdraw'.","MethodDefinition","'iswhitelisted' is assigned a value but never used.",{"range":"2125","text":"2118"},"'DatePicker' is defined but never used.","'coin_img' is defined but never used.","'Totalvaluelocked' is defined but never used.","'existsSync' is defined but never used.","no-use-before-define","'i' was used before it was defined.","usedBeforeDefined","no-redeclare","'total' is already defined.","redeclared","'getPrivatesaleFilter' is defined but never used.","'searchdata' is defined but never used.",{"range":"2126","text":"2118"},{"range":"2127","text":"2118"},{"range":"2128","text":"2118"},{"range":"2129","text":"2118"},{"range":"2130","text":"2118"},{"range":"2131","text":"2118"},"'Toaster' is defined but never used.","'CreatelockWithout' is defined but never used.","'startDate' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"locktime\"] found.","Property","unnecessarilyComputedProperty",{"range":"2132","text":"2133"},{"range":"2134","text":"2133"},{"range":"2135","text":"2133"},"'unlocktoken' is assigned a value but never used.","'TransfertokenModal' is defined but never used.","'Countdown' is defined but never used.","'renderer' is assigned a value but never used.",{"range":"2136","text":"2118"},"'getsettinghook' is defined but never used.","'saleData' is assigned a value but never used.","'withdraw' is assigned a value but never used.","'decimal' is defined but never used.","'options' is assigned a value but never used.","'userInfo' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",{"range":"2137","text":"2118"},"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator",{"range":"2138","text":"2118"},"'Container' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Header' is defined but never used.","'Sidebar' is defined but never used.","'e' is already defined.","'tokenfilterlaunchpad' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property isWhitelisted.","MemberExpression","unexpectedWhitespace",{"range":"2139","text":"2140"},{"range":"2141","text":"2140"},"Expected '!==' and instead saw '!='.",{"range":"2142","text":"2118"},"'AddTrendingModal' is defined but never used.","'addtrendingModal' is assigned a value but never used.","'Approvetoken' is defined but never used.","'Withdrawbnb' is defined but never used.",{"range":"2143","text":"2118"},"'Settingsmodal' is defined but never used.","'settingsModal' is assigned a value but never used.","'setActive' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"range":"2144","text":"2118"},{"range":"2145","text":"2118"},{"range":"2146","text":"2118"},"'metamaskWallet' is defined but never used.","'walletConnet' is defined but never used.","'bsc' is defined but never used.","'bsctestnet' is defined but never used.","'doc' is defined but never used.","'deposit' is defined but never used.","'referral' is defined but never used.","'wall3' is defined but never used.","'getUnsold' is defined but never used.","'getUnsoldtokentrending' is defined but never used.","'gettrendingdisplayhook' is defined but never used.","'getSaleAddress' is defined but never used.","Duplicate key 'userFee'.","'i' is assigned a value but never used.","Unnecessarily computed property [\"tokenaddress\"] found.",{"range":"2147","text":"2148"},"Unnecessarily computed property [\"presale\"] found.",{"range":"2149","text":"2150"},{"range":"2151","text":"2150"},"Unnecessarily computed property [\"softcap\"] found.",{"range":"2152","text":"2153"},{"range":"2154","text":"2153"},"Unnecessarily computed property [\"hardcap\"] found.",{"range":"2155","text":"2156"},{"range":"2157","text":"2153"},{"range":"2158","text":"2153"},{"range":"2159","text":"2153"},{"range":"2160","text":"2156"},{"range":"2161","text":"2156"},{"range":"2162","text":"2156"},{"range":"2163","text":"2156"},{"range":"2164","text":"2153"},"Unnecessarily computed property [\"min\"] found.",{"range":"2165","text":"2166"},{"range":"2167","text":"2166"},{"range":"2168","text":"2166"},{"range":"2169","text":"2166"},{"range":"2170","text":"2166"},"Unnecessarily computed property [\"max\"] found.",{"range":"2171","text":"2172"},{"range":"2173","text":"2172"},{"range":"2174","text":"2172"},{"range":"2175","text":"2172"},{"range":"2176","text":"2172"},"Unnecessarily computed property [\"lockingday\"] found.",{"range":"2177","text":"2178"},{"range":"2179","text":"2178"},"Unnecessarily computed property [\"listingrate\"] found.",{"range":"2180","text":"2181"},{"range":"2182","text":"2181"},"Unnecessarily computed property [\"liquidity\"] found.",{"range":"2183","text":"2184"},{"range":"2185","text":"2184"},"Unnecessarily computed property [\"startdate\"] found.",{"range":"2186","text":"2187"},"Unnecessarily computed property [\"enddate\"] found.",{"range":"2188","text":"2189"},{"range":"2190","text":"2189"},{"range":"2191","text":"2187"},{"range":"2192","text":"2189"},"Unnecessarily computed property [\"vestinterval\"] found.",{"range":"2193","text":"2194"},{"range":"2195","text":"2194"},"Unnecessarily computed property [\"vestpercent\"] found.",{"range":"2196","text":"2197"},{"range":"2198","text":"2197"},"Unnecessarily computed property [\"logo\"] found.",{"range":"2199","text":"2200"},{"range":"2201","text":"2200"},"Unnecessarily computed property [\"website\"] found.",{"range":"2202","text":"2203"},{"range":"2204","text":"2203"},"Unnecessarily computed property [\"facebook\"] found.",{"range":"2205","text":"2206"},{"range":"2207","text":"2206"},"Unnecessarily computed property [\"twitter\"] found.",{"range":"2208","text":"2209"},{"range":"2210","text":"2209"},"Unnecessarily computed property [\"github\"] found.",{"range":"2211","text":"2212"},{"range":"2213","text":"2212"},"Unnecessarily computed property [\"telegram\"] found.",{"range":"2214","text":"2215"},{"range":"2216","text":"2215"},"Unnecessarily computed property [\"instagram\"] found.",{"range":"2217","text":"2218"},{"range":"2219","text":"2218"},"Unnecessarily computed property [\"discord\"] found.",{"range":"2220","text":"2221"},{"range":"2222","text":"2221"},"Unnecessarily computed property [\"reddit\"] found.",{"range":"2223","text":"2224"},{"range":"2225","text":"2224"},"Unnecessarily computed property [\"youtube\"] found.",{"range":"2226","text":"2227"},{"range":"2228","text":"2227"},"Unnecessarily computed property [\"description\"] found.",{"range":"2229","text":"2230"},{"range":"2231","text":"2230"},"'img1' is defined but never used.","'img2' is defined but never used.","'img3' is defined but never used.","'viewlist' is assigned a value but never used.","'openstatus' is assigned a value but never used.","'useWeb3' is defined but never used.","'API_URL' is defined but never used.","'ERC20_ADDRESS' is defined but never used.","'PROXY_SALE' is defined but never used.","'FUND_RECEIVER' is defined but never used.","'TOKEN_FEE' is defined but never used.","'CURRENT_RPC_URL' is defined but never used.","'DEPLOYMENT_FEE' is defined but never used.","'STANDARD_TOKEN_BYTECODE' is defined but never used.","'LIQUIDITY_TOKEN_BYTECODE' is defined but never used.","'LIQUIDITY_TOKEN_DEPLOYMENT_FEE' is defined but never used.","'LOCK_ADDRESS' is defined but never used.","'hash' is assigned a value but never used.","Unexpected whitespace before property on.",{"range":"2232","text":"2233"},"'deployfee' is assigned a value but never used.",{"range":"2234","text":"2233"},"Unexpected whitespace before property LPAddress.",{"range":"2235","text":"2233"},{"range":"2236","text":"2233"},"'ERC20_ABI' is defined but never used.","'DECIMAL' is defined but never used.","'PROXY_SALE_ABI' is defined but never used.","'SALE_ABI' is defined but never used.","'getSaleInfo' is defined but never used.","'UseSale' is defined but never used.","'ONEDAYINSECONDS' is defined but never used.","'Accordion' is defined but never used.","'isValid' is assigned a value but never used.","'rx' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","unnecessaryEscape",["2237","2238"],["2239","2240"],"Unnecessary escape character: \\..",["2241","2242"],"Unnecessary escape character: \\+.",["2243","2244"],["2245","2246"],"'HC' is defined but never used.","'getSaleInfoCard' is defined but never used.","'isSaleLive' is defined but never used.","'tokenfilter' is assigned a value but never used.","'hcfilter' is assigned a value but never used.","'coinfilter' is assigned a value but never used.","'statusfilter' is assigned a value but never used.","'HC' is assigned a value but never used.","'valid' is already defined.","'sortedarray' is assigned a value but never used.","'fil' is already defined.","'filterdata' is already defined.","'web3' is assigned a value but never used.","'data' is already defined.","'usercontribute' is assigned a value but never used.","'eth' is defined but never used.","'ropsten' is defined but never used.","'RPC_URL' is assigned a value but never used.","'CHAIN_ID' is assigned a value but never used.","'user' is assigned a value but never used.","'chainId' is assigned a value but never used.","'getChainId' is defined but never used.","'Toast' is defined but never used.","'reject' is assigned a value but never used.","Duplicate key 'currency'.",{"range":"2247","text":"2148"},{"range":"2248","text":"2156"},{"range":"2249","text":"2156"},{"range":"2250","text":"2156"},{"range":"2251","text":"2156"},{"range":"2252","text":"2153"},{"range":"2253","text":"2153"},{"range":"2254","text":"2153"},{"range":"2255","text":"2153"},{"range":"2256","text":"2153"},{"range":"2257","text":"2166"},{"range":"2258","text":"2166"},{"range":"2259","text":"2166"},{"range":"2260","text":"2166"},{"range":"2261","text":"2166"},{"range":"2262","text":"2172"},{"range":"2263","text":"2172"},{"range":"2264","text":"2172"},{"range":"2265","text":"2172"},{"range":"2266","text":"2172"},{"range":"2267","text":"2178"},{"range":"2268","text":"2178"},{"range":"2269","text":"2184"},{"range":"2270","text":"2184"},{"range":"2271","text":"2187"},{"range":"2272","text":"2189"},{"range":"2273","text":"2189"},{"range":"2274","text":"2187"},{"range":"2275","text":"2189"},{"range":"2276","text":"2194"},{"range":"2277","text":"2194"},{"range":"2278","text":"2197"},{"range":"2279","text":"2197"},{"range":"2280","text":"2200"},{"range":"2281","text":"2200"},{"range":"2282","text":"2203"},{"range":"2283","text":"2203"},{"range":"2284","text":"2206"},{"range":"2285","text":"2206"},{"range":"2286","text":"2209"},{"range":"2287","text":"2209"},{"range":"2288","text":"2212"},{"range":"2289","text":"2212"},{"range":"2290","text":"2215"},{"range":"2291","text":"2215"},{"range":"2292","text":"2218"},{"range":"2293","text":"2218"},{"range":"2294","text":"2221"},{"range":"2295","text":"2221"},{"range":"2296","text":"2224"},{"range":"2297","text":"2224"},{"range":"2298","text":"2227"},{"range":"2299","text":"2227"},{"range":"2300","text":"2230"},{"range":"2301","text":"2230"},"'valueone' is assigned a value but never used.","'setValueOne' is assigned a value but never used.","'IsValidAddress' is defined but never used.","'Withtokenaddress' is assigned a value but never used.",{"range":"2302","text":"2148"},{"range":"2303","text":"2150"},{"range":"2304","text":"2150"},{"range":"2305","text":"2153"},{"range":"2306","text":"2153"},{"range":"2307","text":"2153"},{"range":"2308","text":"2156"},{"range":"2309","text":"2153"},{"range":"2310","text":"2153"},{"range":"2311","text":"2153"},{"range":"2312","text":"2156"},{"range":"2313","text":"2156"},{"range":"2314","text":"2156"},{"range":"2315","text":"2156"},{"range":"2316","text":"2153"},{"range":"2317","text":"2166"},{"range":"2318","text":"2166"},{"range":"2319","text":"2166"},{"range":"2320","text":"2166"},{"range":"2321","text":"2166"},{"range":"2322","text":"2172"},{"range":"2323","text":"2172"},{"range":"2324","text":"2172"},{"range":"2325","text":"2172"},{"range":"2326","text":"2172"},{"range":"2327","text":"2178"},{"range":"2328","text":"2178"},{"range":"2329","text":"2181"},{"range":"2330","text":"2181"},{"range":"2331","text":"2184"},{"range":"2332","text":"2184"},{"range":"2333","text":"2187"},{"range":"2334","text":"2187"},{"range":"2335","text":"2189"},{"range":"2336","text":"2189"},{"range":"2337","text":"2189"},{"range":"2338","text":"2187"},{"range":"2339","text":"2189"},{"range":"2340","text":"2194"},{"range":"2341","text":"2194"},{"range":"2342","text":"2197"},{"range":"2343","text":"2197"},{"range":"2344","text":"2200"},{"range":"2345","text":"2200"},{"range":"2346","text":"2203"},{"range":"2347","text":"2203"},{"range":"2348","text":"2206"},{"range":"2349","text":"2206"},{"range":"2350","text":"2209"},{"range":"2351","text":"2209"},{"range":"2352","text":"2212"},{"range":"2353","text":"2212"},{"range":"2354","text":"2215"},{"range":"2355","text":"2215"},{"range":"2356","text":"2218"},{"range":"2357","text":"2218"},{"range":"2358","text":"2221"},{"range":"2359","text":"2221"},{"range":"2360","text":"2224"},{"range":"2361","text":"2224"},{"range":"2362","text":"2227"},{"range":"2363","text":"2227"},{"range":"2364","text":"2230"},{"range":"2365","text":"2230"},[47981,47981]," rel=\"noreferrer\"",[48080,48080],[48179,48179],[50728,50728],[50827,50827],[50926,50926],[6769,6769],[21867,21867],[47574,47574],[47673,47673],[47772,47772],[50253,50253],[50352,50352],[50451,50451],[14733,14745],"\"locktime\"",[15013,15025],[15234,15246],[4612,4612],[16886,16886],[31020,31020],[35502,35505],"?.",[38373,38376],[7764,7764],[32525,32525],[13812,13812],[14181,14181],[14549,14549],[6104,6120],"\"tokenaddress\"",[30555,30566],"\"presale\"",[30831,30842],[33378,33389],"\"softcap\"",[33793,33804],[34152,34163],"\"hardcap\"",[34170,34181],[34430,34441],[34721,34732],[35947,35958],[36345,36356],[36738,36749],[37369,37380],[37670,37681],[38838,38845],"\"min\"",[39133,39140],[39408,39415],[39760,39767],[40034,40041],[41098,41105],"\"max\"",[41393,41400],[41668,41675],[42029,42036],[42319,42326],[45468,45482],"\"lockingday\"",[45739,45753],[47025,47040],"\"listingrate\"",[47333,47348],[48790,48803],"\"liquidity\"",[49087,49100],[52261,52274],"\"startdate\"",[52668,52679],"\"enddate\"",[56232,56243],[56818,56831],[57037,57048],[59575,59591],"\"vestinterval\"",[59855,59871],[61159,61174],"\"vestpercent\"",[61465,61480],[63792,63800],"\"logo\"",[64035,64043],[65364,65375],"\"website\"",[65610,65621],[66938,66950],"\"facebook\"",[67201,67213],[68288,68299],"\"twitter\"",[68534,68545],[69848,69858],"\"github\"",[70109,70119],[71193,71205],"\"telegram\"",[71440,71452],[72769,72782],"\"instagram\"",[73033,73046],[74261,74272],"\"discord\"",[74523,74534],[75765,75775],"\"reddit\"",[76026,76036],[77256,77267],"\"youtube\"",[77518,77529],[78757,78772],"\"description\"",[79027,79042],[13050,13052],".",[16697,16699],[25003,25005],[26505,26507],{"messageId":"2366","fix":"2367","desc":"2368"},{"messageId":"2369","fix":"2370","desc":"2371"},{"messageId":"2366","fix":"2372","desc":"2368"},{"messageId":"2369","fix":"2373","desc":"2371"},{"messageId":"2366","fix":"2374","desc":"2368"},{"messageId":"2369","fix":"2375","desc":"2371"},{"messageId":"2366","fix":"2376","desc":"2368"},{"messageId":"2369","fix":"2377","desc":"2371"},{"messageId":"2366","fix":"2378","desc":"2368"},{"messageId":"2369","fix":"2379","desc":"2371"},[15461,15477],[31344,31355],[33062,33073],[33360,33371],[33675,33686],[36074,36085],[36495,36506],[36782,36793],[37084,37095],[37353,37364],[39105,39112],[39400,39407],[39675,39682],[40027,40034],[40301,40308],[41365,41372],[41660,41667],[41935,41942],[42296,42303],[42586,42593],[45743,45757],[46014,46028],[49073,49086],[49370,49383],[52544,52557],[52951,52962],[56363,56374],[56770,56783],[56989,57000],[59527,59543],[59807,59823],[61111,61126],[61417,61432],[63746,63754],[63989,63997],[65318,65329],[65564,65575],[66892,66904],[67155,67167],[68242,68253],[68488,68499],[69802,69812],[70063,70073],[71147,71159],[71394,71406],[72723,72736],[72987,73000],[74215,74226],[74477,74488],[75719,75729],[75980,75990],[77210,77221],[77472,77483],[78711,78726],[78981,78996],[16339,16355],[30459,30470],[30731,30742],[33486,33497],[33806,33817],[34216,34227],[34571,34582],[34589,34600],[34845,34856],[35131,35142],[36335,36346],[36730,36741],[37118,37129],[37741,37752],[38037,38048],[39219,39226],[39510,39517],[39781,39788],[40128,40135],[40398,40405],[41425,41432],[41716,41723],[41987,41994],[42343,42350],[42629,42636],[44949,44963],[45216,45230],[46480,46495],[46784,46799],[48219,48232],[48512,48525],[50692,50705],[51850,51863],[52253,52264],[54756,54767],[56005,56016],[56585,56598],[56802,56813],[61056,61072],[61332,61348],[62615,62630],[62917,62932],[65515,65523],[65754,65762],[67060,67071],[67302,67313],[68609,68621],[68868,68880],[69936,69947],[70178,70189],[71470,71480],[71727,71737],[72792,72804],[73035,73047],[74342,74355],[74602,74615],[75809,75820],[76067,76078],[77288,77298],[77545,77555],[78754,78765],[79012,79023],[80228,80243],[80494,80509],"removeEscape",{"range":"2380","text":"2381"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"2382","text":"2383"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"2384","text":"2381"},{"range":"2385","text":"2383"},{"range":"2386","text":"2381"},{"range":"2387","text":"2383"},{"range":"2388","text":"2381"},{"range":"2389","text":"2383"},{"range":"2390","text":"2381"},{"range":"2391","text":"2383"},[10845,10846],"",[10845,10845],"\\",[10847,10848],[10847,10847],[10853,10854],[10853,10853],[10871,10872],[10871,10871],[10914,10915],[10914,10914]]